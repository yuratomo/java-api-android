call javaapi#namespace('org.xmlpull.v1')

call javaapi#interface('XmlPullParser', '', [
  \ javaapi#field(1,'NO_NAMESPACE', 'String'),
  \ javaapi#field(1,'START_DOCUMENT', 'int'),
  \ javaapi#field(1,'END_DOCUMENT', 'int'),
  \ javaapi#field(1,'START_TAG', 'int'),
  \ javaapi#field(1,'END_TAG', 'int'),
  \ javaapi#field(1,'TEXT', 'int'),
  \ javaapi#field(1,'CDSECT', 'int'),
  \ javaapi#field(1,'ENTITY_REF', 'int'),
  \ javaapi#field(1,'IGNORABLE_WHITESPACE', 'int'),
  \ javaapi#field(1,'PROCESSING_INSTRUCTION', 'int'),
  \ javaapi#field(1,'COMMENT', 'int'),
  \ javaapi#field(1,'DOCDECL', 'int'),
  \ javaapi#field(1,'TYPES', 'String[]'),
  \ javaapi#field(1,'FEATURE_PROCESS_NAMESPACES', 'String'),
  \ javaapi#field(1,'FEATURE_REPORT_NAMESPACE_ATTRIBUTES', 'String'),
  \ javaapi#field(1,'FEATURE_PROCESS_DOCDECL', 'String'),
  \ javaapi#field(1,'FEATURE_VALIDATION', 'String'),
  \ javaapi#method(0,'setFeature(', 'String, boolean) throws XmlPullParserException', 'void'),
  \ javaapi#method(0,'getFeature(', 'String)', 'boolean'),
  \ javaapi#method(0,'setProperty(', 'String, Object) throws XmlPullParserException', 'void'),
  \ javaapi#method(0,'getProperty(', 'String)', 'Object'),
  \ javaapi#method(0,'setInput(', 'Reader) throws XmlPullParserException', 'void'),
  \ javaapi#method(0,'setInput(', 'InputStream, String) throws XmlPullParserException', 'void'),
  \ javaapi#method(0,'getInputEncoding(', ')', 'String'),
  \ javaapi#method(0,'defineEntityReplacementText(', 'String, String) throws XmlPullParserException', 'void'),
  \ javaapi#method(0,'getNamespaceCount(', 'int) throws XmlPullParserException', 'int'),
  \ javaapi#method(0,'getNamespacePrefix(', 'int) throws XmlPullParserException', 'String'),
  \ javaapi#method(0,'getNamespaceUri(', 'int) throws XmlPullParserException', 'String'),
  \ javaapi#method(0,'getNamespace(', 'String)', 'String'),
  \ javaapi#method(0,'getDepth(', ')', 'int'),
  \ javaapi#method(0,'getPositionDescription(', ')', 'String'),
  \ javaapi#method(0,'getLineNumber(', ')', 'int'),
  \ javaapi#method(0,'getColumnNumber(', ')', 'int'),
  \ javaapi#method(0,'isWhitespace(', ') throws XmlPullParserException', 'boolean'),
  \ javaapi#method(0,'getText(', ')', 'String'),
  \ javaapi#method(0,'getTextCharacters(', 'int[])', 'char[]'),
  \ javaapi#method(0,'getNamespace(', ')', 'String'),
  \ javaapi#method(0,'getName(', ')', 'String'),
  \ javaapi#method(0,'getPrefix(', ')', 'String'),
  \ javaapi#method(0,'isEmptyElementTag(', ') throws XmlPullParserException', 'boolean'),
  \ javaapi#method(0,'getAttributeCount(', ')', 'int'),
  \ javaapi#method(0,'getAttributeNamespace(', 'int)', 'String'),
  \ javaapi#method(0,'getAttributeName(', 'int)', 'String'),
  \ javaapi#method(0,'getAttributePrefix(', 'int)', 'String'),
  \ javaapi#method(0,'getAttributeType(', 'int)', 'String'),
  \ javaapi#method(0,'isAttributeDefault(', 'int)', 'boolean'),
  \ javaapi#method(0,'getAttributeValue(', 'int)', 'String'),
  \ javaapi#method(0,'getAttributeValue(', 'String, String)', 'String'),
  \ javaapi#method(0,'getEventType(', ') throws XmlPullParserException', 'int'),
  \ javaapi#method(0,'next(', ') throws XmlPullParserException, IOException', 'int'),
  \ javaapi#method(0,'nextToken(', ') throws XmlPullParserException, IOException', 'int'),
  \ javaapi#method(0,'require(', 'int, String, String) throws XmlPullParserException, IOException', 'void'),
  \ javaapi#method(0,'nextText(', ') throws XmlPullParserException, IOException', 'String'),
  \ javaapi#method(0,'nextTag(', ') throws XmlPullParserException, IOException', 'int'),
  \ ])

call javaapi#interface('XmlSerializer', '', [
  \ javaapi#method(0,'setFeature(', 'String, boolean) throws IllegalArgumentException, IllegalStateException', 'void'),
  \ javaapi#method(0,'getFeature(', 'String)', 'boolean'),
  \ javaapi#method(0,'setProperty(', 'String, Object) throws IllegalArgumentException, IllegalStateException', 'void'),
  \ javaapi#method(0,'getProperty(', 'String)', 'Object'),
  \ javaapi#method(0,'setOutput(', 'OutputStream, String) throws IOException, IllegalArgumentException, IllegalStateException', 'void'),
  \ javaapi#method(0,'setOutput(', 'Writer) throws IOException, IllegalArgumentException, IllegalStateException', 'void'),
  \ javaapi#method(0,'startDocument(', 'String, Boolean) throws IOException, IllegalArgumentException, IllegalStateException', 'void'),
  \ javaapi#method(0,'endDocument(', ') throws IOException, IllegalArgumentException, IllegalStateException', 'void'),
  \ javaapi#method(0,'setPrefix(', 'String, String) throws IOException, IllegalArgumentException, IllegalStateException', 'void'),
  \ javaapi#method(0,'getPrefix(', 'String, boolean) throws IllegalArgumentException', 'String'),
  \ javaapi#method(0,'getDepth(', ')', 'int'),
  \ javaapi#method(0,'getNamespace(', ')', 'String'),
  \ javaapi#method(0,'getName(', ')', 'String'),
  \ javaapi#method(0,'startTag(', 'String, String) throws IOException, IllegalArgumentException, IllegalStateException', 'XmlSerializer'),
  \ javaapi#method(0,'attribute(', 'String, String, String) throws IOException, IllegalArgumentException, IllegalStateException', 'XmlSerializer'),
  \ javaapi#method(0,'endTag(', 'String, String) throws IOException, IllegalArgumentException, IllegalStateException', 'XmlSerializer'),
  \ javaapi#method(0,'text(', 'String) throws IOException, IllegalArgumentException, IllegalStateException', 'XmlSerializer'),
  \ javaapi#method(0,'text(', 'char[], int, int) throws IOException, IllegalArgumentException, IllegalStateException', 'XmlSerializer'),
  \ javaapi#method(0,'cdsect(', 'String) throws IOException, IllegalArgumentException, IllegalStateException', 'void'),
  \ javaapi#method(0,'entityRef(', 'String) throws IOException, IllegalArgumentException, IllegalStateException', 'void'),
  \ javaapi#method(0,'processingInstruction(', 'String) throws IOException, IllegalArgumentException, IllegalStateException', 'void'),
  \ javaapi#method(0,'comment(', 'String) throws IOException, IllegalArgumentException, IllegalStateException', 'void'),
  \ javaapi#method(0,'docdecl(', 'String) throws IOException, IllegalArgumentException, IllegalStateException', 'void'),
  \ javaapi#method(0,'ignorableWhitespace(', 'String) throws IOException, IllegalArgumentException, IllegalStateException', 'void'),
  \ javaapi#method(0,'flush(', ') throws IOException', 'void'),
  \ ])

call javaapi#class('XmlPullParserFactory', '', [
  \ javaapi#field(1,'PROPERTY_NAME', 'String'),
  \ javaapi#method(0,'setFeature(', 'String, boolean) throws XmlPullParserException', 'void'),
  \ javaapi#method(0,'getFeature(', 'String)', 'boolean'),
  \ javaapi#method(0,'setNamespaceAware(', 'boolean)', 'void'),
  \ javaapi#method(0,'isNamespaceAware(', ')', 'boolean'),
  \ javaapi#method(0,'setValidating(', 'boolean)', 'void'),
  \ javaapi#method(0,'isValidating(', ')', 'boolean'),
  \ javaapi#method(0,'newPullParser(', ') throws XmlPullParserException', 'XmlPullParser'),
  \ javaapi#method(0,'newSerializer(', ') throws XmlPullParserException', 'XmlSerializer'),
  \ javaapi#method(1,'newInstance(', ') throws XmlPullParserException', 'XmlPullParserFactory'),
  \ javaapi#method(1,'newInstance(', 'String, Class) throws XmlPullParserException', 'XmlPullParserFactory'),
  \ ])

call javaapi#class('XmlPullParserException', '', [
  \ javaapi#method(0,'XmlPullParserException(', 'String)', 'public'),
  \ javaapi#method(0,'XmlPullParserException(', 'String, XmlPullParser, Throwable)', 'public'),
  \ javaapi#method(0,'getDetail(', ')', 'Throwable'),
  \ javaapi#method(0,'getLineNumber(', ')', 'int'),
  \ javaapi#method(0,'getColumnNumber(', ')', 'int'),
  \ javaapi#method(0,'printStackTrace(', ')', 'void'),
  \ ])

