call javaapi#namespace('android.os')

call javaapi#class('Status', '', [
  \ javaapi#field(1,'FINISHED', 'Status'),
  \ javaapi#field(1,'PENDING', 'Status'),
  \ javaapi#field(1,'RUNNING', 'Status'),
  \ javaapi#method(1,'values(', ')', 'Status[]'),
  \ javaapi#method(1,'valueOf(', 'String)', 'Status'),
  \ ])

call javaapi#class('ResultReceiver', 'Parcelable', [
  \ javaapi#field(1,'CREATOR', 'ResultReceiver>'),
  \ javaapi#method(0,'ResultReceiver(', 'Handler)', 'public'),
  \ javaapi#method(0,'send(', 'int, Bundle)', 'void'),
  \ javaapi#method(0,'describeContents(', ')', 'int'),
  \ javaapi#method(0,'writeToParcel(', 'Parcel, int)', 'void'),
  \ ])

call javaapi#interface('Creator<T>', '', [
  \ javaapi#method(0,'createFromParcel(', 'Parcel)', 'T'),
  \ javaapi#method(0,'newArray(', 'int)', 'T[]'),
  \ ])

call javaapi#class('UserManager', '', [
  \ javaapi#method(0,'getUserName(', ')', 'String'),
  \ javaapi#method(0,'isUserAGoat(', ')', 'boolean'),
  \ javaapi#method(0,'isUserRunning(', 'UserHandle)', 'boolean'),
  \ javaapi#method(0,'isUserRunningOrStopping(', 'UserHandle)', 'boolean'),
  \ javaapi#method(0,'getSerialNumberForUser(', 'UserHandle)', 'long'),
  \ javaapi#method(0,'getUserForSerialNumber(', 'long)', 'UserHandle'),
  \ javaapi#method(0,'getUserCount(', ')', 'int'),
  \ ])

call javaapi#interface('ClassLoaderCreator<T>', '', [
  \ javaapi#method(0,'createFromParcel(', 'Parcel, ClassLoader)', 'T'),
  \ ])

call javaapi#interface('ProgressListener', '', [
  \ javaapi#method(0,'onProgress(', 'int)', 'void'),
  \ ])

call javaapi#class('WakeLock', '', [
  \ javaapi#method(0,'setReferenceCounted(', 'boolean)', 'void'),
  \ javaapi#method(0,'acquire(', ')', 'void'),
  \ javaapi#method(0,'acquire(', 'long)', 'void'),
  \ javaapi#method(0,'release(', ')', 'void'),
  \ javaapi#method(0,'isHeld(', ')', 'boolean'),
  \ javaapi#method(0,'setWorkSource(', 'WorkSource)', 'void'),
  \ javaapi#method(0,'toString(', ')', 'String'),
  \ ])

call javaapi#class('WorkSource', 'Parcelable', [
  \ javaapi#field(1,'CREATOR', 'WorkSource>'),
  \ javaapi#method(0,'WorkSource(', ')', 'public'),
  \ javaapi#method(0,'WorkSource(', 'WorkSource)', 'public'),
  \ javaapi#method(0,'clear(', ')', 'void'),
  \ javaapi#method(0,'equals(', 'Object)', 'boolean'),
  \ javaapi#method(0,'hashCode(', ')', 'int'),
  \ javaapi#method(0,'diff(', 'WorkSource)', 'boolean'),
  \ javaapi#method(0,'set(', 'WorkSource)', 'void'),
  \ javaapi#method(0,'add(', 'WorkSource)', 'boolean'),
  \ javaapi#method(0,'remove(', 'WorkSource)', 'boolean'),
  \ javaapi#method(0,'describeContents(', ')', 'int'),
  \ javaapi#method(0,'writeToParcel(', 'Parcel, int)', 'void'),
  \ javaapi#method(0,'toString(', ')', 'String'),
  \ ])

call javaapi#class('ConditionVariable', '', [
  \ javaapi#method(0,'ConditionVariable(', ')', 'public'),
  \ javaapi#method(0,'ConditionVariable(', 'boolean)', 'public'),
  \ javaapi#method(0,'open(', ')', 'void'),
  \ javaapi#method(0,'close(', ')', 'void'),
  \ javaapi#method(0,'block(', ')', 'void'),
  \ javaapi#method(0,'block(', 'long)', 'boolean'),
  \ ])

call javaapi#class('StrictMode', '', [
  \ javaapi#method(1,'setThreadPolicy(', 'ThreadPolicy)', 'void'),
  \ javaapi#method(1,'getThreadPolicy(', ')', 'ThreadPolicy'),
  \ javaapi#method(1,'allowThreadDiskWrites(', ')', 'ThreadPolicy'),
  \ javaapi#method(1,'allowThreadDiskReads(', ')', 'ThreadPolicy'),
  \ javaapi#method(1,'setVmPolicy(', 'VmPolicy)', 'void'),
  \ javaapi#method(1,'getVmPolicy(', ')', 'VmPolicy'),
  \ javaapi#method(1,'enableDefaults(', ')', 'void'),
  \ javaapi#method(1,'noteSlowCall(', 'String)', 'void'),
  \ ])

call javaapi#class('MemoryFile', '', [
  \ javaapi#method(0,'MemoryFile(', 'String, int) throws IOException', 'public'),
  \ javaapi#method(0,'close(', ')', 'void'),
  \ javaapi#method(0,'length(', ')', 'int'),
  \ javaapi#method(0,'isPurgingAllowed(', ')', 'boolean'),
  \ javaapi#method(0,'allowPurging(', 'boolean) throws IOException', 'boolean'),
  \ javaapi#method(0,'getInputStream(', ')', 'InputStream'),
  \ javaapi#method(0,'getOutputStream(', ')', 'OutputStream'),
  \ javaapi#method(0,'readBytes(', 'byte[], int, int, int) throws IOException', 'int'),
  \ javaapi#method(0,'writeBytes(', 'byte[], int, int, int) throws IOException', 'void'),
  \ ])

call javaapi#class('Entry', 'Closeable', [
  \ javaapi#field(1,'CREATOR', 'Entry>'),
  \ javaapi#method(0,'Entry(', 'String, long)', 'public'),
  \ javaapi#method(0,'Entry(', 'String, long, String)', 'public'),
  \ javaapi#method(0,'Entry(', 'String, long, byte[], int)', 'public'),
  \ javaapi#method(0,'Entry(', 'String, long, ParcelFileDescriptor, int)', 'public'),
  \ javaapi#method(0,'Entry(', 'String, long, File, int) throws IOException', 'public'),
  \ javaapi#method(0,'close(', ')', 'void'),
  \ javaapi#method(0,'getTag(', ')', 'String'),
  \ javaapi#method(0,'getTimeMillis(', ')', 'long'),
  \ javaapi#method(0,'getFlags(', ')', 'int'),
  \ javaapi#method(0,'getText(', 'int)', 'String'),
  \ javaapi#method(0,'getInputStream(', ') throws IOException', 'InputStream'),
  \ javaapi#method(0,'describeContents(', ')', 'int'),
  \ javaapi#method(0,'writeToParcel(', 'Parcel, int)', 'void'),
  \ ])

call javaapi#class('VERSION', '', [
  \ javaapi#field(1,'INCREMENTAL', 'String'),
  \ javaapi#field(1,'RELEASE', 'String'),
  \ javaapi#field(1,'SDK', 'String'),
  \ javaapi#field(1,'SDK_INT', 'int'),
  \ javaapi#field(1,'CODENAME', 'String'),
  \ javaapi#method(0,'VERSION(', ')', 'public'),
  \ ])

call javaapi#class('RemoteException', '', [
  \ javaapi#method(0,'RemoteException(', ')', 'public'),
  \ javaapi#method(0,'RemoteException(', 'String)', 'public'),
  \ ])

call javaapi#class('ThreadPolicy', '', [
  \ javaapi#field(1,'LAX', 'ThreadPolicy'),
  \ javaapi#method(0,'toString(', ')', 'String'),
  \ ])

call javaapi#class('BadParcelableException', '', [
  \ javaapi#method(0,'BadParcelableException(', 'String)', 'public'),
  \ javaapi#method(0,'BadParcelableException(', 'Exception)', 'public'),
  \ ])

call javaapi#class('AsyncTask<Params,Progress,Result>', '', [
  \ javaapi#field(1,'THREAD_POOL_EXECUTOR', 'Executor'),
  \ javaapi#field(1,'SERIAL_EXECUTOR', 'Executor'),
  \ javaapi#method(0,'AsyncTask(', ')', 'public'),
  \ javaapi#method(0,'getStatus(', ')', 'Status'),
  \ javaapi#method(0,'isCancelled(', ')', 'boolean'),
  \ javaapi#method(0,'cancel(', 'boolean)', 'boolean'),
  \ javaapi#method(0,'get(', ') throws InterruptedException, ExecutionException', 'Result'),
  \ javaapi#method(0,'get(', 'long, TimeUnit) throws InterruptedException, ExecutionException, TimeoutException', 'Result'),
  \ javaapi#method(0,'execute(', ')', 'Result>'),
  \ javaapi#method(0,'executeOnExecutor(', 'Executor, )', 'Result>'),
  \ javaapi#method(1,'execute(', 'Runnable)', 'void'),
  \ ])

call javaapi#class('Debug', '', [
  \ javaapi#field(1,'TRACE_COUNT_ALLOCS', 'int'),
  \ javaapi#field(1,'SHOW_FULL_DETAIL', 'int'),
  \ javaapi#field(1,'SHOW_CLASSLOADER', 'int'),
  \ javaapi#field(1,'SHOW_INITIALIZED', 'int'),
  \ javaapi#method(1,'waitForDebugger(', ')', 'void'),
  \ javaapi#method(1,'waitingForDebugger(', ')', 'boolean'),
  \ javaapi#method(1,'isDebuggerConnected(', ')', 'boolean'),
  \ javaapi#method(1,'changeDebugPort(', 'int)', 'void'),
  \ javaapi#method(1,'startNativeTracing(', ')', 'void'),
  \ javaapi#method(1,'stopNativeTracing(', ')', 'void'),
  \ javaapi#method(1,'enableEmulatorTraceOutput(', ')', 'void'),
  \ javaapi#method(1,'startMethodTracing(', ')', 'void'),
  \ javaapi#method(1,'startMethodTracing(', 'String)', 'void'),
  \ javaapi#method(1,'startMethodTracing(', 'String, int)', 'void'),
  \ javaapi#method(1,'startMethodTracing(', 'String, int, int)', 'void'),
  \ javaapi#method(1,'stopMethodTracing(', ')', 'void'),
  \ javaapi#method(1,'threadCpuTimeNanos(', ')', 'long'),
  \ javaapi#method(1,'startAllocCounting(', ')', 'void'),
  \ javaapi#method(1,'stopAllocCounting(', ')', 'void'),
  \ javaapi#method(1,'getGlobalAllocCount(', ')', 'int'),
  \ javaapi#method(1,'getGlobalAllocSize(', ')', 'int'),
  \ javaapi#method(1,'getGlobalFreedCount(', ')', 'int'),
  \ javaapi#method(1,'getGlobalFreedSize(', ')', 'int'),
  \ javaapi#method(1,'getGlobalClassInitCount(', ')', 'int'),
  \ javaapi#method(1,'getGlobalClassInitTime(', ')', 'int'),
  \ javaapi#method(1,'getGlobalExternalAllocCount(', ')', 'int'),
  \ javaapi#method(1,'getGlobalExternalAllocSize(', ')', 'int'),
  \ javaapi#method(1,'getGlobalExternalFreedCount(', ')', 'int'),
  \ javaapi#method(1,'getGlobalExternalFreedSize(', ')', 'int'),
  \ javaapi#method(1,'getGlobalGcInvocationCount(', ')', 'int'),
  \ javaapi#method(1,'getThreadAllocCount(', ')', 'int'),
  \ javaapi#method(1,'getThreadAllocSize(', ')', 'int'),
  \ javaapi#method(1,'getThreadExternalAllocCount(', ')', 'int'),
  \ javaapi#method(1,'getThreadExternalAllocSize(', ')', 'int'),
  \ javaapi#method(1,'getThreadGcInvocationCount(', ')', 'int'),
  \ javaapi#method(1,'resetGlobalAllocCount(', ')', 'void'),
  \ javaapi#method(1,'resetGlobalAllocSize(', ')', 'void'),
  \ javaapi#method(1,'resetGlobalFreedCount(', ')', 'void'),
  \ javaapi#method(1,'resetGlobalFreedSize(', ')', 'void'),
  \ javaapi#method(1,'resetGlobalClassInitCount(', ')', 'void'),
  \ javaapi#method(1,'resetGlobalClassInitTime(', ')', 'void'),
  \ javaapi#method(1,'resetGlobalExternalAllocCount(', ')', 'void'),
  \ javaapi#method(1,'resetGlobalExternalAllocSize(', ')', 'void'),
  \ javaapi#method(1,'resetGlobalExternalFreedCount(', ')', 'void'),
  \ javaapi#method(1,'resetGlobalExternalFreedSize(', ')', 'void'),
  \ javaapi#method(1,'resetGlobalGcInvocationCount(', ')', 'void'),
  \ javaapi#method(1,'resetThreadAllocCount(', ')', 'void'),
  \ javaapi#method(1,'resetThreadAllocSize(', ')', 'void'),
  \ javaapi#method(1,'resetThreadExternalAllocCount(', ')', 'void'),
  \ javaapi#method(1,'resetThreadExternalAllocSize(', ')', 'void'),
  \ javaapi#method(1,'resetThreadGcInvocationCount(', ')', 'void'),
  \ javaapi#method(1,'resetAllCounts(', ')', 'void'),
  \ javaapi#method(1,'getNativeHeapSize(', ')', 'long'),
  \ javaapi#method(1,'getNativeHeapAllocatedSize(', ')', 'long'),
  \ javaapi#method(1,'getNativeHeapFreeSize(', ')', 'long'),
  \ javaapi#method(1,'getMemoryInfo(', 'MemoryInfo)', 'void'),
  \ javaapi#method(1,'getPss(', ')', 'long'),
  \ javaapi#method(1,'setAllocationLimit(', 'int)', 'int'),
  \ javaapi#method(1,'setGlobalAllocationLimit(', 'int)', 'int'),
  \ javaapi#method(1,'printLoadedClasses(', 'int)', 'void'),
  \ javaapi#method(1,'getLoadedClassCount(', ')', 'int'),
  \ javaapi#method(1,'dumpHprofData(', 'String) throws IOException', 'void'),
  \ javaapi#method(1,'getBinderSentTransactions(', ')', 'int'),
  \ javaapi#method(1,'getBinderReceivedTransactions(', ')', 'int'),
  \ javaapi#method(1,'getBinderLocalObjectCount(', ')', 'int'),
  \ javaapi#method(1,'getBinderProxyObjectCount(', ')', 'int'),
  \ javaapi#method(1,'getBinderDeathObjectCount(', ')', 'int'),
  \ javaapi#method(1,'dumpService(', 'String, FileDescriptor, String[])', 'boolean'),
  \ ])

call javaapi#interface('DeathRecipient', '', [
  \ javaapi#method(0,'binderDied(', ')', 'void'),
  \ ])

call javaapi#class('PatternMatcher', 'Parcelable', [
  \ javaapi#field(1,'PATTERN_LITERAL', 'int'),
  \ javaapi#field(1,'PATTERN_PREFIX', 'int'),
  \ javaapi#field(1,'PATTERN_SIMPLE_GLOB', 'int'),
  \ javaapi#field(1,'CREATOR', 'PatternMatcher>'),
  \ javaapi#method(0,'PatternMatcher(', 'String, int)', 'public'),
  \ javaapi#method(0,'PatternMatcher(', 'Parcel)', 'public'),
  \ javaapi#method(0,'getPath(', ')', 'String'),
  \ javaapi#method(0,'getType(', ')', 'int'),
  \ javaapi#method(0,'match(', 'String)', 'boolean'),
  \ javaapi#method(0,'toString(', ')', 'String'),
  \ javaapi#method(0,'describeContents(', ')', 'int'),
  \ javaapi#method(0,'writeToParcel(', 'Parcel, int)', 'void'),
  \ ])

call javaapi#class('TransactionTooLargeException', '', [
  \ javaapi#method(0,'TransactionTooLargeException(', ')', 'public'),
  \ ])

call javaapi#class('Bundle', 'Cloneable', [
  \ javaapi#field(1,'EMPTY', 'Bundle'),
  \ javaapi#field(1,'CREATOR', 'Bundle>'),
  \ javaapi#method(0,'Bundle(', ')', 'public'),
  \ javaapi#method(0,'Bundle(', 'ClassLoader)', 'public'),
  \ javaapi#method(0,'Bundle(', 'int)', 'public'),
  \ javaapi#method(0,'Bundle(', 'Bundle)', 'public'),
  \ javaapi#method(0,'setClassLoader(', 'ClassLoader)', 'void'),
  \ javaapi#method(0,'getClassLoader(', ')', 'ClassLoader'),
  \ javaapi#method(0,'clone(', ')', 'Object'),
  \ javaapi#method(0,'size(', ')', 'int'),
  \ javaapi#method(0,'isEmpty(', ')', 'boolean'),
  \ javaapi#method(0,'clear(', ')', 'void'),
  \ javaapi#method(0,'containsKey(', 'String)', 'boolean'),
  \ javaapi#method(0,'get(', 'String)', 'Object'),
  \ javaapi#method(0,'remove(', 'String)', 'void'),
  \ javaapi#method(0,'putAll(', 'Bundle)', 'void'),
  \ javaapi#method(0,'keySet(', ')', 'String>'),
  \ javaapi#method(0,'hasFileDescriptors(', ')', 'boolean'),
  \ javaapi#method(0,'putBoolean(', 'String, boolean)', 'void'),
  \ javaapi#method(0,'putByte(', 'String, byte)', 'void'),
  \ javaapi#method(0,'putChar(', 'String, char)', 'void'),
  \ javaapi#method(0,'putShort(', 'String, short)', 'void'),
  \ javaapi#method(0,'putInt(', 'String, int)', 'void'),
  \ javaapi#method(0,'putLong(', 'String, long)', 'void'),
  \ javaapi#method(0,'putFloat(', 'String, float)', 'void'),
  \ javaapi#method(0,'putDouble(', 'String, double)', 'void'),
  \ javaapi#method(0,'putString(', 'String, String)', 'void'),
  \ javaapi#method(0,'putCharSequence(', 'String, CharSequence)', 'void'),
  \ javaapi#method(0,'putParcelable(', 'String, Parcelable)', 'void'),
  \ javaapi#method(0,'putParcelableArray(', 'String, Parcelable[])', 'void'),
  \ javaapi#method(0,'putParcelableArrayList(', 'String, ArrayList<? extends Parcelable>)', 'void'),
  \ javaapi#method(0,'putSparseParcelableArray(', 'String, SparseArray<? extends Parcelable>)', 'void'),
  \ javaapi#method(0,'putIntegerArrayList(', 'String, ArrayList<Integer>)', 'void'),
  \ javaapi#method(0,'putStringArrayList(', 'String, ArrayList<String>)', 'void'),
  \ javaapi#method(0,'putCharSequenceArrayList(', 'String, ArrayList<CharSequence>)', 'void'),
  \ javaapi#method(0,'putSerializable(', 'String, Serializable)', 'void'),
  \ javaapi#method(0,'putBooleanArray(', 'String, boolean[])', 'void'),
  \ javaapi#method(0,'putByteArray(', 'String, byte[])', 'void'),
  \ javaapi#method(0,'putShortArray(', 'String, short[])', 'void'),
  \ javaapi#method(0,'putCharArray(', 'String, char[])', 'void'),
  \ javaapi#method(0,'putIntArray(', 'String, int[])', 'void'),
  \ javaapi#method(0,'putLongArray(', 'String, long[])', 'void'),
  \ javaapi#method(0,'putFloatArray(', 'String, float[])', 'void'),
  \ javaapi#method(0,'putDoubleArray(', 'String, double[])', 'void'),
  \ javaapi#method(0,'putStringArray(', 'String, String[])', 'void'),
  \ javaapi#method(0,'putCharSequenceArray(', 'String, CharSequence[])', 'void'),
  \ javaapi#method(0,'putBundle(', 'String, Bundle)', 'void'),
  \ javaapi#method(0,'getBoolean(', 'String)', 'boolean'),
  \ javaapi#method(0,'getBoolean(', 'String, boolean)', 'boolean'),
  \ javaapi#method(0,'getByte(', 'String)', 'byte'),
  \ javaapi#method(0,'getByte(', 'String, byte)', 'Byte'),
  \ javaapi#method(0,'getChar(', 'String)', 'char'),
  \ javaapi#method(0,'getChar(', 'String, char)', 'char'),
  \ javaapi#method(0,'getShort(', 'String)', 'short'),
  \ javaapi#method(0,'getShort(', 'String, short)', 'short'),
  \ javaapi#method(0,'getInt(', 'String)', 'int'),
  \ javaapi#method(0,'getInt(', 'String, int)', 'int'),
  \ javaapi#method(0,'getLong(', 'String)', 'long'),
  \ javaapi#method(0,'getLong(', 'String, long)', 'long'),
  \ javaapi#method(0,'getFloat(', 'String)', 'float'),
  \ javaapi#method(0,'getFloat(', 'String, float)', 'float'),
  \ javaapi#method(0,'getDouble(', 'String)', 'double'),
  \ javaapi#method(0,'getDouble(', 'String, double)', 'double'),
  \ javaapi#method(0,'getString(', 'String)', 'String'),
  \ javaapi#method(0,'getString(', 'String, String)', 'String'),
  \ javaapi#method(0,'getCharSequence(', 'String)', 'CharSequence'),
  \ javaapi#method(0,'getCharSequence(', 'String, CharSequence)', 'CharSequence'),
  \ javaapi#method(0,'getBundle(', 'String)', 'Bundle'),
  \ javaapi#method(0,'getParcelable(', 'String)', 'T'),
  \ javaapi#method(0,'getParcelableArray(', 'String)', 'Parcelable[]'),
  \ javaapi#method(0,'getParcelableArrayList(', 'String)', 'ArrayList<T>'),
  \ javaapi#method(0,'getSparseParcelableArray(', 'String)', 'SparseArray<T>'),
  \ javaapi#method(0,'getSerializable(', 'String)', 'Serializable'),
  \ javaapi#method(0,'getIntegerArrayList(', 'String)', 'Integer>'),
  \ javaapi#method(0,'getStringArrayList(', 'String)', 'String>'),
  \ javaapi#method(0,'getCharSequenceArrayList(', 'String)', 'CharSequence>'),
  \ javaapi#method(0,'getBooleanArray(', 'String)', 'boolean[]'),
  \ javaapi#method(0,'getByteArray(', 'String)', 'byte[]'),
  \ javaapi#method(0,'getShortArray(', 'String)', 'short[]'),
  \ javaapi#method(0,'getCharArray(', 'String)', 'char[]'),
  \ javaapi#method(0,'getIntArray(', 'String)', 'int[]'),
  \ javaapi#method(0,'getLongArray(', 'String)', 'long[]'),
  \ javaapi#method(0,'getFloatArray(', 'String)', 'float[]'),
  \ javaapi#method(0,'getDoubleArray(', 'String)', 'double[]'),
  \ javaapi#method(0,'getStringArray(', 'String)', 'String[]'),
  \ javaapi#method(0,'getCharSequenceArray(', 'String)', 'CharSequence[]'),
  \ javaapi#method(0,'describeContents(', ')', 'int'),
  \ javaapi#method(0,'writeToParcel(', 'Parcel, int)', 'void'),
  \ javaapi#method(0,'readFromParcel(', 'Parcel)', 'void'),
  \ javaapi#method(0,'toString(', ')', 'String'),
  \ ])

call javaapi#class('PowerManager', '', [
  \ javaapi#field(1,'PARTIAL_WAKE_LOCK', 'int'),
  \ javaapi#field(1,'SCREEN_DIM_WAKE_LOCK', 'int'),
  \ javaapi#field(1,'SCREEN_BRIGHT_WAKE_LOCK', 'int'),
  \ javaapi#field(1,'FULL_WAKE_LOCK', 'int'),
  \ javaapi#field(1,'ACQUIRE_CAUSES_WAKEUP', 'int'),
  \ javaapi#field(1,'ON_AFTER_RELEASE', 'int'),
  \ javaapi#method(0,'newWakeLock(', 'int, String)', 'WakeLock'),
  \ javaapi#method(0,'userActivity(', 'long, boolean)', 'void'),
  \ javaapi#method(0,'goToSleep(', 'long)', 'void'),
  \ javaapi#method(0,'wakeUp(', 'long)', 'void'),
  \ javaapi#method(0,'isScreenOn(', ')', 'boolean'),
  \ javaapi#method(0,'reboot(', 'String)', 'void'),
  \ ])

call javaapi#class('VERSION_CODES', '', [
  \ javaapi#field(1,'CUR_DEVELOPMENT', 'int'),
  \ javaapi#field(1,'BASE', 'int'),
  \ javaapi#field(1,'BASE_1_1', 'int'),
  \ javaapi#field(1,'CUPCAKE', 'int'),
  \ javaapi#field(1,'DONUT', 'int'),
  \ javaapi#field(1,'ECLAIR', 'int'),
  \ javaapi#field(1,'ECLAIR_0_1', 'int'),
  \ javaapi#field(1,'ECLAIR_MR1', 'int'),
  \ javaapi#field(1,'FROYO', 'int'),
  \ javaapi#field(1,'GINGERBREAD', 'int'),
  \ javaapi#field(1,'GINGERBREAD_MR1', 'int'),
  \ javaapi#field(1,'HONEYCOMB', 'int'),
  \ javaapi#field(1,'HONEYCOMB_MR1', 'int'),
  \ javaapi#field(1,'HONEYCOMB_MR2', 'int'),
  \ javaapi#field(1,'ICE_CREAM_SANDWICH', 'int'),
  \ javaapi#field(1,'ICE_CREAM_SANDWICH_MR1', 'int'),
  \ javaapi#field(1,'JELLY_BEAN', 'int'),
  \ javaapi#field(1,'JELLY_BEAN_MR1', 'int'),
  \ javaapi#method(0,'VERSION_CODES(', ')', 'public'),
  \ ])

call javaapi#class('Handler', '', [
  \ javaapi#method(0,'Handler(', ')', 'public'),
  \ javaapi#method(0,'Handler(', 'Callback)', 'public'),
  \ javaapi#method(0,'Handler(', 'Looper)', 'public'),
  \ javaapi#method(0,'Handler(', 'Looper, Callback)', 'public'),
  \ javaapi#method(0,'handleMessage(', 'Message)', 'void'),
  \ javaapi#method(0,'dispatchMessage(', 'Message)', 'void'),
  \ javaapi#method(0,'getMessageName(', 'Message)', 'String'),
  \ javaapi#method(0,'obtainMessage(', ')', 'Message'),
  \ javaapi#method(0,'obtainMessage(', 'int)', 'Message'),
  \ javaapi#method(0,'obtainMessage(', 'int, Object)', 'Message'),
  \ javaapi#method(0,'obtainMessage(', 'int, int, int)', 'Message'),
  \ javaapi#method(0,'obtainMessage(', 'int, int, int, Object)', 'Message'),
  \ javaapi#method(0,'post(', 'Runnable)', 'boolean'),
  \ javaapi#method(0,'postAtTime(', 'Runnable, long)', 'boolean'),
  \ javaapi#method(0,'postAtTime(', 'Runnable, Object, long)', 'boolean'),
  \ javaapi#method(0,'postDelayed(', 'Runnable, long)', 'boolean'),
  \ javaapi#method(0,'postAtFrontOfQueue(', 'Runnable)', 'boolean'),
  \ javaapi#method(0,'removeCallbacks(', 'Runnable)', 'void'),
  \ javaapi#method(0,'removeCallbacks(', 'Runnable, Object)', 'void'),
  \ javaapi#method(0,'sendMessage(', 'Message)', 'boolean'),
  \ javaapi#method(0,'sendEmptyMessage(', 'int)', 'boolean'),
  \ javaapi#method(0,'sendEmptyMessageDelayed(', 'int, long)', 'boolean'),
  \ javaapi#method(0,'sendEmptyMessageAtTime(', 'int, long)', 'boolean'),
  \ javaapi#method(0,'sendMessageDelayed(', 'Message, long)', 'boolean'),
  \ javaapi#method(0,'sendMessageAtTime(', 'Message, long)', 'boolean'),
  \ javaapi#method(0,'sendMessageAtFrontOfQueue(', 'Message)', 'boolean'),
  \ javaapi#method(0,'removeMessages(', 'int)', 'void'),
  \ javaapi#method(0,'removeMessages(', 'int, Object)', 'void'),
  \ javaapi#method(0,'removeCallbacksAndMessages(', 'Object)', 'void'),
  \ javaapi#method(0,'hasMessages(', 'int)', 'boolean'),
  \ javaapi#method(0,'hasMessages(', 'int, Object)', 'boolean'),
  \ javaapi#method(0,'getLooper(', ')', 'Looper'),
  \ javaapi#method(0,'dump(', 'Printer, String)', 'void'),
  \ javaapi#method(0,'toString(', ')', 'String'),
  \ ])

call javaapi#class('Vibrator', '', [
  \ javaapi#method(0,'hasVibrator(', ')', 'boolean'),
  \ javaapi#method(0,'vibrate(', 'long)', 'void'),
  \ javaapi#method(0,'vibrate(', 'long[], int)', 'void'),
  \ javaapi#method(0,'cancel(', ')', 'void'),
  \ ])


call javaapi#interface('Parcelable', '', [
  \ javaapi#field(1,'PARCELABLE_WRITE_RETURN_VALUE', 'int'),
  \ javaapi#field(1,'CONTENTS_FILE_DESCRIPTOR', 'int'),
  \ javaapi#method(0,'describeContents(', ')', 'int'),
  \ javaapi#method(0,'writeToParcel(', 'Parcel, int)', 'void'),
  \ ])

call javaapi#class('MemoryInfo', 'Parcelable', [
  \ javaapi#field(0,'dalvikPss', 'int'),
  \ javaapi#field(0,'dalvikPrivateDirty', 'int'),
  \ javaapi#field(0,'dalvikSharedDirty', 'int'),
  \ javaapi#field(0,'nativePss', 'int'),
  \ javaapi#field(0,'nativePrivateDirty', 'int'),
  \ javaapi#field(0,'nativeSharedDirty', 'int'),
  \ javaapi#field(0,'otherPss', 'int'),
  \ javaapi#field(0,'otherPrivateDirty', 'int'),
  \ javaapi#field(0,'otherSharedDirty', 'int'),
  \ javaapi#field(1,'CREATOR', 'MemoryInfo>'),
  \ javaapi#method(0,'MemoryInfo(', ')', 'public'),
  \ javaapi#method(0,'getTotalPss(', ')', 'int'),
  \ javaapi#method(0,'getTotalPrivateDirty(', ')', 'int'),
  \ javaapi#method(0,'getTotalSharedDirty(', ')', 'int'),
  \ javaapi#method(0,'getOtherPss(', 'int)', 'int'),
  \ javaapi#method(0,'getOtherPrivateDirty(', 'int)', 'int'),
  \ javaapi#method(0,'getOtherSharedDirty(', 'int)', 'int'),
  \ javaapi#method(1,'getOtherLabel(', 'int)', 'String'),
  \ javaapi#method(0,'describeContents(', ')', 'int'),
  \ javaapi#method(0,'writeToParcel(', 'Parcel, int)', 'void'),
  \ javaapi#method(0,'readFromParcel(', 'Parcel)', 'void'),
  \ ])

call javaapi#class('TokenWatcher', '', [
  \ javaapi#method(0,'TokenWatcher(', 'Handler, String)', 'public'),
  \ javaapi#method(0,'acquired(', ')', 'void'),
  \ javaapi#method(0,'released(', ')', 'void'),
  \ javaapi#method(0,'acquire(', 'IBinder, String)', 'void'),
  \ javaapi#method(0,'cleanup(', 'IBinder, boolean)', 'void'),
  \ javaapi#method(0,'release(', 'IBinder)', 'void'),
  \ javaapi#method(0,'isAcquired(', ')', 'boolean'),
  \ javaapi#method(0,'dump(', ')', 'void'),
  \ javaapi#method(0,'dump(', 'PrintWriter)', 'void'),
  \ ])

call javaapi#class('Builder', '', [
  \ javaapi#method(0,'Builder(', ')', 'public'),
  \ javaapi#method(0,'Builder(', 'ThreadPolicy)', 'public'),
  \ javaapi#method(0,'detectAll(', ')', 'Builder'),
  \ javaapi#method(0,'permitAll(', ')', 'Builder'),
  \ javaapi#method(0,'detectNetwork(', ')', 'Builder'),
  \ javaapi#method(0,'permitNetwork(', ')', 'Builder'),
  \ javaapi#method(0,'detectDiskReads(', ')', 'Builder'),
  \ javaapi#method(0,'permitDiskReads(', ')', 'Builder'),
  \ javaapi#method(0,'detectCustomSlowCalls(', ')', 'Builder'),
  \ javaapi#method(0,'permitCustomSlowCalls(', ')', 'Builder'),
  \ javaapi#method(0,'detectDiskWrites(', ')', 'Builder'),
  \ javaapi#method(0,'permitDiskWrites(', ')', 'Builder'),
  \ javaapi#method(0,'penaltyDialog(', ')', 'Builder'),
  \ javaapi#method(0,'penaltyDeath(', ')', 'Builder'),
  \ javaapi#method(0,'penaltyDeathOnNetwork(', ')', 'Builder'),
  \ javaapi#method(0,'penaltyFlashScreen(', ')', 'Builder'),
  \ javaapi#method(0,'penaltyLog(', ')', 'Builder'),
  \ javaapi#method(0,'penaltyDropBox(', ')', 'Builder'),
  \ javaapi#method(0,'build(', ')', 'ThreadPolicy'),
  \ ])

call javaapi#interface('IdleHandler', '', [
  \ javaapi#method(0,'queueIdle(', ')', 'boolean'),
  \ ])

call javaapi#class('HandlerThread', '', [
  \ javaapi#method(0,'HandlerThread(', 'String)', 'public'),
  \ javaapi#method(0,'HandlerThread(', 'String, int)', 'public'),
  \ javaapi#method(0,'run(', ')', 'void'),
  \ javaapi#method(0,'getLooper(', ')', 'Looper'),
  \ javaapi#method(0,'quit(', ')', 'boolean'),
  \ javaapi#method(0,'getThreadId(', ')', 'int'),
  \ ])

call javaapi#class('CancellationSignal', '', [
  \ javaapi#method(0,'CancellationSignal(', ')', 'public'),
  \ javaapi#method(0,'isCanceled(', ')', 'boolean'),
  \ javaapi#method(0,'throwIfCanceled(', ')', 'void'),
  \ javaapi#method(0,'cancel(', ')', 'void'),
  \ javaapi#method(0,'setOnCancelListener(', 'OnCancelListener)', 'void'),
  \ ])

call javaapi#class('InstructionCount', '', [
  \ javaapi#method(0,'InstructionCount(', ')', 'public'),
  \ javaapi#method(0,'resetAndStart(', ')', 'boolean'),
  \ javaapi#method(0,'collect(', ')', 'boolean'),
  \ javaapi#method(0,'globalTotal(', ')', 'int'),
  \ javaapi#method(0,'globalMethodInvocations(', ')', 'int'),
  \ ])

call javaapi#class('Looper', '', [
  \ javaapi#method(1,'prepare(', ')', 'void'),
  \ javaapi#method(1,'prepareMainLooper(', ')', 'void'),
  \ javaapi#method(1,'getMainLooper(', ')', 'Looper'),
  \ javaapi#method(1,'loop(', ')', 'void'),
  \ javaapi#method(1,'myLooper(', ')', 'Looper'),
  \ javaapi#method(0,'setMessageLogging(', 'Printer)', 'void'),
  \ javaapi#method(1,'myQueue(', ')', 'MessageQueue'),
  \ javaapi#method(0,'quit(', ')', 'void'),
  \ javaapi#method(0,'getThread(', ')', 'Thread'),
  \ javaapi#method(0,'dump(', 'Printer, String)', 'void'),
  \ javaapi#method(0,'toString(', ')', 'String'),
  \ ])

call javaapi#class('Builder', '', [
  \ javaapi#method(0,'Builder(', ')', 'public'),
  \ javaapi#method(0,'Builder(', 'VmPolicy)', 'public'),
  \ javaapi#method(0,'setClassInstanceLimit(', 'Class, int)', 'Builder'),
  \ javaapi#method(0,'detectActivityLeaks(', ')', 'Builder'),
  \ javaapi#method(0,'detectAll(', ')', 'Builder'),
  \ javaapi#method(0,'detectLeakedSqlLiteObjects(', ')', 'Builder'),
  \ javaapi#method(0,'detectLeakedClosableObjects(', ')', 'Builder'),
  \ javaapi#method(0,'detectLeakedRegistrationObjects(', ')', 'Builder'),
  \ javaapi#method(0,'penaltyDeath(', ')', 'Builder'),
  \ javaapi#method(0,'penaltyLog(', ')', 'Builder'),
  \ javaapi#method(0,'penaltyDropBox(', ')', 'Builder'),
  \ javaapi#method(0,'build(', ')', 'VmPolicy'),
  \ ])

call javaapi#class('FileObserver', '', [
  \ javaapi#field(1,'ACCESS', 'int'),
  \ javaapi#field(1,'MODIFY', 'int'),
  \ javaapi#field(1,'ATTRIB', 'int'),
  \ javaapi#field(1,'CLOSE_WRITE', 'int'),
  \ javaapi#field(1,'CLOSE_NOWRITE', 'int'),
  \ javaapi#field(1,'OPEN', 'int'),
  \ javaapi#field(1,'MOVED_FROM', 'int'),
  \ javaapi#field(1,'MOVED_TO', 'int'),
  \ javaapi#field(1,'CREATE', 'int'),
  \ javaapi#field(1,'DELETE', 'int'),
  \ javaapi#field(1,'DELETE_SELF', 'int'),
  \ javaapi#field(1,'MOVE_SELF', 'int'),
  \ javaapi#field(1,'ALL_EVENTS', 'int'),
  \ javaapi#method(0,'FileObserver(', 'String)', 'public'),
  \ javaapi#method(0,'FileObserver(', 'String, int)', 'public'),
  \ javaapi#method(0,'startWatching(', ')', 'void'),
  \ javaapi#method(0,'stopWatching(', ')', 'void'),
  \ javaapi#method(0,'onEvent(', 'int, String)', 'void'),
  \ ])

call javaapi#class('Messenger', 'Parcelable', [
  \ javaapi#field(1,'CREATOR', 'Messenger>'),
  \ javaapi#method(0,'Messenger(', 'Handler)', 'public'),
  \ javaapi#method(0,'Messenger(', 'IBinder)', 'public'),
  \ javaapi#method(0,'send(', 'Message) throws RemoteException', 'void'),
  \ javaapi#method(0,'getBinder(', ')', 'IBinder'),
  \ javaapi#method(0,'equals(', 'Object)', 'boolean'),
  \ javaapi#method(0,'hashCode(', ')', 'int'),
  \ javaapi#method(0,'describeContents(', ')', 'int'),
  \ javaapi#method(0,'writeToParcel(', 'Parcel, int)', 'void'),
  \ javaapi#method(1,'writeMessengerOrNullToParcel(', 'Messenger, Parcel)', 'void'),
  \ javaapi#method(1,'readMessengerOrNullFromParcel(', 'Parcel)', 'Messenger'),
  \ ])

call javaapi#class('Build', '', [
  \ javaapi#field(1,'UNKNOWN', 'String'),
  \ javaapi#field(1,'ID', 'String'),
  \ javaapi#field(1,'DISPLAY', 'String'),
  \ javaapi#field(1,'PRODUCT', 'String'),
  \ javaapi#field(1,'DEVICE', 'String'),
  \ javaapi#field(1,'BOARD', 'String'),
  \ javaapi#field(1,'CPU_ABI', 'String'),
  \ javaapi#field(1,'CPU_ABI2', 'String'),
  \ javaapi#field(1,'MANUFACTURER', 'String'),
  \ javaapi#field(1,'BRAND', 'String'),
  \ javaapi#field(1,'MODEL', 'String'),
  \ javaapi#field(1,'BOOTLOADER', 'String'),
  \ javaapi#field(1,'RADIO', 'String'),
  \ javaapi#field(1,'HARDWARE', 'String'),
  \ javaapi#field(1,'SERIAL', 'String'),
  \ javaapi#field(1,'TYPE', 'String'),
  \ javaapi#field(1,'TAGS', 'String'),
  \ javaapi#field(1,'FINGERPRINT', 'String'),
  \ javaapi#field(1,'TIME', 'long'),
  \ javaapi#field(1,'USER', 'String'),
  \ javaapi#field(1,'HOST', 'String'),
  \ javaapi#method(0,'Build(', ')', 'public'),
  \ javaapi#method(1,'getRadioVersion(', ')', 'String'),
  \ ])

call javaapi#class('Parcel', '', [
  \ javaapi#field(1,'STRING_CREATOR', 'String>'),
  \ javaapi#method(1,'obtain(', ')', 'Parcel'),
  \ javaapi#method(0,'recycle(', ')', 'void'),
  \ javaapi#method(0,'dataSize(', ')', 'int'),
  \ javaapi#method(0,'dataAvail(', ')', 'int'),
  \ javaapi#method(0,'dataPosition(', ')', 'int'),
  \ javaapi#method(0,'dataCapacity(', ')', 'int'),
  \ javaapi#method(0,'setDataSize(', 'int)', 'void'),
  \ javaapi#method(0,'setDataPosition(', 'int)', 'void'),
  \ javaapi#method(0,'setDataCapacity(', 'int)', 'void'),
  \ javaapi#method(0,'marshall(', ')', 'byte[]'),
  \ javaapi#method(0,'unmarshall(', 'byte[], int, int)', 'void'),
  \ javaapi#method(0,'appendFrom(', 'Parcel, int, int)', 'void'),
  \ javaapi#method(0,'hasFileDescriptors(', ')', 'boolean'),
  \ javaapi#method(0,'writeInterfaceToken(', 'String)', 'void'),
  \ javaapi#method(0,'enforceInterface(', 'String)', 'void'),
  \ javaapi#method(0,'writeByteArray(', 'byte[])', 'void'),
  \ javaapi#method(0,'writeByteArray(', 'byte[], int, int)', 'void'),
  \ javaapi#method(0,'writeInt(', 'int)', 'void'),
  \ javaapi#method(0,'writeLong(', 'long)', 'void'),
  \ javaapi#method(0,'writeFloat(', 'float)', 'void'),
  \ javaapi#method(0,'writeDouble(', 'double)', 'void'),
  \ javaapi#method(0,'writeString(', 'String)', 'void'),
  \ javaapi#method(0,'writeStrongBinder(', 'IBinder)', 'void'),
  \ javaapi#method(0,'writeStrongInterface(', 'IInterface)', 'void'),
  \ javaapi#method(0,'writeFileDescriptor(', 'FileDescriptor)', 'void'),
  \ javaapi#method(0,'writeByte(', 'byte)', 'void'),
  \ javaapi#method(0,'writeMap(', 'Map)', 'void'),
  \ javaapi#method(0,'writeBundle(', 'Bundle)', 'void'),
  \ javaapi#method(0,'writeList(', 'List)', 'void'),
  \ javaapi#method(0,'writeArray(', 'Object[])', 'void'),
  \ javaapi#method(0,'writeSparseArray(', 'SparseArray<Object>)', 'void'),
  \ javaapi#method(0,'writeSparseBooleanArray(', 'SparseBooleanArray)', 'void'),
  \ javaapi#method(0,'writeBooleanArray(', 'boolean[])', 'void'),
  \ javaapi#method(0,'createBooleanArray(', ')', 'boolean[]'),
  \ javaapi#method(0,'readBooleanArray(', 'boolean[])', 'void'),
  \ javaapi#method(0,'writeCharArray(', 'char[])', 'void'),
  \ javaapi#method(0,'createCharArray(', ')', 'char[]'),
  \ javaapi#method(0,'readCharArray(', 'char[])', 'void'),
  \ javaapi#method(0,'writeIntArray(', 'int[])', 'void'),
  \ javaapi#method(0,'createIntArray(', ')', 'int[]'),
  \ javaapi#method(0,'readIntArray(', 'int[])', 'void'),
  \ javaapi#method(0,'writeLongArray(', 'long[])', 'void'),
  \ javaapi#method(0,'createLongArray(', ')', 'long[]'),
  \ javaapi#method(0,'readLongArray(', 'long[])', 'void'),
  \ javaapi#method(0,'writeFloatArray(', 'float[])', 'void'),
  \ javaapi#method(0,'createFloatArray(', ')', 'float[]'),
  \ javaapi#method(0,'readFloatArray(', 'float[])', 'void'),
  \ javaapi#method(0,'writeDoubleArray(', 'double[])', 'void'),
  \ javaapi#method(0,'createDoubleArray(', ')', 'double[]'),
  \ javaapi#method(0,'readDoubleArray(', 'double[])', 'void'),
  \ javaapi#method(0,'writeStringArray(', 'String[])', 'void'),
  \ javaapi#method(0,'createStringArray(', ')', 'String[]'),
  \ javaapi#method(0,'readStringArray(', 'String[])', 'void'),
  \ javaapi#method(0,'writeBinderArray(', 'IBinder[])', 'void'),
  \ javaapi#method(0,'createBinderArray(', ')', 'IBinder[]'),
  \ javaapi#method(0,'readBinderArray(', 'IBinder[])', 'void'),
  \ javaapi#method(0,'writeTypedList(', 'List<T>)', 'void'),
  \ javaapi#method(0,'writeStringList(', 'List<String>)', 'void'),
  \ javaapi#method(0,'writeBinderList(', 'List<IBinder>)', 'void'),
  \ javaapi#method(0,'writeTypedArray(', 'T[], int)', 'void'),
  \ javaapi#method(0,'writeValue(', 'Object)', 'void'),
  \ javaapi#method(0,'writeParcelable(', 'Parcelable, int)', 'void'),
  \ javaapi#method(0,'writeSerializable(', 'Serializable)', 'void'),
  \ javaapi#method(0,'writeException(', 'Exception)', 'void'),
  \ javaapi#method(0,'writeNoException(', ')', 'void'),
  \ javaapi#method(0,'readException(', ')', 'void'),
  \ javaapi#method(0,'readException(', 'int, String)', 'void'),
  \ javaapi#method(0,'readInt(', ')', 'int'),
  \ javaapi#method(0,'readLong(', ')', 'long'),
  \ javaapi#method(0,'readFloat(', ')', 'float'),
  \ javaapi#method(0,'readDouble(', ')', 'double'),
  \ javaapi#method(0,'readString(', ')', 'String'),
  \ javaapi#method(0,'readStrongBinder(', ')', 'IBinder'),
  \ javaapi#method(0,'readFileDescriptor(', ')', 'ParcelFileDescriptor'),
  \ javaapi#method(0,'readByte(', ')', 'byte'),
  \ javaapi#method(0,'readMap(', 'Map, ClassLoader)', 'void'),
  \ javaapi#method(0,'readList(', 'List, ClassLoader)', 'void'),
  \ javaapi#method(0,'readHashMap(', 'ClassLoader)', 'HashMap'),
  \ javaapi#method(0,'readBundle(', ')', 'Bundle'),
  \ javaapi#method(0,'readBundle(', 'ClassLoader)', 'Bundle'),
  \ javaapi#method(0,'createByteArray(', ')', 'byte[]'),
  \ javaapi#method(0,'readByteArray(', 'byte[])', 'void'),
  \ javaapi#method(0,'readArrayList(', 'ClassLoader)', 'ArrayList'),
  \ javaapi#method(0,'readArray(', 'ClassLoader)', 'Object[]'),
  \ javaapi#method(0,'readSparseArray(', 'ClassLoader)', 'SparseArray'),
  \ javaapi#method(0,'readSparseBooleanArray(', ')', 'SparseBooleanArray'),
  \ javaapi#method(0,'createTypedArrayList(', 'Creator<T>)', 'ArrayList<T>'),
  \ javaapi#method(0,'readTypedList(', 'List<T>, Creator<T>)', 'void'),
  \ javaapi#method(0,'createStringArrayList(', ')', 'String>'),
  \ javaapi#method(0,'createBinderArrayList(', ')', 'IBinder>'),
  \ javaapi#method(0,'readStringList(', 'List<String>)', 'void'),
  \ javaapi#method(0,'readBinderList(', 'List<IBinder>)', 'void'),
  \ javaapi#method(0,'createTypedArray(', 'Creator<T>)', 'T[]'),
  \ javaapi#method(0,'readTypedArray(', 'T[], Creator<T>)', 'void'),
  \ javaapi#method(0,'writeParcelableArray(', 'T[], int)', 'void'),
  \ javaapi#method(0,'readValue(', 'ClassLoader)', 'Object'),
  \ javaapi#method(0,'readParcelable(', 'ClassLoader)', 'T'),
  \ javaapi#method(0,'readParcelableArray(', 'ClassLoader)', 'Parcelable[]'),
  \ javaapi#method(0,'readSerializable(', ')', 'Serializable'),
  \ ])

call javaapi#class('ParcelFormatException', '', [
  \ javaapi#method(0,'ParcelFormatException(', ')', 'public'),
  \ javaapi#method(0,'ParcelFormatException(', 'String)', 'public'),
  \ ])

call javaapi#class('BatteryManager', '', [
  \ javaapi#field(1,'EXTRA_STATUS', 'String'),
  \ javaapi#field(1,'EXTRA_HEALTH', 'String'),
  \ javaapi#field(1,'EXTRA_PRESENT', 'String'),
  \ javaapi#field(1,'EXTRA_LEVEL', 'String'),
  \ javaapi#field(1,'EXTRA_SCALE', 'String'),
  \ javaapi#field(1,'EXTRA_ICON_SMALL', 'String'),
  \ javaapi#field(1,'EXTRA_PLUGGED', 'String'),
  \ javaapi#field(1,'EXTRA_VOLTAGE', 'String'),
  \ javaapi#field(1,'EXTRA_TEMPERATURE', 'String'),
  \ javaapi#field(1,'EXTRA_TECHNOLOGY', 'String'),
  \ javaapi#field(1,'BATTERY_STATUS_UNKNOWN', 'int'),
  \ javaapi#field(1,'BATTERY_STATUS_CHARGING', 'int'),
  \ javaapi#field(1,'BATTERY_STATUS_DISCHARGING', 'int'),
  \ javaapi#field(1,'BATTERY_STATUS_NOT_CHARGING', 'int'),
  \ javaapi#field(1,'BATTERY_STATUS_FULL', 'int'),
  \ javaapi#field(1,'BATTERY_HEALTH_UNKNOWN', 'int'),
  \ javaapi#field(1,'BATTERY_HEALTH_GOOD', 'int'),
  \ javaapi#field(1,'BATTERY_HEALTH_OVERHEAT', 'int'),
  \ javaapi#field(1,'BATTERY_HEALTH_DEAD', 'int'),
  \ javaapi#field(1,'BATTERY_HEALTH_OVER_VOLTAGE', 'int'),
  \ javaapi#field(1,'BATTERY_HEALTH_UNSPECIFIED_FAILURE', 'int'),
  \ javaapi#field(1,'BATTERY_HEALTH_COLD', 'int'),
  \ javaapi#field(1,'BATTERY_PLUGGED_AC', 'int'),
  \ javaapi#field(1,'BATTERY_PLUGGED_USB', 'int'),
  \ javaapi#field(1,'BATTERY_PLUGGED_WIRELESS', 'int'),
  \ javaapi#method(0,'BatteryManager(', ')', 'public'),
  \ ])

call javaapi#class('AutoCloseOutputStream', '', [
  \ javaapi#method(0,'AutoCloseOutputStream(', 'ParcelFileDescriptor)', 'public'),
  \ javaapi#method(0,'close(', ') throws IOException', 'void'),
  \ ])

call javaapi#interface('Callback', '', [
  \ javaapi#method(0,'handleMessage(', 'Message)', 'boolean'),
  \ ])

call javaapi#class('CountDownTimer', '', [
  \ javaapi#method(0,'CountDownTimer(', 'long, long)', 'public'),
  \ javaapi#method(0,'cancel(', ')', 'void'),
  \ javaapi#method(0,'start(', ')', 'CountDownTimer'),
  \ javaapi#method(0,'onTick(', 'long)', 'void'),
  \ javaapi#method(0,'onFinish(', ')', 'void'),
  \ ])

call javaapi#class('RemoteCallbackList<E', '', [
  \ javaapi#method(0,'RemoteCallbackList(', ')', 'public'),
  \ javaapi#method(0,'register(', 'E)', 'boolean'),
  \ javaapi#method(0,'register(', 'E, Object)', 'boolean'),
  \ javaapi#method(0,'unregister(', 'E)', 'boolean'),
  \ javaapi#method(0,'kill(', ')', 'void'),
  \ javaapi#method(0,'onCallbackDied(', 'E)', 'void'),
  \ javaapi#method(0,'onCallbackDied(', 'E, Object)', 'void'),
  \ javaapi#method(0,'beginBroadcast(', ')', 'int'),
  \ javaapi#method(0,'getBroadcastItem(', 'int)', 'E'),
  \ javaapi#method(0,'getBroadcastCookie(', 'int)', 'Object'),
  \ javaapi#method(0,'finishBroadcast(', ')', 'void'),
  \ javaapi#method(0,'getRegisteredCallbackCount(', ')', 'int'),
  \ ])

call javaapi#interface('IBinder', '', [
  \ javaapi#field(1,'FIRST_CALL_TRANSACTION', 'int'),
  \ javaapi#field(1,'LAST_CALL_TRANSACTION', 'int'),
  \ javaapi#field(1,'PING_TRANSACTION', 'int'),
  \ javaapi#field(1,'DUMP_TRANSACTION', 'int'),
  \ javaapi#field(1,'INTERFACE_TRANSACTION', 'int'),
  \ javaapi#field(1,'TWEET_TRANSACTION', 'int'),
  \ javaapi#field(1,'LIKE_TRANSACTION', 'int'),
  \ javaapi#field(1,'FLAG_ONEWAY', 'int'),
  \ javaapi#method(0,'getInterfaceDescriptor(', ') throws RemoteException', 'String'),
  \ javaapi#method(0,'pingBinder(', ')', 'boolean'),
  \ javaapi#method(0,'isBinderAlive(', ')', 'boolean'),
  \ javaapi#method(0,'queryLocalInterface(', 'String)', 'IInterface'),
  \ javaapi#method(0,'dump(', 'FileDescriptor, String[]) throws RemoteException', 'void'),
  \ javaapi#method(0,'dumpAsync(', 'FileDescriptor, String[]) throws RemoteException', 'void'),
  \ javaapi#method(0,'transact(', 'int, Parcel, Parcel, int) throws RemoteException', 'boolean'),
  \ javaapi#method(0,'linkToDeath(', 'DeathRecipient, int) throws RemoteException', 'void'),
  \ javaapi#method(0,'unlinkToDeath(', 'DeathRecipient, int)', 'boolean'),
  \ ])

call javaapi#class('UserHandle', 'Parcelable', [
  \ javaapi#field(1,'CREATOR', 'UserHandle>'),
  \ javaapi#method(0,'UserHandle(', 'Parcel)', 'public'),
  \ javaapi#method(0,'toString(', ')', 'String'),
  \ javaapi#method(0,'equals(', 'Object)', 'boolean'),
  \ javaapi#method(0,'hashCode(', ')', 'int'),
  \ javaapi#method(0,'describeContents(', ')', 'int'),
  \ javaapi#method(0,'writeToParcel(', 'Parcel, int)', 'void'),
  \ javaapi#method(1,'writeToParcel(', 'UserHandle, Parcel)', 'void'),
  \ javaapi#method(1,'readFromParcel(', 'Parcel)', 'UserHandle'),
  \ ])

call javaapi#interface('OnCancelListener', '', [
  \ javaapi#method(0,'onCancel(', ')', 'void'),
  \ ])

call javaapi#class('VmPolicy', '', [
  \ javaapi#field(1,'LAX', 'VmPolicy'),
  \ javaapi#method(0,'toString(', ')', 'String'),
  \ ])

call javaapi#class('DeadObjectException', '', [
  \ javaapi#method(0,'DeadObjectException(', ')', 'public'),
  \ ])

call javaapi#class('DropBoxManager', '', [
  \ javaapi#field(1,'IS_EMPTY', 'int'),
  \ javaapi#field(1,'IS_TEXT', 'int'),
  \ javaapi#field(1,'IS_GZIPPED', 'int'),
  \ javaapi#field(1,'ACTION_DROPBOX_ENTRY_ADDED', 'String'),
  \ javaapi#field(1,'EXTRA_TAG', 'String'),
  \ javaapi#field(1,'EXTRA_TIME', 'String'),
  \ javaapi#method(0,'addText(', 'String, String)', 'void'),
  \ javaapi#method(0,'addData(', 'String, byte[], int)', 'void'),
  \ javaapi#method(0,'addFile(', 'String, File, int) throws IOException', 'void'),
  \ javaapi#method(0,'isTagEnabled(', 'String)', 'boolean'),
  \ javaapi#method(0,'getNextEntry(', 'String, long)', 'Entry'),
  \ ])

call javaapi#class('RecoverySystem', '', [
  \ javaapi#method(0,'RecoverySystem(', ')', 'public'),
  \ javaapi#method(1,'verifyPackage(', 'File, ProgressListener, File) throws IOException, GeneralSecurityException', 'void'),
  \ javaapi#method(1,'installPackage(', 'Context, File) throws IOException', 'void'),
  \ javaapi#method(1,'rebootWipeUserData(', 'Context) throws IOException', 'void'),
  \ javaapi#method(1,'rebootWipeCache(', 'Context) throws IOException', 'void'),
  \ ])

call javaapi#class('OperationCanceledException', '', [
  \ javaapi#method(0,'OperationCanceledException(', ')', 'public'),
  \ javaapi#method(0,'OperationCanceledException(', 'String)', 'public'),
  \ ])

call javaapi#class('Binder', 'IBinder', [
  \ javaapi#method(0,'Binder(', ')', 'public'),
  \ javaapi#method(1,'getCallingPid(', ')', 'int'),
  \ javaapi#method(1,'getCallingUid(', ')', 'int'),
  \ javaapi#method(1,'getCallingUserHandle(', ')', 'UserHandle'),
  \ javaapi#method(1,'clearCallingIdentity(', ')', 'long'),
  \ javaapi#method(1,'restoreCallingIdentity(', 'long)', 'void'),
  \ javaapi#method(1,'flushPendingCommands(', ')', 'void'),
  \ javaapi#method(1,'joinThreadPool(', ')', 'void'),
  \ javaapi#method(0,'attachInterface(', 'IInterface, String)', 'void'),
  \ javaapi#method(0,'getInterfaceDescriptor(', ')', 'String'),
  \ javaapi#method(0,'pingBinder(', ')', 'boolean'),
  \ javaapi#method(0,'isBinderAlive(', ')', 'boolean'),
  \ javaapi#method(0,'queryLocalInterface(', 'String)', 'IInterface'),
  \ javaapi#method(0,'dump(', 'FileDescriptor, String[])', 'void'),
  \ javaapi#method(0,'dumpAsync(', 'FileDescriptor, String[])', 'void'),
  \ javaapi#method(0,'transact(', 'int, Parcel, Parcel, int) throws RemoteException', 'boolean'),
  \ javaapi#method(0,'linkToDeath(', 'DeathRecipient, int)', 'void'),
  \ javaapi#method(0,'unlinkToDeath(', 'DeathRecipient, int)', 'boolean'),
  \ ])

call javaapi#class('ParcelUuid', 'Parcelable', [
  \ javaapi#field(1,'CREATOR', 'ParcelUuid>'),
  \ javaapi#method(0,'ParcelUuid(', 'UUID)', 'public'),
  \ javaapi#method(1,'fromString(', 'String)', 'ParcelUuid'),
  \ javaapi#method(0,'getUuid(', ')', 'UUID'),
  \ javaapi#method(0,'toString(', ')', 'String'),
  \ javaapi#method(0,'hashCode(', ')', 'int'),
  \ javaapi#method(0,'equals(', 'Object)', 'boolean'),
  \ javaapi#method(0,'describeContents(', ')', 'int'),
  \ javaapi#method(0,'writeToParcel(', 'Parcel, int)', 'void'),
  \ ])

call javaapi#class('AutoCloseInputStream', '', [
  \ javaapi#method(0,'AutoCloseInputStream(', 'ParcelFileDescriptor)', 'public'),
  \ javaapi#method(0,'close(', ') throws IOException', 'void'),
  \ ])

call javaapi#class('Environment', '', [
  \ javaapi#field(1,'DIRECTORY_MUSIC', 'String'),
  \ javaapi#field(1,'DIRECTORY_PODCASTS', 'String'),
  \ javaapi#field(1,'DIRECTORY_RINGTONES', 'String'),
  \ javaapi#field(1,'DIRECTORY_ALARMS', 'String'),
  \ javaapi#field(1,'DIRECTORY_NOTIFICATIONS', 'String'),
  \ javaapi#field(1,'DIRECTORY_PICTURES', 'String'),
  \ javaapi#field(1,'DIRECTORY_MOVIES', 'String'),
  \ javaapi#field(1,'DIRECTORY_DOWNLOADS', 'String'),
  \ javaapi#field(1,'DIRECTORY_DCIM', 'String'),
  \ javaapi#field(1,'MEDIA_REMOVED', 'String'),
  \ javaapi#field(1,'MEDIA_UNMOUNTED', 'String'),
  \ javaapi#field(1,'MEDIA_CHECKING', 'String'),
  \ javaapi#field(1,'MEDIA_NOFS', 'String'),
  \ javaapi#field(1,'MEDIA_MOUNTED', 'String'),
  \ javaapi#field(1,'MEDIA_MOUNTED_READ_ONLY', 'String'),
  \ javaapi#field(1,'MEDIA_SHARED', 'String'),
  \ javaapi#field(1,'MEDIA_BAD_REMOVAL', 'String'),
  \ javaapi#field(1,'MEDIA_UNMOUNTABLE', 'String'),
  \ javaapi#method(0,'Environment(', ')', 'public'),
  \ javaapi#method(1,'getRootDirectory(', ')', 'File'),
  \ javaapi#method(1,'getDataDirectory(', ')', 'File'),
  \ javaapi#method(1,'getExternalStorageDirectory(', ')', 'File'),
  \ javaapi#method(1,'getExternalStoragePublicDirectory(', 'String)', 'File'),
  \ javaapi#method(1,'getDownloadCacheDirectory(', ')', 'File'),
  \ javaapi#method(1,'getExternalStorageState(', ')', 'String'),
  \ javaapi#method(1,'isExternalStorageRemovable(', ')', 'boolean'),
  \ javaapi#method(1,'isExternalStorageEmulated(', ')', 'boolean'),
  \ ])

call javaapi#class('MessageQueue', '', [
  \ javaapi#method(0,'addIdleHandler(', 'IdleHandler)', 'void'),
  \ javaapi#method(0,'removeIdleHandler(', 'IdleHandler)', 'void'),
  \ ])

call javaapi#class('Process', '', [
  \ javaapi#field(1,'SYSTEM_UID', 'int'),
  \ javaapi#field(1,'PHONE_UID', 'int'),
  \ javaapi#field(1,'FIRST_APPLICATION_UID', 'int'),
  \ javaapi#field(1,'LAST_APPLICATION_UID', 'int'),
  \ javaapi#field(1,'BLUETOOTH_GID', 'int'),
  \ javaapi#field(1,'THREAD_PRIORITY_DEFAULT', 'int'),
  \ javaapi#field(1,'THREAD_PRIORITY_LOWEST', 'int'),
  \ javaapi#field(1,'THREAD_PRIORITY_BACKGROUND', 'int'),
  \ javaapi#field(1,'THREAD_PRIORITY_FOREGROUND', 'int'),
  \ javaapi#field(1,'THREAD_PRIORITY_DISPLAY', 'int'),
  \ javaapi#field(1,'THREAD_PRIORITY_URGENT_DISPLAY', 'int'),
  \ javaapi#field(1,'THREAD_PRIORITY_AUDIO', 'int'),
  \ javaapi#field(1,'THREAD_PRIORITY_URGENT_AUDIO', 'int'),
  \ javaapi#field(1,'THREAD_PRIORITY_MORE_FAVORABLE', 'int'),
  \ javaapi#field(1,'THREAD_PRIORITY_LESS_FAVORABLE', 'int'),
  \ javaapi#field(1,'SIGNAL_QUIT', 'int'),
  \ javaapi#field(1,'SIGNAL_KILL', 'int'),
  \ javaapi#field(1,'SIGNAL_USR1', 'int'),
  \ javaapi#method(0,'Process(', ')', 'public'),
  \ javaapi#method(1,'getElapsedCpuTime(', ')', 'long'),
  \ javaapi#method(1,'myPid(', ')', 'int'),
  \ javaapi#method(1,'myTid(', ')', 'int'),
  \ javaapi#method(1,'myUid(', ')', 'int'),
  \ javaapi#method(1,'myUserHandle(', ')', 'UserHandle'),
  \ javaapi#method(1,'getUidForName(', 'String)', 'int'),
  \ javaapi#method(1,'getGidForName(', 'String)', 'int'),
  \ javaapi#method(1,'setThreadPriority(', 'int, int) throws IllegalArgumentException, SecurityException', 'void'),
  \ javaapi#method(1,'setThreadPriority(', 'int) throws IllegalArgumentException, SecurityException', 'void'),
  \ javaapi#method(1,'getThreadPriority(', 'int) throws IllegalArgumentException', 'int'),
  \ javaapi#method(1,'supportsProcesses(', ')', 'boolean'),
  \ javaapi#method(1,'killProcess(', 'int)', 'void'),
  \ javaapi#method(1,'sendSignal(', 'int, int)', 'void'),
  \ ])

call javaapi#class('ParcelFileDescriptor', 'Closeable', [
  \ javaapi#field(1,'MODE_WORLD_READABLE', 'int'),
  \ javaapi#field(1,'MODE_WORLD_WRITEABLE', 'int'),
  \ javaapi#field(1,'MODE_READ_ONLY', 'int'),
  \ javaapi#field(1,'MODE_WRITE_ONLY', 'int'),
  \ javaapi#field(1,'MODE_READ_WRITE', 'int'),
  \ javaapi#field(1,'MODE_CREATE', 'int'),
  \ javaapi#field(1,'MODE_TRUNCATE', 'int'),
  \ javaapi#field(1,'MODE_APPEND', 'int'),
  \ javaapi#field(1,'CREATOR', 'ParcelFileDescriptor>'),
  \ javaapi#method(0,'ParcelFileDescriptor(', 'ParcelFileDescriptor)', 'public'),
  \ javaapi#method(1,'open(', 'File, int) throws FileNotFoundException', 'ParcelFileDescriptor'),
  \ javaapi#method(1,'dup(', 'FileDescriptor) throws IOException', 'ParcelFileDescriptor'),
  \ javaapi#method(0,'dup(', ') throws IOException', 'ParcelFileDescriptor'),
  \ javaapi#method(1,'fromFd(', 'int) throws IOException', 'ParcelFileDescriptor'),
  \ javaapi#method(1,'adoptFd(', 'int)', 'ParcelFileDescriptor'),
  \ javaapi#method(1,'fromSocket(', 'Socket)', 'ParcelFileDescriptor'),
  \ javaapi#method(1,'fromDatagramSocket(', 'DatagramSocket)', 'ParcelFileDescriptor'),
  \ javaapi#method(1,'createPipe(', ') throws IOException', 'ParcelFileDescriptor[]'),
  \ javaapi#method(0,'getFileDescriptor(', ')', 'FileDescriptor'),
  \ javaapi#method(0,'getStatSize(', ')', 'long'),
  \ javaapi#method(0,'getFd(', ')', 'int'),
  \ javaapi#method(0,'detachFd(', ')', 'int'),
  \ javaapi#method(0,'close(', ') throws IOException', 'void'),
  \ javaapi#method(0,'toString(', ')', 'String'),
  \ javaapi#method(0,'describeContents(', ')', 'int'),
  \ javaapi#method(0,'writeToParcel(', 'Parcel, int)', 'void'),
  \ ])

call javaapi#class('Message', 'Parcelable', [
  \ javaapi#field(0,'what', 'int'),
  \ javaapi#field(0,'arg1', 'int'),
  \ javaapi#field(0,'arg2', 'int'),
  \ javaapi#field(0,'obj', 'Object'),
  \ javaapi#field(0,'replyTo', 'Messenger'),
  \ javaapi#field(1,'CREATOR', 'Message>'),
  \ javaapi#method(0,'Message(', ')', 'public'),
  \ javaapi#method(1,'obtain(', ')', 'Message'),
  \ javaapi#method(1,'obtain(', 'Message)', 'Message'),
  \ javaapi#method(1,'obtain(', 'Handler)', 'Message'),
  \ javaapi#method(1,'obtain(', 'Handler, Runnable)', 'Message'),
  \ javaapi#method(1,'obtain(', 'Handler, int)', 'Message'),
  \ javaapi#method(1,'obtain(', 'Handler, int, Object)', 'Message'),
  \ javaapi#method(1,'obtain(', 'Handler, int, int, int)', 'Message'),
  \ javaapi#method(1,'obtain(', 'Handler, int, int, int, Object)', 'Message'),
  \ javaapi#method(0,'recycle(', ')', 'void'),
  \ javaapi#method(0,'copyFrom(', 'Message)', 'void'),
  \ javaapi#method(0,'getWhen(', ')', 'long'),
  \ javaapi#method(0,'setTarget(', 'Handler)', 'void'),
  \ javaapi#method(0,'getTarget(', ')', 'Handler'),
  \ javaapi#method(0,'getCallback(', ')', 'Runnable'),
  \ javaapi#method(0,'getData(', ')', 'Bundle'),
  \ javaapi#method(0,'peekData(', ')', 'Bundle'),
  \ javaapi#method(0,'setData(', 'Bundle)', 'void'),
  \ javaapi#method(0,'sendToTarget(', ')', 'void'),
  \ javaapi#method(0,'toString(', ')', 'String'),
  \ javaapi#method(0,'describeContents(', ')', 'int'),
  \ javaapi#method(0,'writeToParcel(', 'Parcel, int)', 'void'),
  \ ])

call javaapi#interface('IInterface', '', [
  \ javaapi#method(0,'asBinder(', ')', 'IBinder'),
  \ ])

call javaapi#class('NetworkOnMainThreadException', '', [
  \ javaapi#method(0,'NetworkOnMainThreadException(', ')', 'public'),
  \ ])

call javaapi#class('SystemClock', '', [
  \ javaapi#method(1,'sleep(', 'long)', 'void'),
  \ javaapi#method(1,'setCurrentTimeMillis(', 'long)', 'boolean'),
  \ javaapi#method(1,'uptimeMillis(', ')', 'long'),
  \ javaapi#method(1,'elapsedRealtime(', ')', 'long'),
  \ javaapi#method(1,'elapsedRealtimeNanos(', ')', 'long'),
  \ javaapi#method(1,'currentThreadTimeMillis(', ')', 'long'),
  \ ])

call javaapi#class('StatFs', '', [
  \ javaapi#method(0,'StatFs(', 'String)', 'public'),
  \ javaapi#method(0,'restat(', 'String)', 'void'),
  \ javaapi#method(0,'getBlockSize(', ')', 'int'),
  \ javaapi#method(0,'getBlockCount(', ')', 'int'),
  \ javaapi#method(0,'getFreeBlocks(', ')', 'int'),
  \ javaapi#method(0,'getAvailableBlocks(', ')', 'int'),
  \ ])

