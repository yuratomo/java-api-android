call javaapi#namespace('android.os')

call javaapi#interface('Parcelable', '', [
  \ javaapi#field(1,1,'PARCELABLE_WRITE_RETURN_VALUE', 'int'),
  \ javaapi#field(1,1,'CONTENTS_FILE_DESCRIPTOR', 'int'),
  \ javaapi#method(0,1,'describeContents(', ')', 'int'),
  \ javaapi#method(0,1,'writeToParcel(', 'Parcel, int)', 'void'),
  \ ])

call javaapi#class('TokenWatcher', '', [
  \ javaapi#method(0,1,'TokenWatcher(', 'Handler, String)', ''),
  \ javaapi#method(0,1,'acquired(', ')', 'void'),
  \ javaapi#method(0,1,'released(', ')', 'void'),
  \ javaapi#method(0,1,'acquire(', 'IBinder, String)', 'void'),
  \ javaapi#method(0,1,'cleanup(', 'IBinder, boolean)', 'void'),
  \ javaapi#method(0,1,'release(', 'IBinder)', 'void'),
  \ javaapi#method(0,1,'isAcquired(', ')', 'boolean'),
  \ javaapi#method(0,1,'dump(', ')', 'void'),
  \ javaapi#method(0,1,'dump(', 'PrintWriter)', 'void'),
  \ ])

call javaapi#class('HandlerThread', 'Thread', [
  \ javaapi#method(0,1,'HandlerThread(', 'String)', ''),
  \ javaapi#method(0,1,'HandlerThread(', 'String, int)', ''),
  \ javaapi#method(0,0,'onLooperPrepared(', ')', 'void'),
  \ javaapi#method(0,1,'run(', ')', 'void'),
  \ javaapi#method(0,1,'getLooper(', ')', 'Looper'),
  \ javaapi#method(0,1,'quit(', ')', 'boolean'),
  \ javaapi#method(0,1,'getThreadId(', ')', 'int'),
  \ ])

call javaapi#class('CancellationSignal', '', [
  \ javaapi#method(0,1,'CancellationSignal(', ')', ''),
  \ javaapi#method(0,1,'isCanceled(', ')', 'boolean'),
  \ javaapi#method(0,1,'throwIfCanceled(', ')', 'void'),
  \ javaapi#method(0,1,'cancel(', ')', 'void'),
  \ javaapi#method(0,1,'setOnCancelListener(', 'OnCancelListener)', 'void'),
  \ ])

call javaapi#class('Looper', '', [
  \ javaapi#method(1,1,'prepare(', ')', 'void'),
  \ javaapi#method(1,1,'prepareMainLooper(', ')', 'void'),
  \ javaapi#method(1,1,'getMainLooper(', ')', 'Looper'),
  \ javaapi#method(1,1,'loop(', ')', 'void'),
  \ javaapi#method(1,1,'myLooper(', ')', 'Looper'),
  \ javaapi#method(0,1,'setMessageLogging(', 'Printer)', 'void'),
  \ javaapi#method(1,1,'myQueue(', ')', 'MessageQueue'),
  \ javaapi#method(0,1,'quit(', ')', 'void'),
  \ javaapi#method(0,1,'getThread(', ')', 'Thread'),
  \ javaapi#method(0,1,'dump(', 'Printer, String)', 'void'),
  \ javaapi#method(0,1,'toString(', ')', 'String'),
  \ ])

call javaapi#class('FileObserver', '', [
  \ javaapi#field(1,1,'ACCESS', 'int'),
  \ javaapi#field(1,1,'MODIFY', 'int'),
  \ javaapi#field(1,1,'ATTRIB', 'int'),
  \ javaapi#field(1,1,'CLOSE_WRITE', 'int'),
  \ javaapi#field(1,1,'CLOSE_NOWRITE', 'int'),
  \ javaapi#field(1,1,'OPEN', 'int'),
  \ javaapi#field(1,1,'MOVED_FROM', 'int'),
  \ javaapi#field(1,1,'MOVED_TO', 'int'),
  \ javaapi#field(1,1,'CREATE', 'int'),
  \ javaapi#field(1,1,'DELETE', 'int'),
  \ javaapi#field(1,1,'DELETE_SELF', 'int'),
  \ javaapi#field(1,1,'MOVE_SELF', 'int'),
  \ javaapi#field(1,1,'ALL_EVENTS', 'int'),
  \ javaapi#method(0,1,'FileObserver(', 'String)', ''),
  \ javaapi#method(0,1,'FileObserver(', 'String, int)', ''),
  \ javaapi#method(0,0,'finalize(', ')', 'void'),
  \ javaapi#method(0,1,'startWatching(', ')', 'void'),
  \ javaapi#method(0,1,'stopWatching(', ')', 'void'),
  \ javaapi#method(0,1,'onEvent(', 'int, String)', 'void'),
  \ ])

call javaapi#class('Messenger', 'Parcelable', [
  \ javaapi#field(1,1,'CREATOR', 'Creator'),
  \ javaapi#method(0,1,'Messenger(', 'Handler)', ''),
  \ javaapi#method(0,1,'Messenger(', 'IBinder)', ''),
  \ javaapi#method(0,1,'send(', 'Message) throws RemoteException', 'void'),
  \ javaapi#method(0,1,'getBinder(', ')', 'IBinder'),
  \ javaapi#method(0,1,'equals(', 'Object)', 'boolean'),
  \ javaapi#method(0,1,'hashCode(', ')', 'int'),
  \ javaapi#method(0,1,'describeContents(', ')', 'int'),
  \ javaapi#method(0,1,'writeToParcel(', 'Parcel, int)', 'void'),
  \ javaapi#method(1,1,'writeMessengerOrNullToParcel(', 'Messenger, Parcel)', 'void'),
  \ javaapi#method(1,1,'readMessengerOrNullFromParcel(', 'Parcel)', 'Messenger'),
  \ ])

call javaapi#class('Build', '', [
  \ javaapi#field(1,1,'UNKNOWN', 'String'),
  \ javaapi#field(1,1,'ID', 'String'),
  \ javaapi#field(1,1,'DISPLAY', 'String'),
  \ javaapi#field(1,1,'PRODUCT', 'String'),
  \ javaapi#field(1,1,'DEVICE', 'String'),
  \ javaapi#field(1,1,'BOARD', 'String'),
  \ javaapi#field(1,1,'CPU_ABI', 'String'),
  \ javaapi#field(1,1,'CPU_ABI2', 'String'),
  \ javaapi#field(1,1,'MANUFACTURER', 'String'),
  \ javaapi#field(1,1,'BRAND', 'String'),
  \ javaapi#field(1,1,'MODEL', 'String'),
  \ javaapi#field(1,1,'BOOTLOADER', 'String'),
  \ javaapi#field(1,1,'RADIO', 'String'),
  \ javaapi#field(1,1,'HARDWARE', 'String'),
  \ javaapi#field(1,1,'SERIAL', 'String'),
  \ javaapi#field(1,1,'TYPE', 'String'),
  \ javaapi#field(1,1,'TAGS', 'String'),
  \ javaapi#field(1,1,'FINGERPRINT', 'String'),
  \ javaapi#field(1,1,'TIME', 'long'),
  \ javaapi#field(1,1,'USER', 'String'),
  \ javaapi#field(1,1,'HOST', 'String'),
  \ javaapi#method(0,1,'Build(', ')', ''),
  \ javaapi#method(1,1,'getRadioVersion(', ')', 'String'),
  \ ])

call javaapi#class('Parcel', '', [
  \ javaapi#field(1,1,'STRING_CREATOR', 'Creator'),
  \ javaapi#method(1,1,'obtain(', ')', 'Parcel'),
  \ javaapi#method(0,1,'recycle(', ')', 'void'),
  \ javaapi#method(0,1,'dataSize(', ')', 'int'),
  \ javaapi#method(0,1,'dataAvail(', ')', 'int'),
  \ javaapi#method(0,1,'dataPosition(', ')', 'int'),
  \ javaapi#method(0,1,'dataCapacity(', ')', 'int'),
  \ javaapi#method(0,1,'setDataSize(', 'int)', 'void'),
  \ javaapi#method(0,1,'setDataPosition(', 'int)', 'void'),
  \ javaapi#method(0,1,'setDataCapacity(', 'int)', 'void'),
  \ javaapi#method(0,1,'marshall(', ')', 'byte'),
  \ javaapi#method(0,1,'unmarshall(', 'byte[], int, int)', 'void'),
  \ javaapi#method(0,1,'appendFrom(', 'Parcel, int, int)', 'void'),
  \ javaapi#method(0,1,'hasFileDescriptors(', ')', 'boolean'),
  \ javaapi#method(0,1,'writeInterfaceToken(', 'String)', 'void'),
  \ javaapi#method(0,1,'enforceInterface(', 'String)', 'void'),
  \ javaapi#method(0,1,'writeByteArray(', 'byte[])', 'void'),
  \ javaapi#method(0,1,'writeByteArray(', 'byte[], int, int)', 'void'),
  \ javaapi#method(0,1,'writeInt(', 'int)', 'void'),
  \ javaapi#method(0,1,'writeLong(', 'long)', 'void'),
  \ javaapi#method(0,1,'writeFloat(', 'float)', 'void'),
  \ javaapi#method(0,1,'writeDouble(', 'double)', 'void'),
  \ javaapi#method(0,1,'writeString(', 'String)', 'void'),
  \ javaapi#method(0,1,'writeStrongBinder(', 'IBinder)', 'void'),
  \ javaapi#method(0,1,'writeStrongInterface(', 'IInterface)', 'void'),
  \ javaapi#method(0,1,'writeFileDescriptor(', 'FileDescriptor)', 'void'),
  \ javaapi#method(0,1,'writeByte(', 'byte)', 'void'),
  \ javaapi#method(0,1,'writeMap(', 'Map)', 'void'),
  \ javaapi#method(0,1,'writeBundle(', 'Bundle)', 'void'),
  \ javaapi#method(0,1,'writeList(', 'List)', 'void'),
  \ javaapi#method(0,1,'writeArray(', 'Object[])', 'void'),
  \ javaapi#method(0,1,'writeSparseArray(', 'SparseArray<Object>)', 'void'),
  \ javaapi#method(0,1,'writeSparseBooleanArray(', 'SparseBooleanArray)', 'void'),
  \ javaapi#method(0,1,'writeBooleanArray(', 'boolean[])', 'void'),
  \ javaapi#method(0,1,'createBooleanArray(', ')', 'boolean'),
  \ javaapi#method(0,1,'readBooleanArray(', 'boolean[])', 'void'),
  \ javaapi#method(0,1,'writeCharArray(', 'char[])', 'void'),
  \ javaapi#method(0,1,'createCharArray(', ')', 'char'),
  \ javaapi#method(0,1,'readCharArray(', 'char[])', 'void'),
  \ javaapi#method(0,1,'writeIntArray(', 'int[])', 'void'),
  \ javaapi#method(0,1,'createIntArray(', ')', 'int'),
  \ javaapi#method(0,1,'readIntArray(', 'int[])', 'void'),
  \ javaapi#method(0,1,'writeLongArray(', 'long[])', 'void'),
  \ javaapi#method(0,1,'createLongArray(', ')', 'long'),
  \ javaapi#method(0,1,'readLongArray(', 'long[])', 'void'),
  \ javaapi#method(0,1,'writeFloatArray(', 'float[])', 'void'),
  \ javaapi#method(0,1,'createFloatArray(', ')', 'float'),
  \ javaapi#method(0,1,'readFloatArray(', 'float[])', 'void'),
  \ javaapi#method(0,1,'writeDoubleArray(', 'double[])', 'void'),
  \ javaapi#method(0,1,'createDoubleArray(', ')', 'double'),
  \ javaapi#method(0,1,'readDoubleArray(', 'double[])', 'void'),
  \ javaapi#method(0,1,'writeStringArray(', 'String[])', 'void'),
  \ javaapi#method(0,1,'createStringArray(', ')', 'String'),
  \ javaapi#method(0,1,'readStringArray(', 'String[])', 'void'),
  \ javaapi#method(0,1,'writeBinderArray(', 'IBinder[])', 'void'),
  \ javaapi#method(0,1,'createBinderArray(', ')', 'IBinder'),
  \ javaapi#method(0,1,'readBinderArray(', 'IBinder[])', 'void'),
  \ javaapi#method(0,1,'writeTypedList(', 'List<T>)', 'void'),
  \ javaapi#method(0,1,'writeStringList(', 'List<String>)', 'void'),
  \ javaapi#method(0,1,'writeBinderList(', 'List<IBinder>)', 'void'),
  \ javaapi#method(0,1,'writeTypedArray(', 'T[], int)', 'void'),
  \ javaapi#method(0,1,'writeValue(', 'Object)', 'void'),
  \ javaapi#method(0,1,'writeParcelable(', 'Parcelable, int)', 'void'),
  \ javaapi#method(0,1,'writeSerializable(', 'Serializable)', 'void'),
  \ javaapi#method(0,1,'writeException(', 'Exception)', 'void'),
  \ javaapi#method(0,1,'writeNoException(', ')', 'void'),
  \ javaapi#method(0,1,'readException(', ')', 'void'),
  \ javaapi#method(0,1,'readException(', 'int, String)', 'void'),
  \ javaapi#method(0,1,'readInt(', ')', 'int'),
  \ javaapi#method(0,1,'readLong(', ')', 'long'),
  \ javaapi#method(0,1,'readFloat(', ')', 'float'),
  \ javaapi#method(0,1,'readDouble(', ')', 'double'),
  \ javaapi#method(0,1,'readString(', ')', 'String'),
  \ javaapi#method(0,1,'readStrongBinder(', ')', 'IBinder'),
  \ javaapi#method(0,1,'readFileDescriptor(', ')', 'ParcelFileDescriptor'),
  \ javaapi#method(0,1,'readByte(', ')', 'byte'),
  \ javaapi#method(0,1,'readMap(', 'Map, ClassLoader)', 'void'),
  \ javaapi#method(0,1,'readList(', 'List, ClassLoader)', 'void'),
  \ javaapi#method(0,1,'readHashMap(', 'ClassLoader)', 'HashMap'),
  \ javaapi#method(0,1,'readBundle(', ')', 'Bundle'),
  \ javaapi#method(0,1,'readBundle(', 'ClassLoader)', 'Bundle'),
  \ javaapi#method(0,1,'createByteArray(', ')', 'byte'),
  \ javaapi#method(0,1,'readByteArray(', 'byte[])', 'void'),
  \ javaapi#method(0,1,'readArrayList(', 'ClassLoader)', 'ArrayList'),
  \ javaapi#method(0,1,'readArray(', 'ClassLoader)', 'Object'),
  \ javaapi#method(0,1,'readSparseArray(', 'ClassLoader)', 'SparseArray'),
  \ javaapi#method(0,1,'readSparseBooleanArray(', ')', 'SparseBooleanArray'),
  \ javaapi#method(0,1,'createTypedArrayList(', 'Creator<T>)', 'ArrayList'),
  \ javaapi#method(0,1,'readTypedList(', 'List<T>, Creator<T>)', 'void'),
  \ javaapi#method(0,1,'createStringArrayList(', ')', 'ArrayList'),
  \ javaapi#method(0,1,'createBinderArrayList(', ')', 'ArrayList'),
  \ javaapi#method(0,1,'readStringList(', 'List<String>)', 'void'),
  \ javaapi#method(0,1,'readBinderList(', 'List<IBinder>)', 'void'),
  \ javaapi#method(0,1,'createTypedArray(', 'Creator<T>)', 'T'),
  \ javaapi#method(0,1,'readTypedArray(', 'T[], Creator<T>)', 'void'),
  \ javaapi#method(0,1,'writeParcelableArray(', 'T[], int)', 'void'),
  \ javaapi#method(0,1,'readValue(', 'ClassLoader)', 'Object'),
  \ javaapi#method(0,1,'readParcelable(', 'ClassLoader)', 'T'),
  \ javaapi#method(0,1,'readParcelableArray(', 'ClassLoader)', 'Parcelable'),
  \ javaapi#method(0,1,'readSerializable(', ')', 'Serializable'),
  \ javaapi#method(1,0,'obtain(', 'int)', 'Parcel'),
  \ javaapi#method(0,0,'finalize(', ') throws Throwable', 'void'),
  \ ])

call javaapi#class('ParcelFormatException', 'RuntimeException', [
  \ javaapi#method(0,1,'ParcelFormatException(', ')', ''),
  \ javaapi#method(0,1,'ParcelFormatException(', 'String)', ''),
  \ ])

call javaapi#class('BatteryManager', '', [
  \ javaapi#field(1,1,'EXTRA_STATUS', 'String'),
  \ javaapi#field(1,1,'EXTRA_HEALTH', 'String'),
  \ javaapi#field(1,1,'EXTRA_PRESENT', 'String'),
  \ javaapi#field(1,1,'EXTRA_LEVEL', 'String'),
  \ javaapi#field(1,1,'EXTRA_SCALE', 'String'),
  \ javaapi#field(1,1,'EXTRA_ICON_SMALL', 'String'),
  \ javaapi#field(1,1,'EXTRA_PLUGGED', 'String'),
  \ javaapi#field(1,1,'EXTRA_VOLTAGE', 'String'),
  \ javaapi#field(1,1,'EXTRA_TEMPERATURE', 'String'),
  \ javaapi#field(1,1,'EXTRA_TECHNOLOGY', 'String'),
  \ javaapi#field(1,1,'BATTERY_STATUS_UNKNOWN', 'int'),
  \ javaapi#field(1,1,'BATTERY_STATUS_CHARGING', 'int'),
  \ javaapi#field(1,1,'BATTERY_STATUS_DISCHARGING', 'int'),
  \ javaapi#field(1,1,'BATTERY_STATUS_NOT_CHARGING', 'int'),
  \ javaapi#field(1,1,'BATTERY_STATUS_FULL', 'int'),
  \ javaapi#field(1,1,'BATTERY_HEALTH_UNKNOWN', 'int'),
  \ javaapi#field(1,1,'BATTERY_HEALTH_GOOD', 'int'),
  \ javaapi#field(1,1,'BATTERY_HEALTH_OVERHEAT', 'int'),
  \ javaapi#field(1,1,'BATTERY_HEALTH_DEAD', 'int'),
  \ javaapi#field(1,1,'BATTERY_HEALTH_OVER_VOLTAGE', 'int'),
  \ javaapi#field(1,1,'BATTERY_HEALTH_UNSPECIFIED_FAILURE', 'int'),
  \ javaapi#field(1,1,'BATTERY_HEALTH_COLD', 'int'),
  \ javaapi#field(1,1,'BATTERY_PLUGGED_AC', 'int'),
  \ javaapi#field(1,1,'BATTERY_PLUGGED_USB', 'int'),
  \ javaapi#field(1,1,'BATTERY_PLUGGED_WIRELESS', 'int'),
  \ javaapi#method(0,1,'BatteryManager(', ')', ''),
  \ ])

call javaapi#class('CountDownTimer', '', [
  \ javaapi#method(0,1,'CountDownTimer(', 'long, long)', ''),
  \ javaapi#method(0,1,'cancel(', ')', 'void'),
  \ javaapi#method(0,1,'start(', ')', 'CountDownTimer'),
  \ javaapi#method(0,1,'onTick(', 'long)', 'void'),
  \ javaapi#method(0,1,'onFinish(', ')', 'void'),
  \ ])

call javaapi#class('RemoteCallbackList<E', 'IInterface>', [
  \ javaapi#method(0,1,'RemoteCallbackList(', ')', ''),
  \ javaapi#method(0,1,'register(', 'E)', 'boolean'),
  \ javaapi#method(0,1,'register(', 'E, Object)', 'boolean'),
  \ javaapi#method(0,1,'unregister(', 'E)', 'boolean'),
  \ javaapi#method(0,1,'kill(', ')', 'void'),
  \ javaapi#method(0,1,'onCallbackDied(', 'E)', 'void'),
  \ javaapi#method(0,1,'onCallbackDied(', 'E, Object)', 'void'),
  \ javaapi#method(0,1,'beginBroadcast(', ')', 'int'),
  \ javaapi#method(0,1,'getBroadcastItem(', 'int)', 'E'),
  \ javaapi#method(0,1,'getBroadcastCookie(', 'int)', 'Object'),
  \ javaapi#method(0,1,'finishBroadcast(', ')', 'void'),
  \ javaapi#method(0,1,'getRegisteredCallbackCount(', ')', 'int'),
  \ ])

call javaapi#interface('IBinder', '', [
  \ javaapi#field(1,1,'FIRST_CALL_TRANSACTION', 'int'),
  \ javaapi#field(1,1,'LAST_CALL_TRANSACTION', 'int'),
  \ javaapi#field(1,1,'PING_TRANSACTION', 'int'),
  \ javaapi#field(1,1,'DUMP_TRANSACTION', 'int'),
  \ javaapi#field(1,1,'INTERFACE_TRANSACTION', 'int'),
  \ javaapi#field(1,1,'TWEET_TRANSACTION', 'int'),
  \ javaapi#field(1,1,'LIKE_TRANSACTION', 'int'),
  \ javaapi#field(1,1,'FLAG_ONEWAY', 'int'),
  \ javaapi#method(0,1,'getInterfaceDescriptor(', ') throws RemoteException', 'String'),
  \ javaapi#method(0,1,'pingBinder(', ')', 'boolean'),
  \ javaapi#method(0,1,'isBinderAlive(', ')', 'boolean'),
  \ javaapi#method(0,1,'queryLocalInterface(', 'String)', 'IInterface'),
  \ javaapi#method(0,1,'dump(', 'FileDescriptor, String[]) throws RemoteException', 'void'),
  \ javaapi#method(0,1,'dumpAsync(', 'FileDescriptor, String[]) throws RemoteException', 'void'),
  \ javaapi#method(0,1,'transact(', 'int, Parcel, Parcel, int) throws RemoteException', 'boolean'),
  \ javaapi#method(0,1,'linkToDeath(', 'DeathRecipient, int) throws RemoteException', 'void'),
  \ javaapi#method(0,1,'unlinkToDeath(', 'DeathRecipient, int)', 'boolean'),
  \ ])

call javaapi#class('UserHandle', 'Parcelable', [
  \ javaapi#field(1,1,'CREATOR', 'Creator'),
  \ javaapi#method(0,1,'UserHandle(', 'Parcel)', ''),
  \ javaapi#method(0,1,'toString(', ')', 'String'),
  \ javaapi#method(0,1,'equals(', 'Object)', 'boolean'),
  \ javaapi#method(0,1,'hashCode(', ')', 'int'),
  \ javaapi#method(0,1,'describeContents(', ')', 'int'),
  \ javaapi#method(0,1,'writeToParcel(', 'Parcel, int)', 'void'),
  \ javaapi#method(1,1,'writeToParcel(', 'UserHandle, Parcel)', 'void'),
  \ javaapi#method(1,1,'readFromParcel(', 'Parcel)', 'UserHandle'),
  \ ])

call javaapi#class('DeadObjectException', 'RemoteException', [
  \ javaapi#method(0,1,'DeadObjectException(', ')', ''),
  \ ])

call javaapi#class('DropBoxManager', '', [
  \ javaapi#field(1,1,'IS_EMPTY', 'int'),
  \ javaapi#field(1,1,'IS_TEXT', 'int'),
  \ javaapi#field(1,1,'IS_GZIPPED', 'int'),
  \ javaapi#field(1,1,'ACTION_DROPBOX_ENTRY_ADDED', 'String'),
  \ javaapi#field(1,1,'EXTRA_TAG', 'String'),
  \ javaapi#field(1,1,'EXTRA_TIME', 'String'),
  \ javaapi#method(0,0,'DropBoxManager(', ')', ''),
  \ javaapi#method(0,1,'addText(', 'String, String)', 'void'),
  \ javaapi#method(0,1,'addData(', 'String, byte[], int)', 'void'),
  \ javaapi#method(0,1,'addFile(', 'String, File, int) throws IOException', 'void'),
  \ javaapi#method(0,1,'isTagEnabled(', 'String)', 'boolean'),
  \ javaapi#method(0,1,'getNextEntry(', 'String, long)', 'Entry'),
  \ ])

call javaapi#class('RecoverySystem', '', [
  \ javaapi#method(0,1,'RecoverySystem(', ')', ''),
  \ javaapi#method(1,1,'verifyPackage(', 'File, ProgressListener, File) throws IOException, GeneralSecurityException', 'void'),
  \ javaapi#method(1,1,'installPackage(', 'Context, File) throws IOException', 'void'),
  \ javaapi#method(1,1,'rebootWipeUserData(', 'Context) throws IOException', 'void'),
  \ javaapi#method(1,1,'rebootWipeCache(', 'Context) throws IOException', 'void'),
  \ ])

call javaapi#class('OperationCanceledException', 'RuntimeException', [
  \ javaapi#method(0,1,'OperationCanceledException(', ')', ''),
  \ javaapi#method(0,1,'OperationCanceledException(', 'String)', ''),
  \ ])

call javaapi#class('Binder', 'IBinder', [
  \ javaapi#method(0,1,'Binder(', ')', ''),
  \ javaapi#method(1,1,'getCallingPid(', ')', 'int'),
  \ javaapi#method(1,1,'getCallingUid(', ')', 'int'),
  \ javaapi#method(1,1,'getCallingUserHandle(', ')', 'UserHandle'),
  \ javaapi#method(1,1,'clearCallingIdentity(', ')', 'long'),
  \ javaapi#method(1,1,'restoreCallingIdentity(', 'long)', 'void'),
  \ javaapi#method(1,1,'flushPendingCommands(', ')', 'void'),
  \ javaapi#method(1,1,'joinThreadPool(', ')', 'void'),
  \ javaapi#method(0,1,'attachInterface(', 'IInterface, String)', 'void'),
  \ javaapi#method(0,1,'getInterfaceDescriptor(', ')', 'String'),
  \ javaapi#method(0,1,'pingBinder(', ')', 'boolean'),
  \ javaapi#method(0,1,'isBinderAlive(', ')', 'boolean'),
  \ javaapi#method(0,1,'queryLocalInterface(', 'String)', 'IInterface'),
  \ javaapi#method(0,0,'onTransact(', 'int, Parcel, Parcel, int) throws RemoteException', 'boolean'),
  \ javaapi#method(0,1,'dump(', 'FileDescriptor, String[])', 'void'),
  \ javaapi#method(0,1,'dumpAsync(', 'FileDescriptor, String[])', 'void'),
  \ javaapi#method(0,0,'dump(', 'FileDescriptor, PrintWriter, String[])', 'void'),
  \ javaapi#method(0,1,'transact(', 'int, Parcel, Parcel, int) throws RemoteException', 'boolean'),
  \ javaapi#method(0,1,'linkToDeath(', 'DeathRecipient, int)', 'void'),
  \ javaapi#method(0,1,'unlinkToDeath(', 'DeathRecipient, int)', 'boolean'),
  \ javaapi#method(0,0,'finalize(', ') throws Throwable', 'void'),
  \ ])

call javaapi#class('ParcelUuid', 'Parcelable', [
  \ javaapi#field(1,1,'CREATOR', 'Creator'),
  \ javaapi#method(0,1,'ParcelUuid(', 'UUID)', ''),
  \ javaapi#method(1,1,'fromString(', 'String)', 'ParcelUuid'),
  \ javaapi#method(0,1,'getUuid(', ')', 'UUID'),
  \ javaapi#method(0,1,'toString(', ')', 'String'),
  \ javaapi#method(0,1,'hashCode(', ')', 'int'),
  \ javaapi#method(0,1,'equals(', 'Object)', 'boolean'),
  \ javaapi#method(0,1,'describeContents(', ')', 'int'),
  \ javaapi#method(0,1,'writeToParcel(', 'Parcel, int)', 'void'),
  \ ])

call javaapi#class('Environment', '', [
  \ javaapi#field(1,1,'DIRECTORY_MUSIC', 'String'),
  \ javaapi#field(1,1,'DIRECTORY_PODCASTS', 'String'),
  \ javaapi#field(1,1,'DIRECTORY_RINGTONES', 'String'),
  \ javaapi#field(1,1,'DIRECTORY_ALARMS', 'String'),
  \ javaapi#field(1,1,'DIRECTORY_NOTIFICATIONS', 'String'),
  \ javaapi#field(1,1,'DIRECTORY_PICTURES', 'String'),
  \ javaapi#field(1,1,'DIRECTORY_MOVIES', 'String'),
  \ javaapi#field(1,1,'DIRECTORY_DOWNLOADS', 'String'),
  \ javaapi#field(1,1,'DIRECTORY_DCIM', 'String'),
  \ javaapi#field(1,1,'MEDIA_REMOVED', 'String'),
  \ javaapi#field(1,1,'MEDIA_UNMOUNTED', 'String'),
  \ javaapi#field(1,1,'MEDIA_CHECKING', 'String'),
  \ javaapi#field(1,1,'MEDIA_NOFS', 'String'),
  \ javaapi#field(1,1,'MEDIA_MOUNTED', 'String'),
  \ javaapi#field(1,1,'MEDIA_MOUNTED_READ_ONLY', 'String'),
  \ javaapi#field(1,1,'MEDIA_SHARED', 'String'),
  \ javaapi#field(1,1,'MEDIA_BAD_REMOVAL', 'String'),
  \ javaapi#field(1,1,'MEDIA_UNMOUNTABLE', 'String'),
  \ javaapi#method(0,1,'Environment(', ')', ''),
  \ javaapi#method(1,1,'getRootDirectory(', ')', 'File'),
  \ javaapi#method(1,1,'getDataDirectory(', ')', 'File'),
  \ javaapi#method(1,1,'getExternalStorageDirectory(', ')', 'File'),
  \ javaapi#method(1,1,'getExternalStoragePublicDirectory(', 'String)', 'File'),
  \ javaapi#method(1,1,'getDownloadCacheDirectory(', ')', 'File'),
  \ javaapi#method(1,1,'getExternalStorageState(', ')', 'String'),
  \ javaapi#method(1,1,'isExternalStorageRemovable(', ')', 'boolean'),
  \ javaapi#method(1,1,'isExternalStorageEmulated(', ')', 'boolean'),
  \ ])

call javaapi#class('MessageQueue', '', [
  \ javaapi#method(0,1,'addIdleHandler(', 'IdleHandler)', 'void'),
  \ javaapi#method(0,1,'removeIdleHandler(', 'IdleHandler)', 'void'),
  \ javaapi#method(0,0,'finalize(', ') throws Throwable', 'void'),
  \ ])

call javaapi#class('Process', '', [
  \ javaapi#field(1,1,'SYSTEM_UID', 'int'),
  \ javaapi#field(1,1,'PHONE_UID', 'int'),
  \ javaapi#field(1,1,'FIRST_APPLICATION_UID', 'int'),
  \ javaapi#field(1,1,'LAST_APPLICATION_UID', 'int'),
  \ javaapi#field(1,1,'BLUETOOTH_GID', 'int'),
  \ javaapi#field(1,1,'THREAD_PRIORITY_DEFAULT', 'int'),
  \ javaapi#field(1,1,'THREAD_PRIORITY_LOWEST', 'int'),
  \ javaapi#field(1,1,'THREAD_PRIORITY_BACKGROUND', 'int'),
  \ javaapi#field(1,1,'THREAD_PRIORITY_FOREGROUND', 'int'),
  \ javaapi#field(1,1,'THREAD_PRIORITY_DISPLAY', 'int'),
  \ javaapi#field(1,1,'THREAD_PRIORITY_URGENT_DISPLAY', 'int'),
  \ javaapi#field(1,1,'THREAD_PRIORITY_AUDIO', 'int'),
  \ javaapi#field(1,1,'THREAD_PRIORITY_URGENT_AUDIO', 'int'),
  \ javaapi#field(1,1,'THREAD_PRIORITY_MORE_FAVORABLE', 'int'),
  \ javaapi#field(1,1,'THREAD_PRIORITY_LESS_FAVORABLE', 'int'),
  \ javaapi#field(1,1,'SIGNAL_QUIT', 'int'),
  \ javaapi#field(1,1,'SIGNAL_KILL', 'int'),
  \ javaapi#field(1,1,'SIGNAL_USR1', 'int'),
  \ javaapi#method(0,1,'Process(', ')', ''),
  \ javaapi#method(1,1,'getElapsedCpuTime(', ')', 'long'),
  \ javaapi#method(1,1,'myPid(', ')', 'int'),
  \ javaapi#method(1,1,'myTid(', ')', 'int'),
  \ javaapi#method(1,1,'myUid(', ')', 'int'),
  \ javaapi#method(1,1,'myUserHandle(', ')', 'UserHandle'),
  \ javaapi#method(1,1,'getUidForName(', 'String)', 'int'),
  \ javaapi#method(1,1,'getGidForName(', 'String)', 'int'),
  \ javaapi#method(1,1,'setThreadPriority(', 'int, int) throws IllegalArgumentException, SecurityException', 'void'),
  \ javaapi#method(1,1,'setThreadPriority(', 'int) throws IllegalArgumentException, SecurityException', 'void'),
  \ javaapi#method(1,1,'getThreadPriority(', 'int) throws IllegalArgumentException', 'int'),
  \ javaapi#method(1,1,'supportsProcesses(', ')', 'boolean'),
  \ javaapi#method(1,1,'killProcess(', 'int)', 'void'),
  \ javaapi#method(1,1,'sendSignal(', 'int, int)', 'void'),
  \ ])

call javaapi#class('ParcelFileDescriptor', 'Closeable', [
  \ javaapi#field(1,1,'MODE_WORLD_READABLE', 'int'),
  \ javaapi#field(1,1,'MODE_WORLD_WRITEABLE', 'int'),
  \ javaapi#field(1,1,'MODE_READ_ONLY', 'int'),
  \ javaapi#field(1,1,'MODE_WRITE_ONLY', 'int'),
  \ javaapi#field(1,1,'MODE_READ_WRITE', 'int'),
  \ javaapi#field(1,1,'MODE_CREATE', 'int'),
  \ javaapi#field(1,1,'MODE_TRUNCATE', 'int'),
  \ javaapi#field(1,1,'MODE_APPEND', 'int'),
  \ javaapi#field(1,1,'CREATOR', 'Creator'),
  \ javaapi#method(0,1,'ParcelFileDescriptor(', 'ParcelFileDescriptor)', ''),
  \ javaapi#method(1,1,'open(', 'File, int) throws FileNotFoundException', 'ParcelFileDescriptor'),
  \ javaapi#method(1,1,'dup(', 'FileDescriptor) throws IOException', 'ParcelFileDescriptor'),
  \ javaapi#method(0,1,'dup(', ') throws IOException', 'ParcelFileDescriptor'),
  \ javaapi#method(1,1,'fromFd(', 'int) throws IOException', 'ParcelFileDescriptor'),
  \ javaapi#method(1,1,'adoptFd(', 'int)', 'ParcelFileDescriptor'),
  \ javaapi#method(1,1,'fromSocket(', 'Socket)', 'ParcelFileDescriptor'),
  \ javaapi#method(1,1,'fromDatagramSocket(', 'DatagramSocket)', 'ParcelFileDescriptor'),
  \ javaapi#method(1,1,'createPipe(', ') throws IOException', 'ParcelFileDescriptor'),
  \ javaapi#method(0,1,'getFileDescriptor(', ')', 'FileDescriptor'),
  \ javaapi#method(0,1,'getStatSize(', ')', 'long'),
  \ javaapi#method(0,1,'getFd(', ')', 'int'),
  \ javaapi#method(0,1,'detachFd(', ')', 'int'),
  \ javaapi#method(0,1,'close(', ') throws IOException', 'void'),
  \ javaapi#method(0,1,'toString(', ')', 'String'),
  \ javaapi#method(0,0,'finalize(', ') throws Throwable', 'void'),
  \ javaapi#method(0,1,'describeContents(', ')', 'int'),
  \ javaapi#method(0,1,'writeToParcel(', 'Parcel, int)', 'void'),
  \ ])

call javaapi#class('Message', 'Parcelable', [
  \ javaapi#field(0,1,'what', 'int'),
  \ javaapi#field(0,1,'arg1', 'int'),
  \ javaapi#field(0,1,'arg2', 'int'),
  \ javaapi#field(0,1,'obj', 'Object'),
  \ javaapi#field(0,1,'replyTo', 'Messenger'),
  \ javaapi#field(1,1,'CREATOR', 'Creator'),
  \ javaapi#method(0,1,'Message(', ')', ''),
  \ javaapi#method(1,1,'obtain(', ')', 'Message'),
  \ javaapi#method(1,1,'obtain(', 'Message)', 'Message'),
  \ javaapi#method(1,1,'obtain(', 'Handler)', 'Message'),
  \ javaapi#method(1,1,'obtain(', 'Handler, Runnable)', 'Message'),
  \ javaapi#method(1,1,'obtain(', 'Handler, int)', 'Message'),
  \ javaapi#method(1,1,'obtain(', 'Handler, int, Object)', 'Message'),
  \ javaapi#method(1,1,'obtain(', 'Handler, int, int, int)', 'Message'),
  \ javaapi#method(1,1,'obtain(', 'Handler, int, int, int, Object)', 'Message'),
  \ javaapi#method(0,1,'recycle(', ')', 'void'),
  \ javaapi#method(0,1,'copyFrom(', 'Message)', 'void'),
  \ javaapi#method(0,1,'getWhen(', ')', 'long'),
  \ javaapi#method(0,1,'setTarget(', 'Handler)', 'void'),
  \ javaapi#method(0,1,'getTarget(', ')', 'Handler'),
  \ javaapi#method(0,1,'getCallback(', ')', 'Runnable'),
  \ javaapi#method(0,1,'getData(', ')', 'Bundle'),
  \ javaapi#method(0,1,'peekData(', ')', 'Bundle'),
  \ javaapi#method(0,1,'setData(', 'Bundle)', 'void'),
  \ javaapi#method(0,1,'sendToTarget(', ')', 'void'),
  \ javaapi#method(0,1,'toString(', ')', 'String'),
  \ javaapi#method(0,1,'describeContents(', ')', 'int'),
  \ javaapi#method(0,1,'writeToParcel(', 'Parcel, int)', 'void'),
  \ ])

call javaapi#interface('IInterface', '', [
  \ javaapi#method(0,1,'asBinder(', ')', 'IBinder'),
  \ ])

call javaapi#class('NetworkOnMainThreadException', 'RuntimeException', [
  \ javaapi#method(0,1,'NetworkOnMainThreadException(', ')', ''),
  \ ])

call javaapi#class('SystemClock', '', [
  \ javaapi#method(1,1,'sleep(', 'long)', 'void'),
  \ javaapi#method(1,1,'setCurrentTimeMillis(', 'long)', 'boolean'),
  \ javaapi#method(1,1,'uptimeMillis(', ')', 'long'),
  \ javaapi#method(1,1,'elapsedRealtime(', ')', 'long'),
  \ javaapi#method(1,1,'elapsedRealtimeNanos(', ')', 'long'),
  \ javaapi#method(1,1,'currentThreadTimeMillis(', ')', 'long'),
  \ ])

call javaapi#class('StatFs', '', [
  \ javaapi#method(0,1,'StatFs(', 'String)', ''),
  \ javaapi#method(0,1,'restat(', 'String)', 'void'),
  \ javaapi#method(0,1,'getBlockSize(', ')', 'int'),
  \ javaapi#method(0,1,'getBlockCount(', ')', 'int'),
  \ javaapi#method(0,1,'getFreeBlocks(', ')', 'int'),
  \ javaapi#method(0,1,'getAvailableBlocks(', ')', 'int'),
  \ ])

call javaapi#namespace('android.os')

call javaapi#class('ResultReceiver', 'Parcelable', [
  \ javaapi#field(1,1,'CREATOR', 'Creator'),
  \ javaapi#method(0,1,'ResultReceiver(', 'Handler)', ''),
  \ javaapi#method(0,1,'send(', 'int, Bundle)', 'void'),
  \ javaapi#method(0,0,'onReceiveResult(', 'int, Bundle)', 'void'),
  \ javaapi#method(0,1,'describeContents(', ')', 'int'),
  \ javaapi#method(0,1,'writeToParcel(', 'Parcel, int)', 'void'),
  \ ])

call javaapi#class('UserManager', '', [
  \ javaapi#method(0,1,'getUserName(', ')', 'String'),
  \ javaapi#method(0,1,'isUserAGoat(', ')', 'boolean'),
  \ javaapi#method(0,1,'isUserRunning(', 'UserHandle)', 'boolean'),
  \ javaapi#method(0,1,'isUserRunningOrStopping(', 'UserHandle)', 'boolean'),
  \ javaapi#method(0,1,'getSerialNumberForUser(', 'UserHandle)', 'long'),
  \ javaapi#method(0,1,'getUserForSerialNumber(', 'long)', 'UserHandle'),
  \ javaapi#method(0,1,'getUserCount(', ')', 'int'),
  \ ])

call javaapi#class('WorkSource', 'Parcelable', [
  \ javaapi#field(1,1,'CREATOR', 'Creator'),
  \ javaapi#method(0,1,'WorkSource(', ')', ''),
  \ javaapi#method(0,1,'WorkSource(', 'WorkSource)', ''),
  \ javaapi#method(0,1,'clear(', ')', 'void'),
  \ javaapi#method(0,1,'equals(', 'Object)', 'boolean'),
  \ javaapi#method(0,1,'hashCode(', ')', 'int'),
  \ javaapi#method(0,1,'diff(', 'WorkSource)', 'boolean'),
  \ javaapi#method(0,1,'set(', 'WorkSource)', 'void'),
  \ javaapi#method(0,1,'add(', 'WorkSource)', 'boolean'),
  \ javaapi#method(0,1,'remove(', 'WorkSource)', 'boolean'),
  \ javaapi#method(0,1,'describeContents(', ')', 'int'),
  \ javaapi#method(0,1,'writeToParcel(', 'Parcel, int)', 'void'),
  \ javaapi#method(0,1,'toString(', ')', 'String'),
  \ ])

call javaapi#class('ConditionVariable', '', [
  \ javaapi#method(0,1,'ConditionVariable(', ')', ''),
  \ javaapi#method(0,1,'ConditionVariable(', 'boolean)', ''),
  \ javaapi#method(0,1,'open(', ')', 'void'),
  \ javaapi#method(0,1,'close(', ')', 'void'),
  \ javaapi#method(0,1,'block(', ')', 'void'),
  \ javaapi#method(0,1,'block(', 'long)', 'boolean'),
  \ ])

call javaapi#class('StrictMode', '', [
  \ javaapi#method(1,1,'setThreadPolicy(', 'ThreadPolicy)', 'void'),
  \ javaapi#method(1,1,'getThreadPolicy(', ')', 'ThreadPolicy'),
  \ javaapi#method(1,1,'allowThreadDiskWrites(', ')', 'ThreadPolicy'),
  \ javaapi#method(1,1,'allowThreadDiskReads(', ')', 'ThreadPolicy'),
  \ javaapi#method(1,1,'setVmPolicy(', 'VmPolicy)', 'void'),
  \ javaapi#method(1,1,'getVmPolicy(', ')', 'VmPolicy'),
  \ javaapi#method(1,1,'enableDefaults(', ')', 'void'),
  \ javaapi#method(1,1,'noteSlowCall(', 'String)', 'void'),
  \ ])

call javaapi#class('MemoryFile', '', [
  \ javaapi#method(0,1,'MemoryFile(', 'String, int) throws IOException', ''),
  \ javaapi#method(0,1,'close(', ')', 'void'),
  \ javaapi#method(0,0,'finalize(', ')', 'void'),
  \ javaapi#method(0,1,'length(', ')', 'int'),
  \ javaapi#method(0,1,'isPurgingAllowed(', ')', 'boolean'),
  \ javaapi#method(0,1,'allowPurging(', 'boolean) throws IOException', 'boolean'),
  \ javaapi#method(0,1,'getInputStream(', ')', 'InputStream'),
  \ javaapi#method(0,1,'getOutputStream(', ')', 'OutputStream'),
  \ javaapi#method(0,1,'readBytes(', 'byte[], int, int, int) throws IOException', 'int'),
  \ javaapi#method(0,1,'writeBytes(', 'byte[], int, int, int) throws IOException', 'void'),
  \ ])

call javaapi#class('RemoteException', 'AndroidException', [
  \ javaapi#method(0,1,'RemoteException(', ')', ''),
  \ javaapi#method(0,1,'RemoteException(', 'String)', ''),
  \ ])

call javaapi#class('BadParcelableException', 'AndroidRuntimeException', [
  \ javaapi#method(0,1,'BadParcelableException(', 'String)', ''),
  \ javaapi#method(0,1,'BadParcelableException(', 'Exception)', ''),
  \ ])

call javaapi#class('AsyncTask', '', [
  \ javaapi#field(1,1,'THREAD_POOL_EXECUTOR', 'Executor'),
  \ javaapi#field(1,1,'SERIAL_EXECUTOR', 'Executor'),
  \ javaapi#method(0,1,'AsyncTask(', ')', ''),
  \ javaapi#method(0,1,'getStatus(', ')', 'Status'),
  \ javaapi#method(0,0,'doInBackground(', ')', 'Result'),
  \ javaapi#method(0,0,'onPreExecute(', ')', 'void'),
  \ javaapi#method(0,0,'onPostExecute(', 'Result)', 'void'),
  \ javaapi#method(0,0,'onProgressUpdate(', ')', 'void'),
  \ javaapi#method(0,0,'onCancelled(', 'Result)', 'void'),
  \ javaapi#method(0,0,'onCancelled(', ')', 'void'),
  \ javaapi#method(0,1,'isCancelled(', ')', 'boolean'),
  \ javaapi#method(0,1,'cancel(', 'boolean)', 'boolean'),
  \ javaapi#method(0,1,'get(', ') throws InterruptedException, ExecutionException', 'Result'),
  \ javaapi#method(0,1,'get(', 'long, TimeUnit) throws InterruptedException, ExecutionException, TimeoutException', 'Result'),
  \ javaapi#method(0,1,'execute(', ')', 'Result>'),
  \ javaapi#method(0,1,'executeOnExecutor(', 'Executor, )', 'Result>'),
  \ javaapi#method(1,1,'execute(', 'Runnable)', 'void'),
  \ javaapi#method(0,0,'publishProgress(', ')', 'void'),
  \ ])

call javaapi#class('Debug', '', [
  \ javaapi#field(1,1,'TRACE_COUNT_ALLOCS', 'int'),
  \ javaapi#field(1,1,'SHOW_FULL_DETAIL', 'int'),
  \ javaapi#field(1,1,'SHOW_CLASSLOADER', 'int'),
  \ javaapi#field(1,1,'SHOW_INITIALIZED', 'int'),
  \ javaapi#method(1,1,'waitForDebugger(', ')', 'void'),
  \ javaapi#method(1,1,'waitingForDebugger(', ')', 'boolean'),
  \ javaapi#method(1,1,'isDebuggerConnected(', ')', 'boolean'),
  \ javaapi#method(1,1,'changeDebugPort(', 'int)', 'void'),
  \ javaapi#method(1,1,'startNativeTracing(', ')', 'void'),
  \ javaapi#method(1,1,'stopNativeTracing(', ')', 'void'),
  \ javaapi#method(1,1,'enableEmulatorTraceOutput(', ')', 'void'),
  \ javaapi#method(1,1,'startMethodTracing(', ')', 'void'),
  \ javaapi#method(1,1,'startMethodTracing(', 'String)', 'void'),
  \ javaapi#method(1,1,'startMethodTracing(', 'String, int)', 'void'),
  \ javaapi#method(1,1,'startMethodTracing(', 'String, int, int)', 'void'),
  \ javaapi#method(1,1,'stopMethodTracing(', ')', 'void'),
  \ javaapi#method(1,1,'threadCpuTimeNanos(', ')', 'long'),
  \ javaapi#method(1,1,'startAllocCounting(', ')', 'void'),
  \ javaapi#method(1,1,'stopAllocCounting(', ')', 'void'),
  \ javaapi#method(1,1,'getGlobalAllocCount(', ')', 'int'),
  \ javaapi#method(1,1,'getGlobalAllocSize(', ')', 'int'),
  \ javaapi#method(1,1,'getGlobalFreedCount(', ')', 'int'),
  \ javaapi#method(1,1,'getGlobalFreedSize(', ')', 'int'),
  \ javaapi#method(1,1,'getGlobalClassInitCount(', ')', 'int'),
  \ javaapi#method(1,1,'getGlobalClassInitTime(', ')', 'int'),
  \ javaapi#method(1,1,'getGlobalExternalAllocCount(', ')', 'int'),
  \ javaapi#method(1,1,'getGlobalExternalAllocSize(', ')', 'int'),
  \ javaapi#method(1,1,'getGlobalExternalFreedCount(', ')', 'int'),
  \ javaapi#method(1,1,'getGlobalExternalFreedSize(', ')', 'int'),
  \ javaapi#method(1,1,'getGlobalGcInvocationCount(', ')', 'int'),
  \ javaapi#method(1,1,'getThreadAllocCount(', ')', 'int'),
  \ javaapi#method(1,1,'getThreadAllocSize(', ')', 'int'),
  \ javaapi#method(1,1,'getThreadExternalAllocCount(', ')', 'int'),
  \ javaapi#method(1,1,'getThreadExternalAllocSize(', ')', 'int'),
  \ javaapi#method(1,1,'getThreadGcInvocationCount(', ')', 'int'),
  \ javaapi#method(1,1,'resetGlobalAllocCount(', ')', 'void'),
  \ javaapi#method(1,1,'resetGlobalAllocSize(', ')', 'void'),
  \ javaapi#method(1,1,'resetGlobalFreedCount(', ')', 'void'),
  \ javaapi#method(1,1,'resetGlobalFreedSize(', ')', 'void'),
  \ javaapi#method(1,1,'resetGlobalClassInitCount(', ')', 'void'),
  \ javaapi#method(1,1,'resetGlobalClassInitTime(', ')', 'void'),
  \ javaapi#method(1,1,'resetGlobalExternalAllocCount(', ')', 'void'),
  \ javaapi#method(1,1,'resetGlobalExternalAllocSize(', ')', 'void'),
  \ javaapi#method(1,1,'resetGlobalExternalFreedCount(', ')', 'void'),
  \ javaapi#method(1,1,'resetGlobalExternalFreedSize(', ')', 'void'),
  \ javaapi#method(1,1,'resetGlobalGcInvocationCount(', ')', 'void'),
  \ javaapi#method(1,1,'resetThreadAllocCount(', ')', 'void'),
  \ javaapi#method(1,1,'resetThreadAllocSize(', ')', 'void'),
  \ javaapi#method(1,1,'resetThreadExternalAllocCount(', ')', 'void'),
  \ javaapi#method(1,1,'resetThreadExternalAllocSize(', ')', 'void'),
  \ javaapi#method(1,1,'resetThreadGcInvocationCount(', ')', 'void'),
  \ javaapi#method(1,1,'resetAllCounts(', ')', 'void'),
  \ javaapi#method(1,1,'getNativeHeapSize(', ')', 'long'),
  \ javaapi#method(1,1,'getNativeHeapAllocatedSize(', ')', 'long'),
  \ javaapi#method(1,1,'getNativeHeapFreeSize(', ')', 'long'),
  \ javaapi#method(1,1,'getMemoryInfo(', 'MemoryInfo)', 'void'),
  \ javaapi#method(1,1,'getPss(', ')', 'long'),
  \ javaapi#method(1,1,'setAllocationLimit(', 'int)', 'int'),
  \ javaapi#method(1,1,'setGlobalAllocationLimit(', 'int)', 'int'),
  \ javaapi#method(1,1,'printLoadedClasses(', 'int)', 'void'),
  \ javaapi#method(1,1,'getLoadedClassCount(', ')', 'int'),
  \ javaapi#method(1,1,'dumpHprofData(', 'String) throws IOException', 'void'),
  \ javaapi#method(1,1,'getBinderSentTransactions(', ')', 'int'),
  \ javaapi#method(1,1,'getBinderReceivedTransactions(', ')', 'int'),
  \ javaapi#method(1,1,'getBinderLocalObjectCount(', ')', 'int'),
  \ javaapi#method(1,1,'getBinderProxyObjectCount(', ')', 'int'),
  \ javaapi#method(1,1,'getBinderDeathObjectCount(', ')', 'int'),
  \ javaapi#method(1,1,'dumpService(', 'String, FileDescriptor, String[])', 'boolean'),
  \ ])

call javaapi#class('PatternMatcher', 'Parcelable', [
  \ javaapi#field(1,1,'PATTERN_LITERAL', 'int'),
  \ javaapi#field(1,1,'PATTERN_PREFIX', 'int'),
  \ javaapi#field(1,1,'PATTERN_SIMPLE_GLOB', 'int'),
  \ javaapi#field(1,1,'CREATOR', 'Creator'),
  \ javaapi#method(0,1,'PatternMatcher(', 'String, int)', ''),
  \ javaapi#method(0,1,'PatternMatcher(', 'Parcel)', ''),
  \ javaapi#method(0,1,'getPath(', ')', 'String'),
  \ javaapi#method(0,1,'getType(', ')', 'int'),
  \ javaapi#method(0,1,'match(', 'String)', 'boolean'),
  \ javaapi#method(0,1,'toString(', ')', 'String'),
  \ javaapi#method(0,1,'describeContents(', ')', 'int'),
  \ javaapi#method(0,1,'writeToParcel(', 'Parcel, int)', 'void'),
  \ ])

call javaapi#class('TransactionTooLargeException', 'RemoteException', [
  \ javaapi#method(0,1,'TransactionTooLargeException(', ')', ''),
  \ ])

call javaapi#class('Bundle', 'Cloneable', [
  \ javaapi#field(1,1,'EMPTY', 'Bundle'),
  \ javaapi#field(1,1,'CREATOR', 'Creator'),
  \ javaapi#method(0,1,'Bundle(', ')', ''),
  \ javaapi#method(0,1,'Bundle(', 'ClassLoader)', ''),
  \ javaapi#method(0,1,'Bundle(', 'int)', ''),
  \ javaapi#method(0,1,'Bundle(', 'Bundle)', ''),
  \ javaapi#method(0,1,'setClassLoader(', 'ClassLoader)', 'void'),
  \ javaapi#method(0,1,'getClassLoader(', ')', 'ClassLoader'),
  \ javaapi#method(0,1,'clone(', ')', 'Object'),
  \ javaapi#method(0,1,'size(', ')', 'int'),
  \ javaapi#method(0,1,'isEmpty(', ')', 'boolean'),
  \ javaapi#method(0,1,'clear(', ')', 'void'),
  \ javaapi#method(0,1,'containsKey(', 'String)', 'boolean'),
  \ javaapi#method(0,1,'get(', 'String)', 'Object'),
  \ javaapi#method(0,1,'remove(', 'String)', 'void'),
  \ javaapi#method(0,1,'putAll(', 'Bundle)', 'void'),
  \ javaapi#method(0,1,'keySet(', ')', 'Set'),
  \ javaapi#method(0,1,'hasFileDescriptors(', ')', 'boolean'),
  \ javaapi#method(0,1,'putBoolean(', 'String, boolean)', 'void'),
  \ javaapi#method(0,1,'putByte(', 'String, byte)', 'void'),
  \ javaapi#method(0,1,'putChar(', 'String, char)', 'void'),
  \ javaapi#method(0,1,'putShort(', 'String, short)', 'void'),
  \ javaapi#method(0,1,'putInt(', 'String, int)', 'void'),
  \ javaapi#method(0,1,'putLong(', 'String, long)', 'void'),
  \ javaapi#method(0,1,'putFloat(', 'String, float)', 'void'),
  \ javaapi#method(0,1,'putDouble(', 'String, double)', 'void'),
  \ javaapi#method(0,1,'putString(', 'String, String)', 'void'),
  \ javaapi#method(0,1,'putCharSequence(', 'String, CharSequence)', 'void'),
  \ javaapi#method(0,1,'putParcelable(', 'String, Parcelable)', 'void'),
  \ javaapi#method(0,1,'putParcelableArray(', 'String, Parcelable[])', 'void'),
  \ javaapi#method(0,1,'putParcelableArrayList(', 'String, ArrayList<? extends Parcelable>)', 'void'),
  \ javaapi#method(0,1,'putSparseParcelableArray(', 'String, SparseArray<? extends Parcelable>)', 'void'),
  \ javaapi#method(0,1,'putIntegerArrayList(', 'String, ArrayList<Integer>)', 'void'),
  \ javaapi#method(0,1,'putStringArrayList(', 'String, ArrayList<String>)', 'void'),
  \ javaapi#method(0,1,'putCharSequenceArrayList(', 'String, ArrayList<CharSequence>)', 'void'),
  \ javaapi#method(0,1,'putSerializable(', 'String, Serializable)', 'void'),
  \ javaapi#method(0,1,'putBooleanArray(', 'String, boolean[])', 'void'),
  \ javaapi#method(0,1,'putByteArray(', 'String, byte[])', 'void'),
  \ javaapi#method(0,1,'putShortArray(', 'String, short[])', 'void'),
  \ javaapi#method(0,1,'putCharArray(', 'String, char[])', 'void'),
  \ javaapi#method(0,1,'putIntArray(', 'String, int[])', 'void'),
  \ javaapi#method(0,1,'putLongArray(', 'String, long[])', 'void'),
  \ javaapi#method(0,1,'putFloatArray(', 'String, float[])', 'void'),
  \ javaapi#method(0,1,'putDoubleArray(', 'String, double[])', 'void'),
  \ javaapi#method(0,1,'putStringArray(', 'String, String[])', 'void'),
  \ javaapi#method(0,1,'putCharSequenceArray(', 'String, CharSequence[])', 'void'),
  \ javaapi#method(0,1,'putBundle(', 'String, Bundle)', 'void'),
  \ javaapi#method(0,1,'getBoolean(', 'String)', 'boolean'),
  \ javaapi#method(0,1,'getBoolean(', 'String, boolean)', 'boolean'),
  \ javaapi#method(0,1,'getByte(', 'String)', 'byte'),
  \ javaapi#method(0,1,'getByte(', 'String, byte)', 'Byte'),
  \ javaapi#method(0,1,'getChar(', 'String)', 'char'),
  \ javaapi#method(0,1,'getChar(', 'String, char)', 'char'),
  \ javaapi#method(0,1,'getShort(', 'String)', 'short'),
  \ javaapi#method(0,1,'getShort(', 'String, short)', 'short'),
  \ javaapi#method(0,1,'getInt(', 'String)', 'int'),
  \ javaapi#method(0,1,'getInt(', 'String, int)', 'int'),
  \ javaapi#method(0,1,'getLong(', 'String)', 'long'),
  \ javaapi#method(0,1,'getLong(', 'String, long)', 'long'),
  \ javaapi#method(0,1,'getFloat(', 'String)', 'float'),
  \ javaapi#method(0,1,'getFloat(', 'String, float)', 'float'),
  \ javaapi#method(0,1,'getDouble(', 'String)', 'double'),
  \ javaapi#method(0,1,'getDouble(', 'String, double)', 'double'),
  \ javaapi#method(0,1,'getString(', 'String)', 'String'),
  \ javaapi#method(0,1,'getString(', 'String, String)', 'String'),
  \ javaapi#method(0,1,'getCharSequence(', 'String)', 'CharSequence'),
  \ javaapi#method(0,1,'getCharSequence(', 'String, CharSequence)', 'CharSequence'),
  \ javaapi#method(0,1,'getBundle(', 'String)', 'Bundle'),
  \ javaapi#method(0,1,'getParcelable(', 'String)', 'T'),
  \ javaapi#method(0,1,'getParcelableArray(', 'String)', 'Parcelable'),
  \ javaapi#method(0,1,'getParcelableArrayList(', 'String)', 'ArrayList'),
  \ javaapi#method(0,1,'getSparseParcelableArray(', 'String)', 'SparseArray'),
  \ javaapi#method(0,1,'getSerializable(', 'String)', 'Serializable'),
  \ javaapi#method(0,1,'getIntegerArrayList(', 'String)', 'ArrayList'),
  \ javaapi#method(0,1,'getStringArrayList(', 'String)', 'ArrayList'),
  \ javaapi#method(0,1,'getCharSequenceArrayList(', 'String)', 'ArrayList'),
  \ javaapi#method(0,1,'getBooleanArray(', 'String)', 'boolean'),
  \ javaapi#method(0,1,'getByteArray(', 'String)', 'byte'),
  \ javaapi#method(0,1,'getShortArray(', 'String)', 'short'),
  \ javaapi#method(0,1,'getCharArray(', 'String)', 'char'),
  \ javaapi#method(0,1,'getIntArray(', 'String)', 'int'),
  \ javaapi#method(0,1,'getLongArray(', 'String)', 'long'),
  \ javaapi#method(0,1,'getFloatArray(', 'String)', 'float'),
  \ javaapi#method(0,1,'getDoubleArray(', 'String)', 'double'),
  \ javaapi#method(0,1,'getStringArray(', 'String)', 'String'),
  \ javaapi#method(0,1,'getCharSequenceArray(', 'String)', 'CharSequence'),
  \ javaapi#method(0,1,'describeContents(', ')', 'int'),
  \ javaapi#method(0,1,'writeToParcel(', 'Parcel, int)', 'void'),
  \ javaapi#method(0,1,'readFromParcel(', 'Parcel)', 'void'),
  \ javaapi#method(0,1,'toString(', ')', 'String'),
  \ ])

call javaapi#class('PowerManager', '', [
  \ javaapi#field(1,1,'PARTIAL_WAKE_LOCK', 'int'),
  \ javaapi#field(1,1,'SCREEN_DIM_WAKE_LOCK', 'int'),
  \ javaapi#field(1,1,'SCREEN_BRIGHT_WAKE_LOCK', 'int'),
  \ javaapi#field(1,1,'FULL_WAKE_LOCK', 'int'),
  \ javaapi#field(1,1,'ACQUIRE_CAUSES_WAKEUP', 'int'),
  \ javaapi#field(1,1,'ON_AFTER_RELEASE', 'int'),
  \ javaapi#method(0,1,'newWakeLock(', 'int, String)', 'WakeLock'),
  \ javaapi#method(0,1,'userActivity(', 'long, boolean)', 'void'),
  \ javaapi#method(0,1,'goToSleep(', 'long)', 'void'),
  \ javaapi#method(0,1,'wakeUp(', 'long)', 'void'),
  \ javaapi#method(0,1,'isScreenOn(', ')', 'boolean'),
  \ javaapi#method(0,1,'reboot(', 'String)', 'void'),
  \ ])

call javaapi#class('Handler', '', [
  \ javaapi#method(0,1,'Handler(', ')', ''),
  \ javaapi#method(0,1,'Handler(', 'Callback)', ''),
  \ javaapi#method(0,1,'Handler(', 'Looper)', ''),
  \ javaapi#method(0,1,'Handler(', 'Looper, Callback)', ''),
  \ javaapi#method(0,1,'handleMessage(', 'Message)', 'void'),
  \ javaapi#method(0,1,'dispatchMessage(', 'Message)', 'void'),
  \ javaapi#method(0,1,'getMessageName(', 'Message)', 'String'),
  \ javaapi#method(0,1,'obtainMessage(', ')', 'Message'),
  \ javaapi#method(0,1,'obtainMessage(', 'int)', 'Message'),
  \ javaapi#method(0,1,'obtainMessage(', 'int, Object)', 'Message'),
  \ javaapi#method(0,1,'obtainMessage(', 'int, int, int)', 'Message'),
  \ javaapi#method(0,1,'obtainMessage(', 'int, int, int, Object)', 'Message'),
  \ javaapi#method(0,1,'post(', 'Runnable)', 'boolean'),
  \ javaapi#method(0,1,'postAtTime(', 'Runnable, long)', 'boolean'),
  \ javaapi#method(0,1,'postAtTime(', 'Runnable, Object, long)', 'boolean'),
  \ javaapi#method(0,1,'postDelayed(', 'Runnable, long)', 'boolean'),
  \ javaapi#method(0,1,'postAtFrontOfQueue(', 'Runnable)', 'boolean'),
  \ javaapi#method(0,1,'removeCallbacks(', 'Runnable)', 'void'),
  \ javaapi#method(0,1,'removeCallbacks(', 'Runnable, Object)', 'void'),
  \ javaapi#method(0,1,'sendMessage(', 'Message)', 'boolean'),
  \ javaapi#method(0,1,'sendEmptyMessage(', 'int)', 'boolean'),
  \ javaapi#method(0,1,'sendEmptyMessageDelayed(', 'int, long)', 'boolean'),
  \ javaapi#method(0,1,'sendEmptyMessageAtTime(', 'int, long)', 'boolean'),
  \ javaapi#method(0,1,'sendMessageDelayed(', 'Message, long)', 'boolean'),
  \ javaapi#method(0,1,'sendMessageAtTime(', 'Message, long)', 'boolean'),
  \ javaapi#method(0,1,'sendMessageAtFrontOfQueue(', 'Message)', 'boolean'),
  \ javaapi#method(0,1,'removeMessages(', 'int)', 'void'),
  \ javaapi#method(0,1,'removeMessages(', 'int, Object)', 'void'),
  \ javaapi#method(0,1,'removeCallbacksAndMessages(', 'Object)', 'void'),
  \ javaapi#method(0,1,'hasMessages(', 'int)', 'boolean'),
  \ javaapi#method(0,1,'hasMessages(', 'int, Object)', 'boolean'),
  \ javaapi#method(0,1,'getLooper(', ')', 'Looper'),
  \ javaapi#method(0,1,'dump(', 'Printer, String)', 'void'),
  \ javaapi#method(0,1,'toString(', ')', 'String'),
  \ ])

call javaapi#class('Vibrator', '', [
  \ javaapi#method(0,1,'hasVibrator(', ')', 'boolean'),
  \ javaapi#method(0,1,'vibrate(', 'long)', 'void'),
  \ javaapi#method(0,1,'vibrate(', 'long[], int)', 'void'),
  \ javaapi#method(0,1,'cancel(', ')', 'void'),
  \ ])

