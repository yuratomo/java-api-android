call javaapi#namespace('android.media')

call javaapi#class('FaceDetector', '', [
  \ javaapi#method(0,1,'FaceDetector(', 'int, int, int)', ''),
  \ javaapi#method(0,1,'findFaces(', 'Bitmap, Face[])', 'int'),
  \ javaapi#method(0,0,'finalize(', ') throws Throwable', 'void'),
  \ ])

call javaapi#class('MediaCryptoException', 'Exception', [
  \ javaapi#method(0,1,'MediaCryptoException(', 'String)', ''),
  \ ])

call javaapi#namespace('android.media')

call javaapi#class('AudioRecord', '', [
  \ javaapi#field(1,1,'STATE_UNINITIALIZED', 'int'),
  \ javaapi#field(1,1,'STATE_INITIALIZED', 'int'),
  \ javaapi#field(1,1,'RECORDSTATE_STOPPED', 'int'),
  \ javaapi#field(1,1,'RECORDSTATE_RECORDING', 'int'),
  \ javaapi#field(1,1,'SUCCESS', 'int'),
  \ javaapi#field(1,1,'ERROR', 'int'),
  \ javaapi#field(1,1,'ERROR_BAD_VALUE', 'int'),
  \ javaapi#field(1,1,'ERROR_INVALID_OPERATION', 'int'),
  \ javaapi#method(0,1,'AudioRecord(', 'int, int, int, int, int) throws IllegalArgumentException', ''),
  \ javaapi#method(0,1,'release(', ')', 'void'),
  \ javaapi#method(0,0,'finalize(', ')', 'void'),
  \ javaapi#method(0,1,'getSampleRate(', ')', 'int'),
  \ javaapi#method(0,1,'getAudioSource(', ')', 'int'),
  \ javaapi#method(0,1,'getAudioFormat(', ')', 'int'),
  \ javaapi#method(0,1,'getChannelConfiguration(', ')', 'int'),
  \ javaapi#method(0,1,'getChannelCount(', ')', 'int'),
  \ javaapi#method(0,1,'getState(', ')', 'int'),
  \ javaapi#method(0,1,'getRecordingState(', ')', 'int'),
  \ javaapi#method(0,1,'getNotificationMarkerPosition(', ')', 'int'),
  \ javaapi#method(0,1,'getPositionNotificationPeriod(', ')', 'int'),
  \ javaapi#method(1,1,'getMinBufferSize(', 'int, int, int)', 'int'),
  \ javaapi#method(0,1,'getAudioSessionId(', ')', 'int'),
  \ javaapi#method(0,1,'startRecording(', ') throws IllegalStateException', 'void'),
  \ javaapi#method(0,1,'startRecording(', 'MediaSyncEvent) throws IllegalStateException', 'void'),
  \ javaapi#method(0,1,'stop(', ') throws IllegalStateException', 'void'),
  \ javaapi#method(0,1,'read(', 'byte[], int, int)', 'int'),
  \ javaapi#method(0,1,'read(', 'short[], int, int)', 'int'),
  \ javaapi#method(0,1,'read(', 'ByteBuffer, int)', 'int'),
  \ javaapi#method(0,1,'setRecordPositionUpdateListener(', 'OnRecordPositionUpdateListener)', 'void'),
  \ javaapi#method(0,1,'setRecordPositionUpdateListener(', 'OnRecordPositionUpdateListener, Handler)', 'void'),
  \ javaapi#method(0,1,'setNotificationMarkerPosition(', 'int)', 'int'),
  \ javaapi#method(0,1,'setPositionNotificationPeriod(', 'int)', 'int'),
  \ ])

call javaapi#class('ToneGenerator', '', [
  \ javaapi#field(1,1,'TONE_DTMF_0', 'int'),
  \ javaapi#field(1,1,'TONE_DTMF_1', 'int'),
  \ javaapi#field(1,1,'TONE_DTMF_2', 'int'),
  \ javaapi#field(1,1,'TONE_DTMF_3', 'int'),
  \ javaapi#field(1,1,'TONE_DTMF_4', 'int'),
  \ javaapi#field(1,1,'TONE_DTMF_5', 'int'),
  \ javaapi#field(1,1,'TONE_DTMF_6', 'int'),
  \ javaapi#field(1,1,'TONE_DTMF_7', 'int'),
  \ javaapi#field(1,1,'TONE_DTMF_8', 'int'),
  \ javaapi#field(1,1,'TONE_DTMF_9', 'int'),
  \ javaapi#field(1,1,'TONE_DTMF_S', 'int'),
  \ javaapi#field(1,1,'TONE_DTMF_P', 'int'),
  \ javaapi#field(1,1,'TONE_DTMF_A', 'int'),
  \ javaapi#field(1,1,'TONE_DTMF_B', 'int'),
  \ javaapi#field(1,1,'TONE_DTMF_C', 'int'),
  \ javaapi#field(1,1,'TONE_DTMF_D', 'int'),
  \ javaapi#field(1,1,'TONE_SUP_DIAL', 'int'),
  \ javaapi#field(1,1,'TONE_SUP_BUSY', 'int'),
  \ javaapi#field(1,1,'TONE_SUP_CONGESTION', 'int'),
  \ javaapi#field(1,1,'TONE_SUP_RADIO_ACK', 'int'),
  \ javaapi#field(1,1,'TONE_SUP_RADIO_NOTAVAIL', 'int'),
  \ javaapi#field(1,1,'TONE_SUP_ERROR', 'int'),
  \ javaapi#field(1,1,'TONE_SUP_CALL_WAITING', 'int'),
  \ javaapi#field(1,1,'TONE_SUP_RINGTONE', 'int'),
  \ javaapi#field(1,1,'TONE_PROP_BEEP', 'int'),
  \ javaapi#field(1,1,'TONE_PROP_ACK', 'int'),
  \ javaapi#field(1,1,'TONE_PROP_NACK', 'int'),
  \ javaapi#field(1,1,'TONE_PROP_PROMPT', 'int'),
  \ javaapi#field(1,1,'TONE_PROP_BEEP2', 'int'),
  \ javaapi#field(1,1,'TONE_SUP_INTERCEPT', 'int'),
  \ javaapi#field(1,1,'TONE_SUP_INTERCEPT_ABBREV', 'int'),
  \ javaapi#field(1,1,'TONE_SUP_CONGESTION_ABBREV', 'int'),
  \ javaapi#field(1,1,'TONE_SUP_CONFIRM', 'int'),
  \ javaapi#field(1,1,'TONE_SUP_PIP', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_DIAL_TONE_LITE', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_NETWORK_USA_RINGBACK', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_INTERCEPT', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_ABBR_INTERCEPT', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_REORDER', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_ABBR_REORDER', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_NETWORK_BUSY', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_CONFIRM', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_ANSWER', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_NETWORK_CALLWAITING', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_PIP', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_CALL_SIGNAL_ISDN_NORMAL', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_CALL_SIGNAL_ISDN_INTERGROUP', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_CALL_SIGNAL_ISDN_SP_PRI', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_CALL_SIGNAL_ISDN_PAT3', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_CALL_SIGNAL_ISDN_PING_RING', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_CALL_SIGNAL_ISDN_PAT5', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_CALL_SIGNAL_ISDN_PAT6', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_CALL_SIGNAL_ISDN_PAT7', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_HIGH_L', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_MED_L', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_LOW_L', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_HIGH_SS', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_MED_SS', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_LOW_SS', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_HIGH_SSL', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_MED_SSL', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_LOW_SSL', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_HIGH_SS_2', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_MED_SS_2', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_LOW_SS_2', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_HIGH_SLS', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_MED_SLS', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_LOW_SLS', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_HIGH_S_X4', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_MED_S_X4', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_LOW_S_X4', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_HIGH_PBX_L', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_MED_PBX_L', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_LOW_PBX_L', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_HIGH_PBX_SS', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_MED_PBX_SS', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_LOW_PBX_SS', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_HIGH_PBX_SSL', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_MED_PBX_SSL', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_LOW_PBX_SSL', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_HIGH_PBX_SLS', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_MED_PBX_SLS', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_LOW_PBX_SLS', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_HIGH_PBX_S_X4', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_MED_PBX_S_X4', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_LOW_PBX_S_X4', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_ALERT_NETWORK_LITE', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_ALERT_AUTOREDIAL_LITE', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_ONE_MIN_BEEP', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_KEYPAD_VOLUME_KEY_LITE', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_PRESSHOLDKEY_LITE', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_ALERT_INCALL_LITE', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_EMERGENCY_RINGBACK', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_ALERT_CALL_GUARD', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_SOFT_ERROR_LITE', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_CALLDROP_LITE', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_NETWORK_BUSY_ONE_SHOT', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_ABBR_ALERT', 'int'),
  \ javaapi#field(1,1,'TONE_CDMA_SIGNAL_OFF', 'int'),
  \ javaapi#field(1,1,'MAX_VOLUME', 'int'),
  \ javaapi#field(1,1,'MIN_VOLUME', 'int'),
  \ javaapi#method(0,1,'ToneGenerator(', 'int, int)', ''),
  \ javaapi#method(0,1,'startTone(', 'int)', 'boolean'),
  \ javaapi#method(0,1,'startTone(', 'int, int)', 'boolean'),
  \ javaapi#method(0,1,'stopTone(', ')', 'void'),
  \ javaapi#method(0,1,'release(', ')', 'void'),
  \ javaapi#method(0,1,'getAudioSessionId(', ')', 'int'),
  \ javaapi#method(0,0,'finalize(', ')', 'void'),
  \ ])

call javaapi#class('JetPlayer', '', [
  \ javaapi#method(1,1,'getJetPlayer(', ')', 'JetPlayer'),
  \ javaapi#method(0,1,'clone(', ') throws CloneNotSupportedException', 'Object'),
  \ javaapi#method(0,0,'finalize(', ')', 'void'),
  \ javaapi#method(0,1,'release(', ')', 'void'),
  \ javaapi#method(1,1,'getMaxTracks(', ')', 'int'),
  \ javaapi#method(0,1,'loadJetFile(', 'String)', 'boolean'),
  \ javaapi#method(0,1,'loadJetFile(', 'AssetFileDescriptor)', 'boolean'),
  \ javaapi#method(0,1,'closeJetFile(', ')', 'boolean'),
  \ javaapi#method(0,1,'play(', ')', 'boolean'),
  \ javaapi#method(0,1,'pause(', ')', 'boolean'),
  \ javaapi#method(0,1,'queueJetSegment(', 'int, int, int, int, int, byte)', 'boolean'),
  \ javaapi#method(0,1,'queueJetSegmentMuteArray(', 'int, int, int, int, boolean[], byte)', 'boolean'),
  \ javaapi#method(0,1,'setMuteFlags(', 'int, boolean)', 'boolean'),
  \ javaapi#method(0,1,'setMuteArray(', 'boolean[], boolean)', 'boolean'),
  \ javaapi#method(0,1,'setMuteFlag(', 'int, boolean, boolean)', 'boolean'),
  \ javaapi#method(0,1,'triggerClip(', 'int)', 'boolean'),
  \ javaapi#method(0,1,'clearQueue(', ')', 'boolean'),
  \ javaapi#method(0,1,'setEventListener(', 'OnJetEventListener)', 'void'),
  \ javaapi#method(0,1,'setEventListener(', 'OnJetEventListener, Handler)', 'void'),
  \ ])

call javaapi#class('TimedText', '', [
  \ javaapi#method(0,1,'getText(', ')', 'String'),
  \ javaapi#method(0,1,'getBounds(', ')', 'Rect'),
  \ ])

call javaapi#class('SoundPool', '', [
  \ javaapi#method(0,1,'SoundPool(', 'int, int, int)', ''),
  \ javaapi#method(0,1,'load(', 'String, int)', 'int'),
  \ javaapi#method(0,1,'load(', 'Context, int, int)', 'int'),
  \ javaapi#method(0,1,'load(', 'AssetFileDescriptor, int)', 'int'),
  \ javaapi#method(0,1,'load(', 'FileDescriptor, long, long, int)', 'int'),
  \ javaapi#method(0,1,'unload(', 'int)', 'boolean'),
  \ javaapi#method(0,1,'play(', 'int, float, float, int, int, float)', 'int'),
  \ javaapi#method(0,1,'pause(', 'int)', 'void'),
  \ javaapi#method(0,1,'resume(', 'int)', 'void'),
  \ javaapi#method(0,1,'autoPause(', ')', 'void'),
  \ javaapi#method(0,1,'autoResume(', ')', 'void'),
  \ javaapi#method(0,1,'stop(', 'int)', 'void'),
  \ javaapi#method(0,1,'setVolume(', 'int, float, float)', 'void'),
  \ javaapi#method(0,1,'setPriority(', 'int, int)', 'void'),
  \ javaapi#method(0,1,'setLoop(', 'int, int)', 'void'),
  \ javaapi#method(0,1,'setRate(', 'int, float)', 'void'),
  \ javaapi#method(0,1,'setOnLoadCompleteListener(', 'OnLoadCompleteListener)', 'void'),
  \ javaapi#method(0,1,'release(', ')', 'void'),
  \ javaapi#method(0,0,'finalize(', ')', 'void'),
  \ ])

call javaapi#class('MediaFormat', '', [
  \ javaapi#field(1,1,'KEY_MIME', 'String'),
  \ javaapi#field(1,1,'KEY_SAMPLE_RATE', 'String'),
  \ javaapi#field(1,1,'KEY_CHANNEL_COUNT', 'String'),
  \ javaapi#field(1,1,'KEY_WIDTH', 'String'),
  \ javaapi#field(1,1,'KEY_HEIGHT', 'String'),
  \ javaapi#field(1,1,'KEY_MAX_INPUT_SIZE', 'String'),
  \ javaapi#field(1,1,'KEY_BIT_RATE', 'String'),
  \ javaapi#field(1,1,'KEY_COLOR_FORMAT', 'String'),
  \ javaapi#field(1,1,'KEY_FRAME_RATE', 'String'),
  \ javaapi#field(1,1,'KEY_I_FRAME_INTERVAL', 'String'),
  \ javaapi#field(1,1,'KEY_DURATION', 'String'),
  \ javaapi#field(1,1,'KEY_IS_ADTS', 'String'),
  \ javaapi#field(1,1,'KEY_CHANNEL_MASK', 'String'),
  \ javaapi#field(1,1,'KEY_AAC_PROFILE', 'String'),
  \ javaapi#field(1,1,'KEY_FLAC_COMPRESSION_LEVEL', 'String'),
  \ javaapi#method(0,1,'MediaFormat(', ')', ''),
  \ javaapi#method(0,1,'containsKey(', 'String)', 'boolean'),
  \ javaapi#method(0,1,'getInteger(', 'String)', 'int'),
  \ javaapi#method(0,1,'getLong(', 'String)', 'long'),
  \ javaapi#method(0,1,'getFloat(', 'String)', 'float'),
  \ javaapi#method(0,1,'getString(', 'String)', 'String'),
  \ javaapi#method(0,1,'getByteBuffer(', 'String)', 'ByteBuffer'),
  \ javaapi#method(0,1,'setInteger(', 'String, int)', 'void'),
  \ javaapi#method(0,1,'setLong(', 'String, long)', 'void'),
  \ javaapi#method(0,1,'setFloat(', 'String, float)', 'void'),
  \ javaapi#method(0,1,'setString(', 'String, String)', 'void'),
  \ javaapi#method(0,1,'setByteBuffer(', 'String, ByteBuffer)', 'void'),
  \ javaapi#method(1,1,'createAudioFormat(', 'String, int, int)', 'MediaFormat'),
  \ javaapi#method(1,1,'createVideoFormat(', 'String, int, int)', 'MediaFormat'),
  \ javaapi#method(0,1,'toString(', ')', 'String'),
  \ ])

call javaapi#class('MediaSyncEvent', '', [
  \ javaapi#field(1,1,'SYNC_EVENT_NONE', 'int'),
  \ javaapi#field(1,1,'SYNC_EVENT_PRESENTATION_COMPLETE', 'int'),
  \ javaapi#method(1,1,'createEvent(', 'int) throws IllegalArgumentException', 'MediaSyncEvent'),
  \ javaapi#method(0,1,'setAudioSessionId(', 'int) throws IllegalArgumentException', 'MediaSyncEvent'),
  \ javaapi#method(0,1,'getType(', ')', 'int'),
  \ javaapi#method(0,1,'getAudioSessionId(', ')', 'int'),
  \ ])

call javaapi#class('RingtoneManager', '', [
  \ javaapi#field(1,1,'TYPE_RINGTONE', 'int'),
  \ javaapi#field(1,1,'TYPE_NOTIFICATION', 'int'),
  \ javaapi#field(1,1,'TYPE_ALARM', 'int'),
  \ javaapi#field(1,1,'TYPE_ALL', 'int'),
  \ javaapi#field(1,1,'ACTION_RINGTONE_PICKER', 'String'),
  \ javaapi#field(1,1,'EXTRA_RINGTONE_SHOW_DEFAULT', 'String'),
  \ javaapi#field(1,1,'EXTRA_RINGTONE_SHOW_SILENT', 'String'),
  \ javaapi#field(1,1,'EXTRA_RINGTONE_INCLUDE_DRM', 'String'),
  \ javaapi#field(1,1,'EXTRA_RINGTONE_EXISTING_URI', 'String'),
  \ javaapi#field(1,1,'EXTRA_RINGTONE_DEFAULT_URI', 'String'),
  \ javaapi#field(1,1,'EXTRA_RINGTONE_TYPE', 'String'),
  \ javaapi#field(1,1,'EXTRA_RINGTONE_TITLE', 'String'),
  \ javaapi#field(1,1,'EXTRA_RINGTONE_PICKED_URI', 'String'),
  \ javaapi#field(1,1,'ID_COLUMN_INDEX', 'int'),
  \ javaapi#field(1,1,'TITLE_COLUMN_INDEX', 'int'),
  \ javaapi#field(1,1,'URI_COLUMN_INDEX', 'int'),
  \ javaapi#method(0,1,'RingtoneManager(', 'Activity)', ''),
  \ javaapi#method(0,1,'RingtoneManager(', 'Context)', ''),
  \ javaapi#method(0,1,'setType(', 'int)', 'void'),
  \ javaapi#method(0,1,'inferStreamType(', ')', 'int'),
  \ javaapi#method(0,1,'setStopPreviousRingtone(', 'boolean)', 'void'),
  \ javaapi#method(0,1,'getStopPreviousRingtone(', ')', 'boolean'),
  \ javaapi#method(0,1,'stopPreviousRingtone(', ')', 'void'),
  \ javaapi#method(0,1,'getIncludeDrm(', ')', 'boolean'),
  \ javaapi#method(0,1,'setIncludeDrm(', 'boolean)', 'void'),
  \ javaapi#method(0,1,'getCursor(', ')', 'Cursor'),
  \ javaapi#method(0,1,'getRingtone(', 'int)', 'Ringtone'),
  \ javaapi#method(0,1,'getRingtoneUri(', 'int)', 'Uri'),
  \ javaapi#method(0,1,'getRingtonePosition(', 'Uri)', 'int'),
  \ javaapi#method(1,1,'getValidRingtoneUri(', 'Context)', 'Uri'),
  \ javaapi#method(1,1,'getRingtone(', 'Context, Uri)', 'Ringtone'),
  \ javaapi#method(1,1,'getActualDefaultRingtoneUri(', 'Context, int)', 'Uri'),
  \ javaapi#method(1,1,'setActualDefaultRingtoneUri(', 'Context, int, Uri)', 'void'),
  \ javaapi#method(1,1,'isDefault(', 'Uri)', 'boolean'),
  \ javaapi#method(1,1,'getDefaultType(', 'Uri)', 'int'),
  \ javaapi#method(1,1,'getDefaultUri(', 'int)', 'Uri'),
  \ ])

call javaapi#class('MediaMetadataRetriever', '', [
  \ javaapi#field(1,1,'OPTION_PREVIOUS_SYNC', 'int'),
  \ javaapi#field(1,1,'OPTION_NEXT_SYNC', 'int'),
  \ javaapi#field(1,1,'OPTION_CLOSEST_SYNC', 'int'),
  \ javaapi#field(1,1,'OPTION_CLOSEST', 'int'),
  \ javaapi#field(1,1,'METADATA_KEY_CD_TRACK_NUMBER', 'int'),
  \ javaapi#field(1,1,'METADATA_KEY_ALBUM', 'int'),
  \ javaapi#field(1,1,'METADATA_KEY_ARTIST', 'int'),
  \ javaapi#field(1,1,'METADATA_KEY_AUTHOR', 'int'),
  \ javaapi#field(1,1,'METADATA_KEY_COMPOSER', 'int'),
  \ javaapi#field(1,1,'METADATA_KEY_DATE', 'int'),
  \ javaapi#field(1,1,'METADATA_KEY_GENRE', 'int'),
  \ javaapi#field(1,1,'METADATA_KEY_TITLE', 'int'),
  \ javaapi#field(1,1,'METADATA_KEY_YEAR', 'int'),
  \ javaapi#field(1,1,'METADATA_KEY_DURATION', 'int'),
  \ javaapi#field(1,1,'METADATA_KEY_NUM_TRACKS', 'int'),
  \ javaapi#field(1,1,'METADATA_KEY_WRITER', 'int'),
  \ javaapi#field(1,1,'METADATA_KEY_MIMETYPE', 'int'),
  \ javaapi#field(1,1,'METADATA_KEY_ALBUMARTIST', 'int'),
  \ javaapi#field(1,1,'METADATA_KEY_DISC_NUMBER', 'int'),
  \ javaapi#field(1,1,'METADATA_KEY_COMPILATION', 'int'),
  \ javaapi#field(1,1,'METADATA_KEY_HAS_AUDIO', 'int'),
  \ javaapi#field(1,1,'METADATA_KEY_HAS_VIDEO', 'int'),
  \ javaapi#field(1,1,'METADATA_KEY_VIDEO_WIDTH', 'int'),
  \ javaapi#field(1,1,'METADATA_KEY_VIDEO_HEIGHT', 'int'),
  \ javaapi#field(1,1,'METADATA_KEY_BITRATE', 'int'),
  \ javaapi#field(1,1,'METADATA_KEY_LOCATION', 'int'),
  \ javaapi#field(1,1,'METADATA_KEY_VIDEO_ROTATION', 'int'),
  \ javaapi#method(0,1,'MediaMetadataRetriever(', ')', ''),
  \ javaapi#method(0,1,'setDataSource(', 'String) throws IllegalArgumentException', 'void'),
  \ javaapi#method(0,1,'setDataSource(', 'String, Map<String, String>) throws IllegalArgumentException', 'void'),
  \ javaapi#method(0,1,'setDataSource(', 'FileDescriptor, long, long) throws IllegalArgumentException', 'void'),
  \ javaapi#method(0,1,'setDataSource(', 'FileDescriptor) throws IllegalArgumentException', 'void'),
  \ javaapi#method(0,1,'setDataSource(', 'Context, Uri) throws IllegalArgumentException, SecurityException', 'void'),
  \ javaapi#method(0,1,'extractMetadata(', 'int)', 'String'),
  \ javaapi#method(0,1,'getFrameAtTime(', 'long, int)', 'Bitmap'),
  \ javaapi#method(0,1,'getFrameAtTime(', 'long)', 'Bitmap'),
  \ javaapi#method(0,1,'getFrameAtTime(', ')', 'Bitmap'),
  \ javaapi#method(0,1,'getEmbeddedPicture(', ')', 'byte'),
  \ javaapi#method(0,1,'release(', ')', 'void'),
  \ javaapi#method(0,0,'finalize(', ') throws Throwable', 'void'),
  \ ])

call javaapi#class('Ringtone', '', [
  \ javaapi#method(0,1,'setStreamType(', 'int)', 'void'),
  \ javaapi#method(0,1,'getStreamType(', ')', 'int'),
  \ javaapi#method(0,1,'getTitle(', 'Context)', 'String'),
  \ javaapi#method(0,1,'play(', ')', 'void'),
  \ javaapi#method(0,1,'stop(', ')', 'void'),
  \ javaapi#method(0,1,'isPlaying(', ')', 'boolean'),
  \ ])

call javaapi#class('MediaExtractor', '', [
  \ javaapi#field(1,1,'SEEK_TO_PREVIOUS_SYNC', 'int'),
  \ javaapi#field(1,1,'SEEK_TO_NEXT_SYNC', 'int'),
  \ javaapi#field(1,1,'SEEK_TO_CLOSEST_SYNC', 'int'),
  \ javaapi#field(1,1,'SAMPLE_FLAG_SYNC', 'int'),
  \ javaapi#field(1,1,'SAMPLE_FLAG_ENCRYPTED', 'int'),
  \ javaapi#method(0,1,'MediaExtractor(', ')', ''),
  \ javaapi#method(0,1,'setDataSource(', 'Context, Uri, Map<String, String>) throws IOException', 'void'),
  \ javaapi#method(0,1,'setDataSource(', 'String, Map<String, String>)', 'void'),
  \ javaapi#method(0,1,'setDataSource(', 'String)', 'void'),
  \ javaapi#method(0,1,'setDataSource(', 'FileDescriptor)', 'void'),
  \ javaapi#method(0,1,'setDataSource(', 'FileDescriptor, long, long)', 'void'),
  \ javaapi#method(0,0,'finalize(', ')', 'void'),
  \ javaapi#method(0,1,'release(', ')', 'void'),
  \ javaapi#method(0,1,'getTrackCount(', ')', 'int'),
  \ javaapi#method(0,1,'getTrackFormat(', 'int)', 'MediaFormat'),
  \ javaapi#method(0,1,'selectTrack(', 'int)', 'void'),
  \ javaapi#method(0,1,'unselectTrack(', 'int)', 'void'),
  \ javaapi#method(0,1,'seekTo(', 'long, int)', 'void'),
  \ javaapi#method(0,1,'advance(', ')', 'boolean'),
  \ javaapi#method(0,1,'readSampleData(', 'ByteBuffer, int)', 'int'),
  \ javaapi#method(0,1,'getSampleTrackIndex(', ')', 'int'),
  \ javaapi#method(0,1,'getSampleTime(', ')', 'long'),
  \ javaapi#method(0,1,'getSampleFlags(', ')', 'int'),
  \ javaapi#method(0,1,'getSampleCryptoInfo(', 'CryptoInfo)', 'boolean'),
  \ javaapi#method(0,1,'getCachedDuration(', ')', 'long'),
  \ javaapi#method(0,1,'hasCacheReachedEndOfStream(', ')', 'boolean'),
  \ ])

call javaapi#class('AudioFormat', '', [
  \ javaapi#field(1,1,'ENCODING_INVALID', 'int'),
  \ javaapi#field(1,1,'ENCODING_DEFAULT', 'int'),
  \ javaapi#field(1,1,'ENCODING_PCM_16BIT', 'int'),
  \ javaapi#field(1,1,'ENCODING_PCM_8BIT', 'int'),
  \ javaapi#field(1,1,'CHANNEL_CONFIGURATION_INVALID', 'int'),
  \ javaapi#field(1,1,'CHANNEL_CONFIGURATION_DEFAULT', 'int'),
  \ javaapi#field(1,1,'CHANNEL_CONFIGURATION_MONO', 'int'),
  \ javaapi#field(1,1,'CHANNEL_CONFIGURATION_STEREO', 'int'),
  \ javaapi#field(1,1,'CHANNEL_INVALID', 'int'),
  \ javaapi#field(1,1,'CHANNEL_OUT_DEFAULT', 'int'),
  \ javaapi#field(1,1,'CHANNEL_OUT_FRONT_LEFT', 'int'),
  \ javaapi#field(1,1,'CHANNEL_OUT_FRONT_RIGHT', 'int'),
  \ javaapi#field(1,1,'CHANNEL_OUT_FRONT_CENTER', 'int'),
  \ javaapi#field(1,1,'CHANNEL_OUT_LOW_FREQUENCY', 'int'),
  \ javaapi#field(1,1,'CHANNEL_OUT_BACK_LEFT', 'int'),
  \ javaapi#field(1,1,'CHANNEL_OUT_BACK_RIGHT', 'int'),
  \ javaapi#field(1,1,'CHANNEL_OUT_FRONT_LEFT_OF_CENTER', 'int'),
  \ javaapi#field(1,1,'CHANNEL_OUT_FRONT_RIGHT_OF_CENTER', 'int'),
  \ javaapi#field(1,1,'CHANNEL_OUT_BACK_CENTER', 'int'),
  \ javaapi#field(1,1,'CHANNEL_OUT_MONO', 'int'),
  \ javaapi#field(1,1,'CHANNEL_OUT_STEREO', 'int'),
  \ javaapi#field(1,1,'CHANNEL_OUT_QUAD', 'int'),
  \ javaapi#field(1,1,'CHANNEL_OUT_SURROUND', 'int'),
  \ javaapi#field(1,1,'CHANNEL_OUT_5POINT1', 'int'),
  \ javaapi#field(1,1,'CHANNEL_OUT_7POINT1', 'int'),
  \ javaapi#field(1,1,'CHANNEL_IN_DEFAULT', 'int'),
  \ javaapi#field(1,1,'CHANNEL_IN_LEFT', 'int'),
  \ javaapi#field(1,1,'CHANNEL_IN_RIGHT', 'int'),
  \ javaapi#field(1,1,'CHANNEL_IN_FRONT', 'int'),
  \ javaapi#field(1,1,'CHANNEL_IN_BACK', 'int'),
  \ javaapi#field(1,1,'CHANNEL_IN_LEFT_PROCESSED', 'int'),
  \ javaapi#field(1,1,'CHANNEL_IN_RIGHT_PROCESSED', 'int'),
  \ javaapi#field(1,1,'CHANNEL_IN_FRONT_PROCESSED', 'int'),
  \ javaapi#field(1,1,'CHANNEL_IN_BACK_PROCESSED', 'int'),
  \ javaapi#field(1,1,'CHANNEL_IN_PRESSURE', 'int'),
  \ javaapi#field(1,1,'CHANNEL_IN_X_AXIS', 'int'),
  \ javaapi#field(1,1,'CHANNEL_IN_Y_AXIS', 'int'),
  \ javaapi#field(1,1,'CHANNEL_IN_Z_AXIS', 'int'),
  \ javaapi#field(1,1,'CHANNEL_IN_VOICE_UPLINK', 'int'),
  \ javaapi#field(1,1,'CHANNEL_IN_VOICE_DNLINK', 'int'),
  \ javaapi#field(1,1,'CHANNEL_IN_MONO', 'int'),
  \ javaapi#field(1,1,'CHANNEL_IN_STEREO', 'int'),
  \ javaapi#method(0,1,'AudioFormat(', ')', ''),
  \ ])

call javaapi#class('CameraProfile', '', [
  \ javaapi#field(1,1,'QUALITY_LOW', 'int'),
  \ javaapi#field(1,1,'QUALITY_MEDIUM', 'int'),
  \ javaapi#field(1,1,'QUALITY_HIGH', 'int'),
  \ javaapi#method(0,1,'CameraProfile(', ')', ''),
  \ javaapi#method(1,1,'getJpegEncodingQualityParameter(', 'int)', 'int'),
  \ javaapi#method(1,1,'getJpegEncodingQualityParameter(', 'int, int)', 'int'),
  \ ])

call javaapi#class('MediaCodecList', '', [
  \ javaapi#method(1,1,'getCodecCount(', ')', 'int'),
  \ javaapi#method(1,1,'getCodecInfoAt(', 'int)', 'MediaCodecInfo'),
  \ ])

call javaapi#class('MediaRouter', '', [
  \ javaapi#field(1,1,'ROUTE_TYPE_LIVE_AUDIO', 'int'),
  \ javaapi#field(1,1,'ROUTE_TYPE_LIVE_VIDEO', 'int'),
  \ javaapi#field(1,1,'ROUTE_TYPE_USER', 'int'),
  \ javaapi#method(0,1,'getSelectedRoute(', 'int)', 'RouteInfo'),
  \ javaapi#method(0,1,'addCallback(', 'int, Callback)', 'void'),
  \ javaapi#method(0,1,'removeCallback(', 'Callback)', 'void'),
  \ javaapi#method(0,1,'selectRoute(', 'int, RouteInfo)', 'void'),
  \ javaapi#method(0,1,'addUserRoute(', 'UserRouteInfo)', 'void'),
  \ javaapi#method(0,1,'removeUserRoute(', 'UserRouteInfo)', 'void'),
  \ javaapi#method(0,1,'clearUserRoutes(', ')', 'void'),
  \ javaapi#method(0,1,'getCategoryCount(', ')', 'int'),
  \ javaapi#method(0,1,'getCategoryAt(', 'int)', 'RouteCategory'),
  \ javaapi#method(0,1,'getRouteCount(', ')', 'int'),
  \ javaapi#method(0,1,'getRouteAt(', 'int)', 'RouteInfo'),
  \ javaapi#method(0,1,'createUserRoute(', 'RouteCategory)', 'UserRouteInfo'),
  \ javaapi#method(0,1,'createRouteCategory(', 'CharSequence, boolean)', 'RouteCategory'),
  \ javaapi#method(0,1,'createRouteCategory(', 'int, boolean)', 'RouteCategory'),
  \ ])

call javaapi#class('ThumbnailUtils', '', [
  \ javaapi#field(1,1,'OPTIONS_RECYCLE_INPUT', 'int'),
  \ javaapi#method(0,1,'ThumbnailUtils(', ')', ''),
  \ javaapi#method(1,1,'createVideoThumbnail(', 'String, int)', 'Bitmap'),
  \ javaapi#method(1,1,'extractThumbnail(', 'Bitmap, int, int)', 'Bitmap'),
  \ javaapi#method(1,1,'extractThumbnail(', 'Bitmap, int, int, int)', 'Bitmap'),
  \ ])

call javaapi#class('MediaPlayer', '', [
  \ javaapi#field(1,1,'VIDEO_SCALING_MODE_SCALE_TO_FIT', 'int'),
  \ javaapi#field(1,1,'VIDEO_SCALING_MODE_SCALE_TO_FIT_WITH_CROPPING', 'int'),
  \ javaapi#field(1,1,'MEDIA_MIMETYPE_TEXT_SUBRIP', 'String'),
  \ javaapi#field(1,1,'MEDIA_ERROR_UNKNOWN', 'int'),
  \ javaapi#field(1,1,'MEDIA_ERROR_SERVER_DIED', 'int'),
  \ javaapi#field(1,1,'MEDIA_ERROR_NOT_VALID_FOR_PROGRESSIVE_PLAYBACK', 'int'),
  \ javaapi#field(1,1,'MEDIA_ERROR_IO', 'int'),
  \ javaapi#field(1,1,'MEDIA_ERROR_MALFORMED', 'int'),
  \ javaapi#field(1,1,'MEDIA_ERROR_UNSUPPORTED', 'int'),
  \ javaapi#field(1,1,'MEDIA_ERROR_TIMED_OUT', 'int'),
  \ javaapi#field(1,1,'MEDIA_INFO_UNKNOWN', 'int'),
  \ javaapi#field(1,1,'MEDIA_INFO_VIDEO_RENDERING_START', 'int'),
  \ javaapi#field(1,1,'MEDIA_INFO_VIDEO_TRACK_LAGGING', 'int'),
  \ javaapi#field(1,1,'MEDIA_INFO_BUFFERING_START', 'int'),
  \ javaapi#field(1,1,'MEDIA_INFO_BUFFERING_END', 'int'),
  \ javaapi#field(1,1,'MEDIA_INFO_BAD_INTERLEAVING', 'int'),
  \ javaapi#field(1,1,'MEDIA_INFO_NOT_SEEKABLE', 'int'),
  \ javaapi#field(1,1,'MEDIA_INFO_METADATA_UPDATE', 'int'),
  \ javaapi#method(0,1,'MediaPlayer(', ')', ''),
  \ javaapi#method(0,1,'setDisplay(', 'SurfaceHolder)', 'void'),
  \ javaapi#method(0,1,'setSurface(', 'Surface)', 'void'),
  \ javaapi#method(0,1,'setVideoScalingMode(', 'int)', 'void'),
  \ javaapi#method(1,1,'create(', 'Context, Uri)', 'MediaPlayer'),
  \ javaapi#method(1,1,'create(', 'Context, Uri, SurfaceHolder)', 'MediaPlayer'),
  \ javaapi#method(1,1,'create(', 'Context, int)', 'MediaPlayer'),
  \ javaapi#method(0,1,'setDataSource(', 'Context, Uri) throws IOException, IllegalArgumentException, SecurityException, IllegalStateException', 'void'),
  \ javaapi#method(0,1,'setDataSource(', 'Context, Uri, Map<String, String>) throws IOException, IllegalArgumentException, SecurityException, IllegalStateException', 'void'),
  \ javaapi#method(0,1,'setDataSource(', 'String) throws IOException, IllegalArgumentException, SecurityException, IllegalStateException', 'void'),
  \ javaapi#method(0,1,'setDataSource(', 'FileDescriptor) throws IOException, IllegalArgumentException, IllegalStateException', 'void'),
  \ javaapi#method(0,1,'setDataSource(', 'FileDescriptor, long, long) throws IOException, IllegalArgumentException, IllegalStateException', 'void'),
  \ javaapi#method(0,1,'prepare(', ') throws IOException, IllegalStateException', 'void'),
  \ javaapi#method(0,1,'prepareAsync(', ') throws IllegalStateException', 'void'),
  \ javaapi#method(0,1,'start(', ') throws IllegalStateException', 'void'),
  \ javaapi#method(0,1,'stop(', ') throws IllegalStateException', 'void'),
  \ javaapi#method(0,1,'pause(', ') throws IllegalStateException', 'void'),
  \ javaapi#method(0,1,'setWakeMode(', 'Context, int)', 'void'),
  \ javaapi#method(0,1,'setScreenOnWhilePlaying(', 'boolean)', 'void'),
  \ javaapi#method(0,1,'getVideoWidth(', ')', 'int'),
  \ javaapi#method(0,1,'getVideoHeight(', ')', 'int'),
  \ javaapi#method(0,1,'isPlaying(', ')', 'boolean'),
  \ javaapi#method(0,1,'seekTo(', 'int) throws IllegalStateException', 'void'),
  \ javaapi#method(0,1,'getCurrentPosition(', ')', 'int'),
  \ javaapi#method(0,1,'getDuration(', ')', 'int'),
  \ javaapi#method(0,1,'setNextMediaPlayer(', 'MediaPlayer)', 'void'),
  \ javaapi#method(0,1,'release(', ')', 'void'),
  \ javaapi#method(0,1,'reset(', ')', 'void'),
  \ javaapi#method(0,1,'setAudioStreamType(', 'int)', 'void'),
  \ javaapi#method(0,1,'setLooping(', 'boolean)', 'void'),
  \ javaapi#method(0,1,'isLooping(', ')', 'boolean'),
  \ javaapi#method(0,1,'setVolume(', 'float, float)', 'void'),
  \ javaapi#method(0,1,'setAudioSessionId(', 'int) throws IllegalArgumentException, IllegalStateException', 'void'),
  \ javaapi#method(0,1,'getAudioSessionId(', ')', 'int'),
  \ javaapi#method(0,1,'attachAuxEffect(', 'int)', 'void'),
  \ javaapi#method(0,1,'setAuxEffectSendLevel(', 'float)', 'void'),
  \ javaapi#method(0,1,'getTrackInfo(', ') throws IllegalStateException', 'TrackInfo'),
  \ javaapi#method(0,1,'addTimedTextSource(', 'String, String) throws IOException, IllegalArgumentException, IllegalStateException', 'void'),
  \ javaapi#method(0,1,'addTimedTextSource(', 'Context, Uri, String) throws IOException, IllegalArgumentException, IllegalStateException', 'void'),
  \ javaapi#method(0,1,'addTimedTextSource(', 'FileDescriptor, String) throws IllegalArgumentException, IllegalStateException', 'void'),
  \ javaapi#method(0,1,'addTimedTextSource(', 'FileDescriptor, long, long, String) throws IllegalArgumentException, IllegalStateException', 'void'),
  \ javaapi#method(0,1,'selectTrack(', 'int) throws IllegalStateException', 'void'),
  \ javaapi#method(0,1,'deselectTrack(', 'int) throws IllegalStateException', 'void'),
  \ javaapi#method(0,0,'finalize(', ')', 'void'),
  \ javaapi#method(0,1,'setOnPreparedListener(', 'OnPreparedListener)', 'void'),
  \ javaapi#method(0,1,'setOnCompletionListener(', 'OnCompletionListener)', 'void'),
  \ javaapi#method(0,1,'setOnBufferingUpdateListener(', 'OnBufferingUpdateListener)', 'void'),
  \ javaapi#method(0,1,'setOnSeekCompleteListener(', 'OnSeekCompleteListener)', 'void'),
  \ javaapi#method(0,1,'setOnVideoSizeChangedListener(', 'OnVideoSizeChangedListener)', 'void'),
  \ javaapi#method(0,1,'setOnTimedTextListener(', 'OnTimedTextListener)', 'void'),
  \ javaapi#method(0,1,'setOnErrorListener(', 'OnErrorListener)', 'void'),
  \ javaapi#method(0,1,'setOnInfoListener(', 'OnInfoListener)', 'void'),
  \ ])

call javaapi#class('MediaCodec', '', [
  \ javaapi#field(1,1,'BUFFER_FLAG_SYNC_FRAME', 'int'),
  \ javaapi#field(1,1,'BUFFER_FLAG_CODEC_CONFIG', 'int'),
  \ javaapi#field(1,1,'BUFFER_FLAG_END_OF_STREAM', 'int'),
  \ javaapi#field(1,1,'CONFIGURE_FLAG_ENCODE', 'int'),
  \ javaapi#field(1,1,'CRYPTO_MODE_UNENCRYPTED', 'int'),
  \ javaapi#field(1,1,'CRYPTO_MODE_AES_CTR', 'int'),
  \ javaapi#field(1,1,'INFO_TRY_AGAIN_LATER', 'int'),
  \ javaapi#field(1,1,'INFO_OUTPUT_FORMAT_CHANGED', 'int'),
  \ javaapi#field(1,1,'INFO_OUTPUT_BUFFERS_CHANGED', 'int'),
  \ javaapi#field(1,1,'VIDEO_SCALING_MODE_SCALE_TO_FIT', 'int'),
  \ javaapi#field(1,1,'VIDEO_SCALING_MODE_SCALE_TO_FIT_WITH_CROPPING', 'int'),
  \ javaapi#method(1,1,'createDecoderByType(', 'String)', 'MediaCodec'),
  \ javaapi#method(1,1,'createEncoderByType(', 'String)', 'MediaCodec'),
  \ javaapi#method(1,1,'createByCodecName(', 'String)', 'MediaCodec'),
  \ javaapi#method(0,0,'finalize(', ')', 'void'),
  \ javaapi#method(0,1,'release(', ')', 'void'),
  \ javaapi#method(0,1,'configure(', 'MediaFormat, Surface, MediaCrypto, int)', 'void'),
  \ javaapi#method(0,1,'start(', ')', 'void'),
  \ javaapi#method(0,1,'stop(', ')', 'void'),
  \ javaapi#method(0,1,'flush(', ')', 'void'),
  \ javaapi#method(0,1,'queueInputBuffer(', 'int, int, int, long, int) throws CryptoException', 'void'),
  \ javaapi#method(0,1,'queueSecureInputBuffer(', 'int, int, CryptoInfo, long, int) throws CryptoException', 'void'),
  \ javaapi#method(0,1,'dequeueInputBuffer(', 'long)', 'int'),
  \ javaapi#method(0,1,'dequeueOutputBuffer(', 'BufferInfo, long)', 'int'),
  \ javaapi#method(0,1,'releaseOutputBuffer(', 'int, boolean)', 'void'),
  \ javaapi#method(0,1,'getOutputFormat(', ')', 'MediaFormat'),
  \ javaapi#method(0,1,'getInputBuffers(', ')', 'ByteBuffer'),
  \ javaapi#method(0,1,'getOutputBuffers(', ')', 'ByteBuffer'),
  \ javaapi#method(0,1,'setVideoScalingMode(', 'int)', 'void'),
  \ ])

call javaapi#namespace('android.media')

call javaapi#class('MediaCodecInfo', '', [
  \ javaapi#method(0,1,'getName(', ')', 'String'),
  \ javaapi#method(0,1,'isEncoder(', ')', 'boolean'),
  \ javaapi#method(0,1,'getSupportedTypes(', ')', 'String'),
  \ javaapi#method(0,1,'getCapabilitiesForType(', 'String)', 'CodecCapabilities'),
  \ ])

call javaapi#class('AudioTrack', '', [
  \ javaapi#field(1,1,'PLAYSTATE_STOPPED', 'int'),
  \ javaapi#field(1,1,'PLAYSTATE_PAUSED', 'int'),
  \ javaapi#field(1,1,'PLAYSTATE_PLAYING', 'int'),
  \ javaapi#field(1,1,'MODE_STATIC', 'int'),
  \ javaapi#field(1,1,'MODE_STREAM', 'int'),
  \ javaapi#field(1,1,'STATE_UNINITIALIZED', 'int'),
  \ javaapi#field(1,1,'STATE_INITIALIZED', 'int'),
  \ javaapi#field(1,1,'STATE_NO_STATIC_DATA', 'int'),
  \ javaapi#field(1,1,'SUCCESS', 'int'),
  \ javaapi#field(1,1,'ERROR', 'int'),
  \ javaapi#field(1,1,'ERROR_BAD_VALUE', 'int'),
  \ javaapi#field(1,1,'ERROR_INVALID_OPERATION', 'int'),
  \ javaapi#method(0,1,'AudioTrack(', 'int, int, int, int, int, int) throws IllegalArgumentException', ''),
  \ javaapi#method(0,1,'AudioTrack(', 'int, int, int, int, int, int, int) throws IllegalArgumentException', ''),
  \ javaapi#method(0,1,'release(', ')', 'void'),
  \ javaapi#method(0,0,'finalize(', ')', 'void'),
  \ javaapi#method(1,1,'getMinVolume(', ')', 'float'),
  \ javaapi#method(1,1,'getMaxVolume(', ')', 'float'),
  \ javaapi#method(0,1,'getSampleRate(', ')', 'int'),
  \ javaapi#method(0,1,'getPlaybackRate(', ')', 'int'),
  \ javaapi#method(0,1,'getAudioFormat(', ')', 'int'),
  \ javaapi#method(0,1,'getStreamType(', ')', 'int'),
  \ javaapi#method(0,1,'getChannelConfiguration(', ')', 'int'),
  \ javaapi#method(0,1,'getChannelCount(', ')', 'int'),
  \ javaapi#method(0,1,'getState(', ')', 'int'),
  \ javaapi#method(0,1,'getPlayState(', ')', 'int'),
  \ javaapi#method(0,0,'getNativeFrameCount(', ')', 'int'),
  \ javaapi#method(0,1,'getNotificationMarkerPosition(', ')', 'int'),
  \ javaapi#method(0,1,'getPositionNotificationPeriod(', ')', 'int'),
  \ javaapi#method(0,1,'getPlaybackHeadPosition(', ')', 'int'),
  \ javaapi#method(1,1,'getNativeOutputSampleRate(', 'int)', 'int'),
  \ javaapi#method(1,1,'getMinBufferSize(', 'int, int, int)', 'int'),
  \ javaapi#method(0,1,'getAudioSessionId(', ')', 'int'),
  \ javaapi#method(0,1,'setPlaybackPositionUpdateListener(', 'OnPlaybackPositionUpdateListener)', 'void'),
  \ javaapi#method(0,1,'setPlaybackPositionUpdateListener(', 'OnPlaybackPositionUpdateListener, Handler)', 'void'),
  \ javaapi#method(0,1,'setStereoVolume(', 'float, float)', 'int'),
  \ javaapi#method(0,1,'setPlaybackRate(', 'int)', 'int'),
  \ javaapi#method(0,1,'setNotificationMarkerPosition(', 'int)', 'int'),
  \ javaapi#method(0,1,'setPositionNotificationPeriod(', 'int)', 'int'),
  \ javaapi#method(0,1,'setPlaybackHeadPosition(', 'int)', 'int'),
  \ javaapi#method(0,1,'setLoopPoints(', 'int, int, int)', 'int'),
  \ javaapi#method(0,0,'setState(', 'int)', 'void'),
  \ javaapi#method(0,1,'play(', ') throws IllegalStateException', 'void'),
  \ javaapi#method(0,1,'stop(', ') throws IllegalStateException', 'void'),
  \ javaapi#method(0,1,'pause(', ') throws IllegalStateException', 'void'),
  \ javaapi#method(0,1,'flush(', ')', 'void'),
  \ javaapi#method(0,1,'write(', 'byte[], int, int)', 'int'),
  \ javaapi#method(0,1,'write(', 'short[], int, int)', 'int'),
  \ javaapi#method(0,1,'reloadStaticData(', ')', 'int'),
  \ javaapi#method(0,1,'attachAuxEffect(', 'int)', 'int'),
  \ javaapi#method(0,1,'setAuxEffectSendLevel(', 'float)', 'int'),
  \ ])

call javaapi#class('AudioManager', '', [
  \ javaapi#field(1,1,'ACTION_AUDIO_BECOMING_NOISY', 'String'),
  \ javaapi#field(1,1,'RINGER_MODE_CHANGED_ACTION', 'String'),
  \ javaapi#field(1,1,'EXTRA_RINGER_MODE', 'String'),
  \ javaapi#field(1,1,'VIBRATE_SETTING_CHANGED_ACTION', 'String'),
  \ javaapi#field(1,1,'EXTRA_VIBRATE_SETTING', 'String'),
  \ javaapi#field(1,1,'EXTRA_VIBRATE_TYPE', 'String'),
  \ javaapi#field(1,1,'STREAM_VOICE_CALL', 'int'),
  \ javaapi#field(1,1,'STREAM_SYSTEM', 'int'),
  \ javaapi#field(1,1,'STREAM_RING', 'int'),
  \ javaapi#field(1,1,'STREAM_MUSIC', 'int'),
  \ javaapi#field(1,1,'STREAM_ALARM', 'int'),
  \ javaapi#field(1,1,'STREAM_NOTIFICATION', 'int'),
  \ javaapi#field(1,1,'STREAM_DTMF', 'int'),
  \ javaapi#field(1,1,'NUM_STREAMS', 'int'),
  \ javaapi#field(1,1,'ADJUST_RAISE', 'int'),
  \ javaapi#field(1,1,'ADJUST_LOWER', 'int'),
  \ javaapi#field(1,1,'ADJUST_SAME', 'int'),
  \ javaapi#field(1,1,'FLAG_SHOW_UI', 'int'),
  \ javaapi#field(1,1,'FLAG_ALLOW_RINGER_MODES', 'int'),
  \ javaapi#field(1,1,'FLAG_PLAY_SOUND', 'int'),
  \ javaapi#field(1,1,'FLAG_REMOVE_SOUND_AND_VIBRATE', 'int'),
  \ javaapi#field(1,1,'FLAG_VIBRATE', 'int'),
  \ javaapi#field(1,1,'RINGER_MODE_SILENT', 'int'),
  \ javaapi#field(1,1,'RINGER_MODE_VIBRATE', 'int'),
  \ javaapi#field(1,1,'RINGER_MODE_NORMAL', 'int'),
  \ javaapi#field(1,1,'VIBRATE_TYPE_RINGER', 'int'),
  \ javaapi#field(1,1,'VIBRATE_TYPE_NOTIFICATION', 'int'),
  \ javaapi#field(1,1,'VIBRATE_SETTING_OFF', 'int'),
  \ javaapi#field(1,1,'VIBRATE_SETTING_ON', 'int'),
  \ javaapi#field(1,1,'VIBRATE_SETTING_ONLY_SILENT', 'int'),
  \ javaapi#field(1,1,'USE_DEFAULT_STREAM_TYPE', 'int'),
  \ javaapi#field(1,1,'ACTION_SCO_AUDIO_STATE_CHANGED', 'String'),
  \ javaapi#field(1,1,'ACTION_SCO_AUDIO_STATE_UPDATED', 'String'),
  \ javaapi#field(1,1,'EXTRA_SCO_AUDIO_STATE', 'String'),
  \ javaapi#field(1,1,'EXTRA_SCO_AUDIO_PREVIOUS_STATE', 'String'),
  \ javaapi#field(1,1,'SCO_AUDIO_STATE_DISCONNECTED', 'int'),
  \ javaapi#field(1,1,'SCO_AUDIO_STATE_CONNECTED', 'int'),
  \ javaapi#field(1,1,'SCO_AUDIO_STATE_CONNECTING', 'int'),
  \ javaapi#field(1,1,'SCO_AUDIO_STATE_ERROR', 'int'),
  \ javaapi#field(1,1,'MODE_INVALID', 'int'),
  \ javaapi#field(1,1,'MODE_CURRENT', 'int'),
  \ javaapi#field(1,1,'MODE_NORMAL', 'int'),
  \ javaapi#field(1,1,'MODE_RINGTONE', 'int'),
  \ javaapi#field(1,1,'MODE_IN_CALL', 'int'),
  \ javaapi#field(1,1,'MODE_IN_COMMUNICATION', 'int'),
  \ javaapi#field(1,1,'ROUTE_EARPIECE', 'int'),
  \ javaapi#field(1,1,'ROUTE_SPEAKER', 'int'),
  \ javaapi#field(1,1,'ROUTE_BLUETOOTH', 'int'),
  \ javaapi#field(1,1,'ROUTE_BLUETOOTH_SCO', 'int'),
  \ javaapi#field(1,1,'ROUTE_HEADSET', 'int'),
  \ javaapi#field(1,1,'ROUTE_BLUETOOTH_A2DP', 'int'),
  \ javaapi#field(1,1,'ROUTE_ALL', 'int'),
  \ javaapi#field(1,1,'FX_KEY_CLICK', 'int'),
  \ javaapi#field(1,1,'FX_FOCUS_NAVIGATION_UP', 'int'),
  \ javaapi#field(1,1,'FX_FOCUS_NAVIGATION_DOWN', 'int'),
  \ javaapi#field(1,1,'FX_FOCUS_NAVIGATION_LEFT', 'int'),
  \ javaapi#field(1,1,'FX_FOCUS_NAVIGATION_RIGHT', 'int'),
  \ javaapi#field(1,1,'FX_KEYPRESS_STANDARD', 'int'),
  \ javaapi#field(1,1,'FX_KEYPRESS_SPACEBAR', 'int'),
  \ javaapi#field(1,1,'FX_KEYPRESS_DELETE', 'int'),
  \ javaapi#field(1,1,'FX_KEYPRESS_RETURN', 'int'),
  \ javaapi#field(1,1,'AUDIOFOCUS_GAIN', 'int'),
  \ javaapi#field(1,1,'AUDIOFOCUS_GAIN_TRANSIENT', 'int'),
  \ javaapi#field(1,1,'AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK', 'int'),
  \ javaapi#field(1,1,'AUDIOFOCUS_LOSS', 'int'),
  \ javaapi#field(1,1,'AUDIOFOCUS_LOSS_TRANSIENT', 'int'),
  \ javaapi#field(1,1,'AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK', 'int'),
  \ javaapi#field(1,1,'AUDIOFOCUS_REQUEST_FAILED', 'int'),
  \ javaapi#field(1,1,'AUDIOFOCUS_REQUEST_GRANTED', 'int'),
  \ javaapi#field(1,1,'PROPERTY_OUTPUT_SAMPLE_RATE', 'String'),
  \ javaapi#field(1,1,'PROPERTY_OUTPUT_FRAMES_PER_BUFFER', 'String'),
  \ javaapi#method(0,1,'adjustStreamVolume(', 'int, int, int)', 'void'),
  \ javaapi#method(0,1,'adjustVolume(', 'int, int)', 'void'),
  \ javaapi#method(0,1,'adjustSuggestedStreamVolume(', 'int, int, int)', 'void'),
  \ javaapi#method(0,1,'getRingerMode(', ')', 'int'),
  \ javaapi#method(0,1,'getStreamMaxVolume(', 'int)', 'int'),
  \ javaapi#method(0,1,'getStreamVolume(', 'int)', 'int'),
  \ javaapi#method(0,1,'setRingerMode(', 'int)', 'void'),
  \ javaapi#method(0,1,'setStreamVolume(', 'int, int, int)', 'void'),
  \ javaapi#method(0,1,'setStreamSolo(', 'int, boolean)', 'void'),
  \ javaapi#method(0,1,'setStreamMute(', 'int, boolean)', 'void'),
  \ javaapi#method(0,1,'shouldVibrate(', 'int)', 'boolean'),
  \ javaapi#method(0,1,'getVibrateSetting(', 'int)', 'int'),
  \ javaapi#method(0,1,'setVibrateSetting(', 'int, int)', 'void'),
  \ javaapi#method(0,1,'setSpeakerphoneOn(', 'boolean)', 'void'),
  \ javaapi#method(0,1,'isSpeakerphoneOn(', ')', 'boolean'),
  \ javaapi#method(0,1,'isBluetoothScoAvailableOffCall(', ')', 'boolean'),
  \ javaapi#method(0,1,'startBluetoothSco(', ')', 'void'),
  \ javaapi#method(0,1,'stopBluetoothSco(', ')', 'void'),
  \ javaapi#method(0,1,'setBluetoothScoOn(', 'boolean)', 'void'),
  \ javaapi#method(0,1,'isBluetoothScoOn(', ')', 'boolean'),
  \ javaapi#method(0,1,'setBluetoothA2dpOn(', 'boolean)', 'void'),
  \ javaapi#method(0,1,'isBluetoothA2dpOn(', ')', 'boolean'),
  \ javaapi#method(0,1,'setWiredHeadsetOn(', 'boolean)', 'void'),
  \ javaapi#method(0,1,'isWiredHeadsetOn(', ')', 'boolean'),
  \ javaapi#method(0,1,'setMicrophoneMute(', 'boolean)', 'void'),
  \ javaapi#method(0,1,'isMicrophoneMute(', ')', 'boolean'),
  \ javaapi#method(0,1,'setMode(', 'int)', 'void'),
  \ javaapi#method(0,1,'getMode(', ')', 'int'),
  \ javaapi#method(0,1,'setRouting(', 'int, int, int)', 'void'),
  \ javaapi#method(0,1,'getRouting(', 'int)', 'int'),
  \ javaapi#method(0,1,'isMusicActive(', ')', 'boolean'),
  \ javaapi#method(0,1,'setParameters(', 'String)', 'void'),
  \ javaapi#method(0,1,'getParameters(', 'String)', 'String'),
  \ javaapi#method(0,1,'playSoundEffect(', 'int)', 'void'),
  \ javaapi#method(0,1,'playSoundEffect(', 'int, float)', 'void'),
  \ javaapi#method(0,1,'loadSoundEffects(', ')', 'void'),
  \ javaapi#method(0,1,'unloadSoundEffects(', ')', 'void'),
  \ javaapi#method(0,1,'requestAudioFocus(', 'OnAudioFocusChangeListener, int, int)', 'int'),
  \ javaapi#method(0,1,'abandonAudioFocus(', 'OnAudioFocusChangeListener)', 'int'),
  \ javaapi#method(0,1,'registerMediaButtonEventReceiver(', 'ComponentName)', 'void'),
  \ javaapi#method(0,1,'unregisterMediaButtonEventReceiver(', 'ComponentName)', 'void'),
  \ javaapi#method(0,1,'registerRemoteControlClient(', 'RemoteControlClient)', 'void'),
  \ javaapi#method(0,1,'unregisterRemoteControlClient(', 'RemoteControlClient)', 'void'),
  \ javaapi#method(0,1,'getProperty(', 'String)', 'String'),
  \ ])

call javaapi#class('MediaCrypto', '', [
  \ javaapi#method(0,1,'MediaCrypto(', 'UUID, byte[]) throws MediaCryptoException', ''),
  \ javaapi#method(1,1,'isCryptoSchemeSupported(', 'UUID)', 'boolean'),
  \ javaapi#method(0,1,'requiresSecureDecoderComponent(', 'String)', 'boolean'),
  \ javaapi#method(0,0,'finalize(', ')', 'void'),
  \ javaapi#method(0,1,'release(', ')', 'void'),
  \ ])

call javaapi#class('AsyncPlayer', '', [
  \ javaapi#method(0,1,'AsyncPlayer(', 'String)', ''),
  \ javaapi#method(0,1,'play(', 'Context, Uri, boolean, int)', 'void'),
  \ javaapi#method(0,1,'stop(', ')', 'void'),
  \ ])

call javaapi#class('ExifInterface', '', [
  \ javaapi#field(1,1,'TAG_ORIENTATION', 'String'),
  \ javaapi#field(1,1,'TAG_DATETIME', 'String'),
  \ javaapi#field(1,1,'TAG_MAKE', 'String'),
  \ javaapi#field(1,1,'TAG_MODEL', 'String'),
  \ javaapi#field(1,1,'TAG_FLASH', 'String'),
  \ javaapi#field(1,1,'TAG_IMAGE_WIDTH', 'String'),
  \ javaapi#field(1,1,'TAG_IMAGE_LENGTH', 'String'),
  \ javaapi#field(1,1,'TAG_GPS_LATITUDE', 'String'),
  \ javaapi#field(1,1,'TAG_GPS_LONGITUDE', 'String'),
  \ javaapi#field(1,1,'TAG_GPS_LATITUDE_REF', 'String'),
  \ javaapi#field(1,1,'TAG_GPS_LONGITUDE_REF', 'String'),
  \ javaapi#field(1,1,'TAG_EXPOSURE_TIME', 'String'),
  \ javaapi#field(1,1,'TAG_APERTURE', 'String'),
  \ javaapi#field(1,1,'TAG_ISO', 'String'),
  \ javaapi#field(1,1,'TAG_GPS_ALTITUDE', 'String'),
  \ javaapi#field(1,1,'TAG_GPS_ALTITUDE_REF', 'String'),
  \ javaapi#field(1,1,'TAG_GPS_TIMESTAMP', 'String'),
  \ javaapi#field(1,1,'TAG_GPS_DATESTAMP', 'String'),
  \ javaapi#field(1,1,'TAG_WHITE_BALANCE', 'String'),
  \ javaapi#field(1,1,'TAG_FOCAL_LENGTH', 'String'),
  \ javaapi#field(1,1,'TAG_GPS_PROCESSING_METHOD', 'String'),
  \ javaapi#field(1,1,'ORIENTATION_UNDEFINED', 'int'),
  \ javaapi#field(1,1,'ORIENTATION_NORMAL', 'int'),
  \ javaapi#field(1,1,'ORIENTATION_FLIP_HORIZONTAL', 'int'),
  \ javaapi#field(1,1,'ORIENTATION_ROTATE_180', 'int'),
  \ javaapi#field(1,1,'ORIENTATION_FLIP_VERTICAL', 'int'),
  \ javaapi#field(1,1,'ORIENTATION_TRANSPOSE', 'int'),
  \ javaapi#field(1,1,'ORIENTATION_ROTATE_90', 'int'),
  \ javaapi#field(1,1,'ORIENTATION_TRANSVERSE', 'int'),
  \ javaapi#field(1,1,'ORIENTATION_ROTATE_270', 'int'),
  \ javaapi#field(1,1,'WHITEBALANCE_AUTO', 'int'),
  \ javaapi#field(1,1,'WHITEBALANCE_MANUAL', 'int'),
  \ javaapi#method(0,1,'ExifInterface(', 'String) throws IOException', ''),
  \ javaapi#method(0,1,'getAttribute(', 'String)', 'String'),
  \ javaapi#method(0,1,'getAttributeInt(', 'String, int)', 'int'),
  \ javaapi#method(0,1,'getAttributeDouble(', 'String, double)', 'double'),
  \ javaapi#method(0,1,'setAttribute(', 'String, String)', 'void'),
  \ javaapi#method(0,1,'saveAttributes(', ') throws IOException', 'void'),
  \ javaapi#method(0,1,'hasThumbnail(', ')', 'boolean'),
  \ javaapi#method(0,1,'getThumbnail(', ')', 'byte'),
  \ javaapi#method(0,1,'getLatLong(', 'float[])', 'boolean'),
  \ javaapi#method(0,1,'getAltitude(', 'double)', 'double'),
  \ ])

call javaapi#class('MediaActionSound', '', [
  \ javaapi#field(1,1,'SHUTTER_CLICK', 'int'),
  \ javaapi#field(1,1,'FOCUS_COMPLETE', 'int'),
  \ javaapi#field(1,1,'START_VIDEO_RECORDING', 'int'),
  \ javaapi#field(1,1,'STOP_VIDEO_RECORDING', 'int'),
  \ javaapi#method(0,1,'MediaActionSound(', ')', ''),
  \ javaapi#method(0,1,'load(', 'int)', 'void'),
  \ javaapi#method(0,1,'play(', 'int)', 'void'),
  \ javaapi#method(0,1,'release(', ')', 'void'),
  \ ])

call javaapi#class('RemoteControlClient', '', [
  \ javaapi#field(1,1,'PLAYSTATE_STOPPED', 'int'),
  \ javaapi#field(1,1,'PLAYSTATE_PAUSED', 'int'),
  \ javaapi#field(1,1,'PLAYSTATE_PLAYING', 'int'),
  \ javaapi#field(1,1,'PLAYSTATE_FAST_FORWARDING', 'int'),
  \ javaapi#field(1,1,'PLAYSTATE_REWINDING', 'int'),
  \ javaapi#field(1,1,'PLAYSTATE_SKIPPING_FORWARDS', 'int'),
  \ javaapi#field(1,1,'PLAYSTATE_SKIPPING_BACKWARDS', 'int'),
  \ javaapi#field(1,1,'PLAYSTATE_BUFFERING', 'int'),
  \ javaapi#field(1,1,'PLAYSTATE_ERROR', 'int'),
  \ javaapi#field(1,1,'FLAG_KEY_MEDIA_PREVIOUS', 'int'),
  \ javaapi#field(1,1,'FLAG_KEY_MEDIA_REWIND', 'int'),
  \ javaapi#field(1,1,'FLAG_KEY_MEDIA_PLAY', 'int'),
  \ javaapi#field(1,1,'FLAG_KEY_MEDIA_PLAY_PAUSE', 'int'),
  \ javaapi#field(1,1,'FLAG_KEY_MEDIA_PAUSE', 'int'),
  \ javaapi#field(1,1,'FLAG_KEY_MEDIA_STOP', 'int'),
  \ javaapi#field(1,1,'FLAG_KEY_MEDIA_FAST_FORWARD', 'int'),
  \ javaapi#field(1,1,'FLAG_KEY_MEDIA_NEXT', 'int'),
  \ javaapi#method(0,1,'RemoteControlClient(', 'PendingIntent)', ''),
  \ javaapi#method(0,1,'RemoteControlClient(', 'PendingIntent, Looper)', ''),
  \ javaapi#method(0,1,'editMetadata(', 'boolean)', 'MetadataEditor'),
  \ javaapi#method(0,1,'setPlaybackState(', 'int)', 'void'),
  \ javaapi#method(0,1,'setTransportControlFlags(', 'int)', 'void'),
  \ ])

call javaapi#class('MediaRecorder', '', [
  \ javaapi#field(1,1,'MEDIA_RECORDER_ERROR_UNKNOWN', 'int'),
  \ javaapi#field(1,1,'MEDIA_ERROR_SERVER_DIED', 'int'),
  \ javaapi#field(1,1,'MEDIA_RECORDER_INFO_UNKNOWN', 'int'),
  \ javaapi#field(1,1,'MEDIA_RECORDER_INFO_MAX_DURATION_REACHED', 'int'),
  \ javaapi#field(1,1,'MEDIA_RECORDER_INFO_MAX_FILESIZE_REACHED', 'int'),
  \ javaapi#method(0,1,'MediaRecorder(', ')', ''),
  \ javaapi#method(0,1,'setCamera(', 'Camera)', 'void'),
  \ javaapi#method(0,1,'setPreviewDisplay(', 'Surface)', 'void'),
  \ javaapi#method(0,1,'setAudioSource(', 'int) throws IllegalStateException', 'void'),
  \ javaapi#method(1,1,'getAudioSourceMax(', ')', 'int'),
  \ javaapi#method(0,1,'setVideoSource(', 'int) throws IllegalStateException', 'void'),
  \ javaapi#method(0,1,'setProfile(', 'CamcorderProfile)', 'void'),
  \ javaapi#method(0,1,'setCaptureRate(', 'double)', 'void'),
  \ javaapi#method(0,1,'setOrientationHint(', 'int)', 'void'),
  \ javaapi#method(0,1,'setLocation(', 'float, float)', 'void'),
  \ javaapi#method(0,1,'setOutputFormat(', 'int) throws IllegalStateException', 'void'),
  \ javaapi#method(0,1,'setVideoSize(', 'int, int) throws IllegalStateException', 'void'),
  \ javaapi#method(0,1,'setVideoFrameRate(', 'int) throws IllegalStateException', 'void'),
  \ javaapi#method(0,1,'setMaxDuration(', 'int) throws IllegalArgumentException', 'void'),
  \ javaapi#method(0,1,'setMaxFileSize(', 'long) throws IllegalArgumentException', 'void'),
  \ javaapi#method(0,1,'setAudioEncoder(', 'int) throws IllegalStateException', 'void'),
  \ javaapi#method(0,1,'setVideoEncoder(', 'int) throws IllegalStateException', 'void'),
  \ javaapi#method(0,1,'setAudioSamplingRate(', 'int)', 'void'),
  \ javaapi#method(0,1,'setAudioChannels(', 'int)', 'void'),
  \ javaapi#method(0,1,'setAudioEncodingBitRate(', 'int)', 'void'),
  \ javaapi#method(0,1,'setVideoEncodingBitRate(', 'int)', 'void'),
  \ javaapi#method(0,1,'setOutputFile(', 'FileDescriptor) throws IllegalStateException', 'void'),
  \ javaapi#method(0,1,'setOutputFile(', 'String) throws IllegalStateException', 'void'),
  \ javaapi#method(0,1,'prepare(', ') throws IllegalStateException, IOException', 'void'),
  \ javaapi#method(0,1,'start(', ') throws IllegalStateException', 'void'),
  \ javaapi#method(0,1,'stop(', ') throws IllegalStateException', 'void'),
  \ javaapi#method(0,1,'reset(', ')', 'void'),
  \ javaapi#method(0,1,'getMaxAmplitude(', ') throws IllegalStateException', 'int'),
  \ javaapi#method(0,1,'setOnErrorListener(', 'OnErrorListener)', 'void'),
  \ javaapi#method(0,1,'setOnInfoListener(', 'OnInfoListener)', 'void'),
  \ javaapi#method(0,1,'release(', ')', 'void'),
  \ javaapi#method(0,0,'finalize(', ')', 'void'),
  \ ])

call javaapi#class('MediaScannerConnection', 'ServiceConnection', [
  \ javaapi#method(0,1,'MediaScannerConnection(', 'Context, MediaScannerConnectionClient)', ''),
  \ javaapi#method(0,1,'connect(', ')', 'void'),
  \ javaapi#method(0,1,'disconnect(', ')', 'void'),
  \ javaapi#method(0,1,'isConnected(', ')', 'boolean'),
  \ javaapi#method(0,1,'scanFile(', 'String, String)', 'void'),
  \ javaapi#method(1,1,'scanFile(', 'Context, String[], String[], OnScanCompletedListener)', 'void'),
  \ javaapi#method(0,1,'onServiceConnected(', 'ComponentName, IBinder)', 'void'),
  \ javaapi#method(0,1,'onServiceDisconnected(', 'ComponentName)', 'void'),
  \ ])

call javaapi#class('CamcorderProfile', '', [
  \ javaapi#field(1,1,'QUALITY_LOW', 'int'),
  \ javaapi#field(1,1,'QUALITY_HIGH', 'int'),
  \ javaapi#field(1,1,'QUALITY_QCIF', 'int'),
  \ javaapi#field(1,1,'QUALITY_CIF', 'int'),
  \ javaapi#field(1,1,'QUALITY_480P', 'int'),
  \ javaapi#field(1,1,'QUALITY_720P', 'int'),
  \ javaapi#field(1,1,'QUALITY_1080P', 'int'),
  \ javaapi#field(1,1,'QUALITY_QVGA', 'int'),
  \ javaapi#field(1,1,'QUALITY_TIME_LAPSE_LOW', 'int'),
  \ javaapi#field(1,1,'QUALITY_TIME_LAPSE_HIGH', 'int'),
  \ javaapi#field(1,1,'QUALITY_TIME_LAPSE_QCIF', 'int'),
  \ javaapi#field(1,1,'QUALITY_TIME_LAPSE_CIF', 'int'),
  \ javaapi#field(1,1,'QUALITY_TIME_LAPSE_480P', 'int'),
  \ javaapi#field(1,1,'QUALITY_TIME_LAPSE_720P', 'int'),
  \ javaapi#field(1,1,'QUALITY_TIME_LAPSE_1080P', 'int'),
  \ javaapi#field(1,1,'QUALITY_TIME_LAPSE_QVGA', 'int'),
  \ javaapi#field(0,1,'duration', 'int'),
  \ javaapi#field(0,1,'quality', 'int'),
  \ javaapi#field(0,1,'fileFormat', 'int'),
  \ javaapi#field(0,1,'videoCodec', 'int'),
  \ javaapi#field(0,1,'videoBitRate', 'int'),
  \ javaapi#field(0,1,'videoFrameRate', 'int'),
  \ javaapi#field(0,1,'videoFrameWidth', 'int'),
  \ javaapi#field(0,1,'videoFrameHeight', 'int'),
  \ javaapi#field(0,1,'audioCodec', 'int'),
  \ javaapi#field(0,1,'audioBitRate', 'int'),
  \ javaapi#field(0,1,'audioSampleRate', 'int'),
  \ javaapi#field(0,1,'audioChannels', 'int'),
  \ javaapi#method(1,1,'get(', 'int)', 'CamcorderProfile'),
  \ javaapi#method(1,1,'get(', 'int, int)', 'CamcorderProfile'),
  \ javaapi#method(1,1,'hasProfile(', 'int)', 'boolean'),
  \ javaapi#method(1,1,'hasProfile(', 'int, int)', 'boolean'),
  \ ])

