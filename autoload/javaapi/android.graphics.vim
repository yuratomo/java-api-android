call javaapi#namespace('android.graphics')

call javaapi#class('PorterDuff', '', [
  \ javaapi#method(0,1,'PorterDuff(', ')', ''),
  \ ])

call javaapi#class('ComposeShader', 'Shader', [
  \ javaapi#method(0,1,'ComposeShader(', 'Shader, Shader, Xfermode)', ''),
  \ javaapi#method(0,1,'ComposeShader(', 'Shader, Shader, Mode)', ''),
  \ ])

call javaapi#class('PorterDuffXfermode', 'Xfermode', [
  \ javaapi#method(0,1,'PorterDuffXfermode(', 'Mode)', ''),
  \ ])

call javaapi#class('DashPathEffect', 'PathEffect', [
  \ javaapi#method(0,1,'DashPathEffect(', 'float[], float)', ''),
  \ ])

call javaapi#class('RegionIterator', '', [
  \ javaapi#method(0,1,'RegionIterator(', 'Region)', ''),
  \ javaapi#method(0,1,'next(', 'Rect)', 'boolean'),
  \ javaapi#method(0,0,'finalize(', ') throws Throwable', 'void'),
  \ ])

call javaapi#class('Movie', '', [
  \ javaapi#method(0,1,'width(', ')', 'int'),
  \ javaapi#method(0,1,'height(', ')', 'int'),
  \ javaapi#method(0,1,'isOpaque(', ')', 'boolean'),
  \ javaapi#method(0,1,'duration(', ')', 'int'),
  \ javaapi#method(0,1,'setTime(', 'int)', 'boolean'),
  \ javaapi#method(0,1,'draw(', 'Canvas, float, float, Paint)', 'void'),
  \ javaapi#method(0,1,'draw(', 'Canvas, float, float)', 'void'),
  \ javaapi#method(1,1,'decodeStream(', 'InputStream)', 'Movie'),
  \ javaapi#method(1,1,'decodeByteArray(', 'byte[], int, int)', 'Movie'),
  \ javaapi#method(1,1,'decodeFile(', 'String)', 'Movie'),
  \ javaapi#method(0,0,'finalize(', ') throws Throwable', 'void'),
  \ ])

call javaapi#class('Camera', '', [
  \ javaapi#method(0,1,'Camera(', ')', ''),
  \ javaapi#method(0,1,'save(', ')', 'void'),
  \ javaapi#method(0,1,'restore(', ')', 'void'),
  \ javaapi#method(0,1,'translate(', 'float, float, float)', 'void'),
  \ javaapi#method(0,1,'rotateX(', 'float)', 'void'),
  \ javaapi#method(0,1,'rotateY(', 'float)', 'void'),
  \ javaapi#method(0,1,'rotateZ(', 'float)', 'void'),
  \ javaapi#method(0,1,'rotate(', 'float, float, float)', 'void'),
  \ javaapi#method(0,1,'getLocationX(', ')', 'float'),
  \ javaapi#method(0,1,'getLocationY(', ')', 'float'),
  \ javaapi#method(0,1,'getLocationZ(', ')', 'float'),
  \ javaapi#method(0,1,'setLocation(', 'float, float, float)', 'void'),
  \ javaapi#method(0,1,'getMatrix(', 'Matrix)', 'void'),
  \ javaapi#method(0,1,'applyToCanvas(', 'Canvas)', 'void'),
  \ javaapi#method(0,1,'dotWithNormal(', 'float, float, float)', 'float'),
  \ javaapi#method(0,0,'finalize(', ') throws Throwable', 'void'),
  \ ])

call javaapi#class('Region', 'Parcelable', [
  \ javaapi#field(1,1,'CREATOR', 'Creator'),
  \ javaapi#method(0,1,'Region(', ')', ''),
  \ javaapi#method(0,1,'Region(', 'Region)', ''),
  \ javaapi#method(0,1,'Region(', 'Rect)', ''),
  \ javaapi#method(0,1,'Region(', 'int, int, int, int)', ''),
  \ javaapi#method(0,1,'setEmpty(', ')', 'void'),
  \ javaapi#method(0,1,'set(', 'Region)', 'boolean'),
  \ javaapi#method(0,1,'set(', 'Rect)', 'boolean'),
  \ javaapi#method(0,1,'set(', 'int, int, int, int)', 'boolean'),
  \ javaapi#method(0,1,'setPath(', 'Path, Region)', 'boolean'),
  \ javaapi#method(0,1,'isEmpty(', ')', 'boolean'),
  \ javaapi#method(0,1,'isRect(', ')', 'boolean'),
  \ javaapi#method(0,1,'isComplex(', ')', 'boolean'),
  \ javaapi#method(0,1,'getBounds(', ')', 'Rect'),
  \ javaapi#method(0,1,'getBounds(', 'Rect)', 'boolean'),
  \ javaapi#method(0,1,'getBoundaryPath(', ')', 'Path'),
  \ javaapi#method(0,1,'getBoundaryPath(', 'Path)', 'boolean'),
  \ javaapi#method(0,1,'contains(', 'int, int)', 'boolean'),
  \ javaapi#method(0,1,'quickContains(', 'Rect)', 'boolean'),
  \ javaapi#method(0,1,'quickContains(', 'int, int, int, int)', 'boolean'),
  \ javaapi#method(0,1,'quickReject(', 'Rect)', 'boolean'),
  \ javaapi#method(0,1,'quickReject(', 'int, int, int, int)', 'boolean'),
  \ javaapi#method(0,1,'quickReject(', 'Region)', 'boolean'),
  \ javaapi#method(0,1,'translate(', 'int, int)', 'void'),
  \ javaapi#method(0,1,'translate(', 'int, int, Region)', 'void'),
  \ javaapi#method(0,1,'union(', 'Rect)', 'boolean'),
  \ javaapi#method(0,1,'op(', 'Rect, Op)', 'boolean'),
  \ javaapi#method(0,1,'op(', 'int, int, int, int, Op)', 'boolean'),
  \ javaapi#method(0,1,'op(', 'Region, Op)', 'boolean'),
  \ javaapi#method(0,1,'op(', 'Rect, Region, Op)', 'boolean'),
  \ javaapi#method(0,1,'op(', 'Region, Region, Op)', 'boolean'),
  \ javaapi#method(0,1,'toString(', ')', 'String'),
  \ javaapi#method(0,1,'describeContents(', ')', 'int'),
  \ javaapi#method(0,1,'writeToParcel(', 'Parcel, int)', 'void'),
  \ javaapi#method(0,1,'equals(', 'Object)', 'boolean'),
  \ javaapi#method(0,0,'finalize(', ') throws Throwable', 'void'),
  \ ])

call javaapi#class('PixelFormat', '', [
  \ javaapi#field(1,1,'UNKNOWN', 'int'),
  \ javaapi#field(1,1,'TRANSLUCENT', 'int'),
  \ javaapi#field(1,1,'TRANSPARENT', 'int'),
  \ javaapi#field(1,1,'OPAQUE', 'int'),
  \ javaapi#field(1,1,'RGBA_8888', 'int'),
  \ javaapi#field(1,1,'RGBX_8888', 'int'),
  \ javaapi#field(1,1,'RGB_888', 'int'),
  \ javaapi#field(1,1,'RGB_565', 'int'),
  \ javaapi#field(1,1,'RGBA_5551', 'int'),
  \ javaapi#field(1,1,'RGBA_4444', 'int'),
  \ javaapi#field(1,1,'A_8', 'int'),
  \ javaapi#field(1,1,'L_8', 'int'),
  \ javaapi#field(1,1,'LA_88', 'int'),
  \ javaapi#field(1,1,'RGB_332', 'int'),
  \ javaapi#field(1,1,'YCbCr_422_SP', 'int'),
  \ javaapi#field(1,1,'YCbCr_420_SP', 'int'),
  \ javaapi#field(1,1,'YCbCr_422_I', 'int'),
  \ javaapi#field(1,1,'JPEG', 'int'),
  \ javaapi#field(0,1,'bytesPerPixel', 'int'),
  \ javaapi#field(0,1,'bitsPerPixel', 'int'),
  \ javaapi#method(0,1,'PixelFormat(', ')', ''),
  \ javaapi#method(1,1,'getPixelFormatInfo(', 'int, PixelFormat)', 'void'),
  \ javaapi#method(1,1,'formatHasAlpha(', 'int)', 'boolean'),
  \ ])

call javaapi#class('Bitmap', 'Parcelable', [
  \ javaapi#field(1,1,'DENSITY_NONE', 'int'),
  \ javaapi#field(1,1,'CREATOR', 'Creator'),
  \ javaapi#method(0,1,'getDensity(', ')', 'int'),
  \ javaapi#method(0,1,'setDensity(', 'int)', 'void'),
  \ javaapi#method(0,1,'recycle(', ')', 'void'),
  \ javaapi#method(0,1,'isRecycled(', ')', 'boolean'),
  \ javaapi#method(0,1,'getGenerationId(', ')', 'int'),
  \ javaapi#method(0,1,'copyPixelsToBuffer(', 'Buffer)', 'void'),
  \ javaapi#method(0,1,'copyPixelsFromBuffer(', 'Buffer)', 'void'),
  \ javaapi#method(0,1,'copy(', 'Config, boolean)', 'Bitmap'),
  \ javaapi#method(1,1,'createScaledBitmap(', 'Bitmap, int, int, boolean)', 'Bitmap'),
  \ javaapi#method(1,1,'createBitmap(', 'Bitmap)', 'Bitmap'),
  \ javaapi#method(1,1,'createBitmap(', 'Bitmap, int, int, int, int)', 'Bitmap'),
  \ javaapi#method(1,1,'createBitmap(', 'Bitmap, int, int, int, int, Matrix, boolean)', 'Bitmap'),
  \ javaapi#method(1,1,'createBitmap(', 'int, int, Config)', 'Bitmap'),
  \ javaapi#method(1,1,'createBitmap(', 'DisplayMetrics, int, int, Config)', 'Bitmap'),
  \ javaapi#method(1,1,'createBitmap(', 'int[], int, int, int, int, Config)', 'Bitmap'),
  \ javaapi#method(1,1,'createBitmap(', 'DisplayMetrics, int[], int, int, int, int, Config)', 'Bitmap'),
  \ javaapi#method(1,1,'createBitmap(', 'int[], int, int, Config)', 'Bitmap'),
  \ javaapi#method(1,1,'createBitmap(', 'DisplayMetrics, int[], int, int, Config)', 'Bitmap'),
  \ javaapi#method(0,1,'getNinePatchChunk(', ')', 'byte'),
  \ javaapi#method(0,1,'compress(', 'CompressFormat, int, OutputStream)', 'boolean'),
  \ javaapi#method(0,1,'isMutable(', ')', 'boolean'),
  \ javaapi#method(0,1,'isPremultiplied(', ')', 'boolean'),
  \ javaapi#method(0,1,'getWidth(', ')', 'int'),
  \ javaapi#method(0,1,'getHeight(', ')', 'int'),
  \ javaapi#method(0,1,'getScaledWidth(', 'Canvas)', 'int'),
  \ javaapi#method(0,1,'getScaledHeight(', 'Canvas)', 'int'),
  \ javaapi#method(0,1,'getScaledWidth(', 'DisplayMetrics)', 'int'),
  \ javaapi#method(0,1,'getScaledHeight(', 'DisplayMetrics)', 'int'),
  \ javaapi#method(0,1,'getScaledWidth(', 'int)', 'int'),
  \ javaapi#method(0,1,'getScaledHeight(', 'int)', 'int'),
  \ javaapi#method(0,1,'getRowBytes(', ')', 'int'),
  \ javaapi#method(0,1,'getByteCount(', ')', 'int'),
  \ javaapi#method(0,1,'getConfig(', ')', 'Config'),
  \ javaapi#method(0,1,'hasAlpha(', ')', 'boolean'),
  \ javaapi#method(0,1,'setHasAlpha(', 'boolean)', 'void'),
  \ javaapi#method(0,1,'hasMipMap(', ')', 'boolean'),
  \ javaapi#method(0,1,'setHasMipMap(', 'boolean)', 'void'),
  \ javaapi#method(0,1,'eraseColor(', 'int)', 'void'),
  \ javaapi#method(0,1,'getPixel(', 'int, int)', 'int'),
  \ javaapi#method(0,1,'getPixels(', 'int[], int, int, int, int, int, int)', 'void'),
  \ javaapi#method(0,1,'setPixel(', 'int, int, int)', 'void'),
  \ javaapi#method(0,1,'setPixels(', 'int[], int, int, int, int, int, int)', 'void'),
  \ javaapi#method(0,1,'describeContents(', ')', 'int'),
  \ javaapi#method(0,1,'writeToParcel(', 'Parcel, int)', 'void'),
  \ javaapi#method(0,1,'extractAlpha(', ')', 'Bitmap'),
  \ javaapi#method(0,1,'extractAlpha(', 'Paint, int[])', 'Bitmap'),
  \ javaapi#method(0,1,'sameAs(', 'Bitmap)', 'boolean'),
  \ javaapi#method(0,1,'prepareToDraw(', ')', 'void'),
  \ ])

call javaapi#class('ColorMatrix', '', [
  \ javaapi#method(0,1,'ColorMatrix(', ')', ''),
  \ javaapi#method(0,1,'ColorMatrix(', 'float[])', ''),
  \ javaapi#method(0,1,'ColorMatrix(', 'ColorMatrix)', ''),
  \ javaapi#method(0,1,'getArray(', ')', 'float'),
  \ javaapi#method(0,1,'reset(', ')', 'void'),
  \ javaapi#method(0,1,'set(', 'ColorMatrix)', 'void'),
  \ javaapi#method(0,1,'set(', 'float[])', 'void'),
  \ javaapi#method(0,1,'setScale(', 'float, float, float, float)', 'void'),
  \ javaapi#method(0,1,'setRotate(', 'int, float)', 'void'),
  \ javaapi#method(0,1,'setConcat(', 'ColorMatrix, ColorMatrix)', 'void'),
  \ javaapi#method(0,1,'preConcat(', 'ColorMatrix)', 'void'),
  \ javaapi#method(0,1,'postConcat(', 'ColorMatrix)', 'void'),
  \ javaapi#method(0,1,'setSaturation(', 'float)', 'void'),
  \ javaapi#method(0,1,'setRGB2YUV(', ')', 'void'),
  \ javaapi#method(0,1,'setYUV2RGB(', ')', 'void'),
  \ ])

call javaapi#class('Typeface', '', [
  \ javaapi#field(1,1,'DEFAULT', 'Typeface'),
  \ javaapi#field(1,1,'DEFAULT_BOLD', 'Typeface'),
  \ javaapi#field(1,1,'SANS_SERIF', 'Typeface'),
  \ javaapi#field(1,1,'SERIF', 'Typeface'),
  \ javaapi#field(1,1,'MONOSPACE', 'Typeface'),
  \ javaapi#field(1,1,'NORMAL', 'int'),
  \ javaapi#field(1,1,'BOLD', 'int'),
  \ javaapi#field(1,1,'ITALIC', 'int'),
  \ javaapi#field(1,1,'BOLD_ITALIC', 'int'),
  \ javaapi#method(0,1,'getStyle(', ')', 'int'),
  \ javaapi#method(0,1,'isBold(', ')', 'boolean'),
  \ javaapi#method(0,1,'isItalic(', ')', 'boolean'),
  \ javaapi#method(1,1,'create(', 'String, int)', 'Typeface'),
  \ javaapi#method(1,1,'create(', 'Typeface, int)', 'Typeface'),
  \ javaapi#method(1,1,'defaultFromStyle(', 'int)', 'Typeface'),
  \ javaapi#method(1,1,'createFromAsset(', 'AssetManager, String)', 'Typeface'),
  \ javaapi#method(1,1,'createFromFile(', 'File)', 'Typeface'),
  \ javaapi#method(1,1,'createFromFile(', 'String)', 'Typeface'),
  \ javaapi#method(0,0,'finalize(', ') throws Throwable', 'void'),
  \ javaapi#method(0,1,'equals(', 'Object)', 'boolean'),
  \ javaapi#method(0,1,'hashCode(', ')', 'int'),
  \ ])

call javaapi#class('Paint', '', [
  \ javaapi#field(1,1,'ANTI_ALIAS_FLAG', 'int'),
  \ javaapi#field(1,1,'FILTER_BITMAP_FLAG', 'int'),
  \ javaapi#field(1,1,'DITHER_FLAG', 'int'),
  \ javaapi#field(1,1,'UNDERLINE_TEXT_FLAG', 'int'),
  \ javaapi#field(1,1,'STRIKE_THRU_TEXT_FLAG', 'int'),
  \ javaapi#field(1,1,'FAKE_BOLD_TEXT_FLAG', 'int'),
  \ javaapi#field(1,1,'LINEAR_TEXT_FLAG', 'int'),
  \ javaapi#field(1,1,'SUBPIXEL_TEXT_FLAG', 'int'),
  \ javaapi#field(1,1,'DEV_KERN_TEXT_FLAG', 'int'),
  \ javaapi#field(1,1,'HINTING_OFF', 'int'),
  \ javaapi#field(1,1,'HINTING_ON', 'int'),
  \ javaapi#method(0,1,'Paint(', ')', ''),
  \ javaapi#method(0,1,'Paint(', 'int)', ''),
  \ javaapi#method(0,1,'Paint(', 'Paint)', ''),
  \ javaapi#method(0,1,'reset(', ')', 'void'),
  \ javaapi#method(0,1,'set(', 'Paint)', 'void'),
  \ javaapi#method(0,1,'getFlags(', ')', 'int'),
  \ javaapi#method(0,1,'setFlags(', 'int)', 'void'),
  \ javaapi#method(0,1,'getHinting(', ')', 'int'),
  \ javaapi#method(0,1,'setHinting(', 'int)', 'void'),
  \ javaapi#method(0,1,'isAntiAlias(', ')', 'boolean'),
  \ javaapi#method(0,1,'setAntiAlias(', 'boolean)', 'void'),
  \ javaapi#method(0,1,'isDither(', ')', 'boolean'),
  \ javaapi#method(0,1,'setDither(', 'boolean)', 'void'),
  \ javaapi#method(0,1,'isLinearText(', ')', 'boolean'),
  \ javaapi#method(0,1,'setLinearText(', 'boolean)', 'void'),
  \ javaapi#method(0,1,'isSubpixelText(', ')', 'boolean'),
  \ javaapi#method(0,1,'setSubpixelText(', 'boolean)', 'void'),
  \ javaapi#method(0,1,'isUnderlineText(', ')', 'boolean'),
  \ javaapi#method(0,1,'setUnderlineText(', 'boolean)', 'void'),
  \ javaapi#method(0,1,'isStrikeThruText(', ')', 'boolean'),
  \ javaapi#method(0,1,'setStrikeThruText(', 'boolean)', 'void'),
  \ javaapi#method(0,1,'isFakeBoldText(', ')', 'boolean'),
  \ javaapi#method(0,1,'setFakeBoldText(', 'boolean)', 'void'),
  \ javaapi#method(0,1,'isFilterBitmap(', ')', 'boolean'),
  \ javaapi#method(0,1,'setFilterBitmap(', 'boolean)', 'void'),
  \ javaapi#method(0,1,'getStyle(', ')', 'Style'),
  \ javaapi#method(0,1,'setStyle(', 'Style)', 'void'),
  \ javaapi#method(0,1,'getColor(', ')', 'int'),
  \ javaapi#method(0,1,'setColor(', 'int)', 'void'),
  \ javaapi#method(0,1,'getAlpha(', ')', 'int'),
  \ javaapi#method(0,1,'setAlpha(', 'int)', 'void'),
  \ javaapi#method(0,1,'setARGB(', 'int, int, int, int)', 'void'),
  \ javaapi#method(0,1,'getStrokeWidth(', ')', 'float'),
  \ javaapi#method(0,1,'setStrokeWidth(', 'float)', 'void'),
  \ javaapi#method(0,1,'getStrokeMiter(', ')', 'float'),
  \ javaapi#method(0,1,'setStrokeMiter(', 'float)', 'void'),
  \ javaapi#method(0,1,'getStrokeCap(', ')', 'Cap'),
  \ javaapi#method(0,1,'setStrokeCap(', 'Cap)', 'void'),
  \ javaapi#method(0,1,'getStrokeJoin(', ')', 'Join'),
  \ javaapi#method(0,1,'setStrokeJoin(', 'Join)', 'void'),
  \ javaapi#method(0,1,'getFillPath(', 'Path, Path)', 'boolean'),
  \ javaapi#method(0,1,'getShader(', ')', 'Shader'),
  \ javaapi#method(0,1,'setShader(', 'Shader)', 'Shader'),
  \ javaapi#method(0,1,'getColorFilter(', ')', 'ColorFilter'),
  \ javaapi#method(0,1,'setColorFilter(', 'ColorFilter)', 'ColorFilter'),
  \ javaapi#method(0,1,'getXfermode(', ')', 'Xfermode'),
  \ javaapi#method(0,1,'setXfermode(', 'Xfermode)', 'Xfermode'),
  \ javaapi#method(0,1,'getPathEffect(', ')', 'PathEffect'),
  \ javaapi#method(0,1,'setPathEffect(', 'PathEffect)', 'PathEffect'),
  \ javaapi#method(0,1,'getMaskFilter(', ')', 'MaskFilter'),
  \ javaapi#method(0,1,'setMaskFilter(', 'MaskFilter)', 'MaskFilter'),
  \ javaapi#method(0,1,'getTypeface(', ')', 'Typeface'),
  \ javaapi#method(0,1,'setTypeface(', 'Typeface)', 'Typeface'),
  \ javaapi#method(0,1,'getRasterizer(', ')', 'Rasterizer'),
  \ javaapi#method(0,1,'setRasterizer(', 'Rasterizer)', 'Rasterizer'),
  \ javaapi#method(0,1,'setShadowLayer(', 'float, float, float, int)', 'void'),
  \ javaapi#method(0,1,'clearShadowLayer(', ')', 'void'),
  \ javaapi#method(0,1,'getTextAlign(', ')', 'Align'),
  \ javaapi#method(0,1,'setTextAlign(', 'Align)', 'void'),
  \ javaapi#method(0,1,'getTextLocale(', ')', 'Locale'),
  \ javaapi#method(0,1,'setTextLocale(', 'Locale)', 'void'),
  \ javaapi#method(0,1,'getTextSize(', ')', 'float'),
  \ javaapi#method(0,1,'setTextSize(', 'float)', 'void'),
  \ javaapi#method(0,1,'getTextScaleX(', ')', 'float'),
  \ javaapi#method(0,1,'setTextScaleX(', 'float)', 'void'),
  \ javaapi#method(0,1,'getTextSkewX(', ')', 'float'),
  \ javaapi#method(0,1,'setTextSkewX(', 'float)', 'void'),
  \ javaapi#method(0,1,'ascent(', ')', 'float'),
  \ javaapi#method(0,1,'descent(', ')', 'float'),
  \ javaapi#method(0,1,'getFontMetrics(', 'FontMetrics)', 'float'),
  \ javaapi#method(0,1,'getFontMetrics(', ')', 'FontMetrics'),
  \ javaapi#method(0,1,'getFontMetricsInt(', 'FontMetricsInt)', 'int'),
  \ javaapi#method(0,1,'getFontMetricsInt(', ')', 'FontMetricsInt'),
  \ javaapi#method(0,1,'getFontSpacing(', ')', 'float'),
  \ javaapi#method(0,1,'measureText(', 'char[], int, int)', 'float'),
  \ javaapi#method(0,1,'measureText(', 'String, int, int)', 'float'),
  \ javaapi#method(0,1,'measureText(', 'String)', 'float'),
  \ javaapi#method(0,1,'measureText(', 'CharSequence, int, int)', 'float'),
  \ javaapi#method(0,1,'breakText(', 'char[], int, int, float, float[])', 'int'),
  \ javaapi#method(0,1,'breakText(', 'CharSequence, int, int, boolean, float, float[])', 'int'),
  \ javaapi#method(0,1,'breakText(', 'String, boolean, float, float[])', 'int'),
  \ javaapi#method(0,1,'getTextWidths(', 'char[], int, int, float[])', 'int'),
  \ javaapi#method(0,1,'getTextWidths(', 'CharSequence, int, int, float[])', 'int'),
  \ javaapi#method(0,1,'getTextWidths(', 'String, int, int, float[])', 'int'),
  \ javaapi#method(0,1,'getTextWidths(', 'String, float[])', 'int'),
  \ javaapi#method(0,1,'getTextPath(', 'char[], int, int, float, float, Path)', 'void'),
  \ javaapi#method(0,1,'getTextPath(', 'String, int, int, float, float, Path)', 'void'),
  \ javaapi#method(0,1,'getTextBounds(', 'String, int, int, Rect)', 'void'),
  \ javaapi#method(0,1,'getTextBounds(', 'char[], int, int, Rect)', 'void'),
  \ javaapi#method(0,0,'finalize(', ') throws Throwable', 'void'),
  \ ])

call javaapi#class('Path', '', [
  \ javaapi#method(0,1,'Path(', ')', ''),
  \ javaapi#method(0,1,'Path(', 'Path)', ''),
  \ javaapi#method(0,1,'reset(', ')', 'void'),
  \ javaapi#method(0,1,'rewind(', ')', 'void'),
  \ javaapi#method(0,1,'set(', 'Path)', 'void'),
  \ javaapi#method(0,1,'getFillType(', ')', 'FillType'),
  \ javaapi#method(0,1,'setFillType(', 'FillType)', 'void'),
  \ javaapi#method(0,1,'isInverseFillType(', ')', 'boolean'),
  \ javaapi#method(0,1,'toggleInverseFillType(', ')', 'void'),
  \ javaapi#method(0,1,'isEmpty(', ')', 'boolean'),
  \ javaapi#method(0,1,'isRect(', 'RectF)', 'boolean'),
  \ javaapi#method(0,1,'computeBounds(', 'RectF, boolean)', 'void'),
  \ javaapi#method(0,1,'incReserve(', 'int)', 'void'),
  \ javaapi#method(0,1,'moveTo(', 'float, float)', 'void'),
  \ javaapi#method(0,1,'rMoveTo(', 'float, float)', 'void'),
  \ javaapi#method(0,1,'lineTo(', 'float, float)', 'void'),
  \ javaapi#method(0,1,'rLineTo(', 'float, float)', 'void'),
  \ javaapi#method(0,1,'quadTo(', 'float, float, float, float)', 'void'),
  \ javaapi#method(0,1,'rQuadTo(', 'float, float, float, float)', 'void'),
  \ javaapi#method(0,1,'cubicTo(', 'float, float, float, float, float, float)', 'void'),
  \ javaapi#method(0,1,'rCubicTo(', 'float, float, float, float, float, float)', 'void'),
  \ javaapi#method(0,1,'arcTo(', 'RectF, float, float, boolean)', 'void'),
  \ javaapi#method(0,1,'arcTo(', 'RectF, float, float)', 'void'),
  \ javaapi#method(0,1,'close(', ')', 'void'),
  \ javaapi#method(0,1,'addRect(', 'RectF, Direction)', 'void'),
  \ javaapi#method(0,1,'addRect(', 'float, float, float, float, Direction)', 'void'),
  \ javaapi#method(0,1,'addOval(', 'RectF, Direction)', 'void'),
  \ javaapi#method(0,1,'addCircle(', 'float, float, float, Direction)', 'void'),
  \ javaapi#method(0,1,'addArc(', 'RectF, float, float)', 'void'),
  \ javaapi#method(0,1,'addRoundRect(', 'RectF, float, float, Direction)', 'void'),
  \ javaapi#method(0,1,'addRoundRect(', 'RectF, float[], Direction)', 'void'),
  \ javaapi#method(0,1,'addPath(', 'Path, float, float)', 'void'),
  \ javaapi#method(0,1,'addPath(', 'Path)', 'void'),
  \ javaapi#method(0,1,'addPath(', 'Path, Matrix)', 'void'),
  \ javaapi#method(0,1,'offset(', 'float, float, Path)', 'void'),
  \ javaapi#method(0,1,'offset(', 'float, float)', 'void'),
  \ javaapi#method(0,1,'setLastPoint(', 'float, float)', 'void'),
  \ javaapi#method(0,1,'transform(', 'Matrix, Path)', 'void'),
  \ javaapi#method(0,1,'transform(', 'Matrix)', 'void'),
  \ javaapi#method(0,0,'finalize(', ') throws Throwable', 'void'),
  \ ])

call javaapi#class('RectF', 'Parcelable', [
  \ javaapi#field(0,1,'left', 'float'),
  \ javaapi#field(0,1,'top', 'float'),
  \ javaapi#field(0,1,'right', 'float'),
  \ javaapi#field(0,1,'bottom', 'float'),
  \ javaapi#field(1,1,'CREATOR', 'Creator'),
  \ javaapi#method(0,1,'RectF(', ')', ''),
  \ javaapi#method(0,1,'RectF(', 'float, float, float, float)', ''),
  \ javaapi#method(0,1,'RectF(', 'RectF)', ''),
  \ javaapi#method(0,1,'RectF(', 'Rect)', ''),
  \ javaapi#method(0,1,'equals(', 'Object)', 'boolean'),
  \ javaapi#method(0,1,'hashCode(', ')', 'int'),
  \ javaapi#method(0,1,'toString(', ')', 'String'),
  \ javaapi#method(0,1,'toShortString(', ')', 'String'),
  \ javaapi#method(0,1,'isEmpty(', ')', 'boolean'),
  \ javaapi#method(0,1,'width(', ')', 'float'),
  \ javaapi#method(0,1,'height(', ')', 'float'),
  \ javaapi#method(0,1,'centerX(', ')', 'float'),
  \ javaapi#method(0,1,'centerY(', ')', 'float'),
  \ javaapi#method(0,1,'setEmpty(', ')', 'void'),
  \ javaapi#method(0,1,'set(', 'float, float, float, float)', 'void'),
  \ javaapi#method(0,1,'set(', 'RectF)', 'void'),
  \ javaapi#method(0,1,'set(', 'Rect)', 'void'),
  \ javaapi#method(0,1,'offset(', 'float, float)', 'void'),
  \ javaapi#method(0,1,'offsetTo(', 'float, float)', 'void'),
  \ javaapi#method(0,1,'inset(', 'float, float)', 'void'),
  \ javaapi#method(0,1,'contains(', 'float, float)', 'boolean'),
  \ javaapi#method(0,1,'contains(', 'float, float, float, float)', 'boolean'),
  \ javaapi#method(0,1,'contains(', 'RectF)', 'boolean'),
  \ javaapi#method(0,1,'intersect(', 'float, float, float, float)', 'boolean'),
  \ javaapi#method(0,1,'intersect(', 'RectF)', 'boolean'),
  \ javaapi#method(0,1,'setIntersect(', 'RectF, RectF)', 'boolean'),
  \ javaapi#method(0,1,'intersects(', 'float, float, float, float)', 'boolean'),
  \ javaapi#method(1,1,'intersects(', 'RectF, RectF)', 'boolean'),
  \ javaapi#method(0,1,'round(', 'Rect)', 'void'),
  \ javaapi#method(0,1,'roundOut(', 'Rect)', 'void'),
  \ javaapi#method(0,1,'union(', 'float, float, float, float)', 'void'),
  \ javaapi#method(0,1,'union(', 'RectF)', 'void'),
  \ javaapi#method(0,1,'union(', 'float, float)', 'void'),
  \ javaapi#method(0,1,'sort(', ')', 'void'),
  \ javaapi#method(0,1,'describeContents(', ')', 'int'),
  \ javaapi#method(0,1,'writeToParcel(', 'Parcel, int)', 'void'),
  \ javaapi#method(0,1,'readFromParcel(', 'Parcel)', 'void'),
  \ ])

call javaapi#class('YuvImage', '', [
  \ javaapi#method(0,1,'YuvImage(', 'byte[], int, int, int, int[])', ''),
  \ javaapi#method(0,1,'compressToJpeg(', 'Rect, int, OutputStream)', 'boolean'),
  \ javaapi#method(0,1,'getYuvData(', ')', 'byte'),
  \ javaapi#method(0,1,'getYuvFormat(', ')', 'int'),
  \ javaapi#method(0,1,'getStrides(', ')', 'int'),
  \ javaapi#method(0,1,'getWidth(', ')', 'int'),
  \ javaapi#method(0,1,'getHeight(', ')', 'int'),
  \ ])

call javaapi#class('Matrix', '', [
  \ javaapi#field(1,1,'MSCALE_X', 'int'),
  \ javaapi#field(1,1,'MSKEW_X', 'int'),
  \ javaapi#field(1,1,'MTRANS_X', 'int'),
  \ javaapi#field(1,1,'MSKEW_Y', 'int'),
  \ javaapi#field(1,1,'MSCALE_Y', 'int'),
  \ javaapi#field(1,1,'MTRANS_Y', 'int'),
  \ javaapi#field(1,1,'MPERSP_0', 'int'),
  \ javaapi#field(1,1,'MPERSP_1', 'int'),
  \ javaapi#field(1,1,'MPERSP_2', 'int'),
  \ javaapi#method(0,1,'Matrix(', ')', ''),
  \ javaapi#method(0,1,'Matrix(', 'Matrix)', ''),
  \ javaapi#method(0,1,'isIdentity(', ')', 'boolean'),
  \ javaapi#method(0,1,'rectStaysRect(', ')', 'boolean'),
  \ javaapi#method(0,1,'set(', 'Matrix)', 'void'),
  \ javaapi#method(0,1,'equals(', 'Object)', 'boolean'),
  \ javaapi#method(0,1,'reset(', ')', 'void'),
  \ javaapi#method(0,1,'setTranslate(', 'float, float)', 'void'),
  \ javaapi#method(0,1,'setScale(', 'float, float, float, float)', 'void'),
  \ javaapi#method(0,1,'setScale(', 'float, float)', 'void'),
  \ javaapi#method(0,1,'setRotate(', 'float, float, float)', 'void'),
  \ javaapi#method(0,1,'setRotate(', 'float)', 'void'),
  \ javaapi#method(0,1,'setSinCos(', 'float, float, float, float)', 'void'),
  \ javaapi#method(0,1,'setSinCos(', 'float, float)', 'void'),
  \ javaapi#method(0,1,'setSkew(', 'float, float, float, float)', 'void'),
  \ javaapi#method(0,1,'setSkew(', 'float, float)', 'void'),
  \ javaapi#method(0,1,'setConcat(', 'Matrix, Matrix)', 'boolean'),
  \ javaapi#method(0,1,'preTranslate(', 'float, float)', 'boolean'),
  \ javaapi#method(0,1,'preScale(', 'float, float, float, float)', 'boolean'),
  \ javaapi#method(0,1,'preScale(', 'float, float)', 'boolean'),
  \ javaapi#method(0,1,'preRotate(', 'float, float, float)', 'boolean'),
  \ javaapi#method(0,1,'preRotate(', 'float)', 'boolean'),
  \ javaapi#method(0,1,'preSkew(', 'float, float, float, float)', 'boolean'),
  \ javaapi#method(0,1,'preSkew(', 'float, float)', 'boolean'),
  \ javaapi#method(0,1,'preConcat(', 'Matrix)', 'boolean'),
  \ javaapi#method(0,1,'postTranslate(', 'float, float)', 'boolean'),
  \ javaapi#method(0,1,'postScale(', 'float, float, float, float)', 'boolean'),
  \ javaapi#method(0,1,'postScale(', 'float, float)', 'boolean'),
  \ javaapi#method(0,1,'postRotate(', 'float, float, float)', 'boolean'),
  \ javaapi#method(0,1,'postRotate(', 'float)', 'boolean'),
  \ javaapi#method(0,1,'postSkew(', 'float, float, float, float)', 'boolean'),
  \ javaapi#method(0,1,'postSkew(', 'float, float)', 'boolean'),
  \ javaapi#method(0,1,'postConcat(', 'Matrix)', 'boolean'),
  \ javaapi#method(0,1,'setRectToRect(', 'RectF, RectF, ScaleToFit)', 'boolean'),
  \ javaapi#method(0,1,'setPolyToPoly(', 'float[], int, float[], int, int)', 'boolean'),
  \ javaapi#method(0,1,'invert(', 'Matrix)', 'boolean'),
  \ javaapi#method(0,1,'mapPoints(', 'float[], int, float[], int, int)', 'void'),
  \ javaapi#method(0,1,'mapVectors(', 'float[], int, float[], int, int)', 'void'),
  \ javaapi#method(0,1,'mapPoints(', 'float[], float[])', 'void'),
  \ javaapi#method(0,1,'mapVectors(', 'float[], float[])', 'void'),
  \ javaapi#method(0,1,'mapPoints(', 'float[])', 'void'),
  \ javaapi#method(0,1,'mapVectors(', 'float[])', 'void'),
  \ javaapi#method(0,1,'mapRect(', 'RectF, RectF)', 'boolean'),
  \ javaapi#method(0,1,'mapRect(', 'RectF)', 'boolean'),
  \ javaapi#method(0,1,'mapRadius(', 'float)', 'float'),
  \ javaapi#method(0,1,'getValues(', 'float[])', 'void'),
  \ javaapi#method(0,1,'setValues(', 'float[])', 'void'),
  \ javaapi#method(0,1,'toString(', ')', 'String'),
  \ javaapi#method(0,1,'toShortString(', ')', 'String'),
  \ javaapi#method(0,0,'finalize(', ') throws Throwable', 'void'),
  \ ])

call javaapi#class('ColorMatrixColorFilter', 'ColorFilter', [
  \ javaapi#method(0,1,'ColorMatrixColorFilter(', 'ColorMatrix)', ''),
  \ javaapi#method(0,1,'ColorMatrixColorFilter(', 'float[])', ''),
  \ ])

call javaapi#class('Rasterizer', '', [
  \ javaapi#method(0,1,'Rasterizer(', ')', ''),
  \ javaapi#method(0,0,'finalize(', ') throws Throwable', 'void'),
  \ ])

call javaapi#class('SurfaceTexture', '', [
  \ javaapi#method(0,1,'SurfaceTexture(', 'int)', ''),
  \ javaapi#method(0,1,'setOnFrameAvailableListener(', 'OnFrameAvailableListener)', 'void'),
  \ javaapi#method(0,1,'setDefaultBufferSize(', 'int, int)', 'void'),
  \ javaapi#method(0,1,'updateTexImage(', ')', 'void'),
  \ javaapi#method(0,1,'detachFromGLContext(', ')', 'void'),
  \ javaapi#method(0,1,'attachToGLContext(', 'int)', 'void'),
  \ javaapi#method(0,1,'getTransformMatrix(', 'float[])', 'void'),
  \ javaapi#method(0,1,'getTimestamp(', ')', 'long'),
  \ javaapi#method(0,1,'release(', ')', 'void'),
  \ javaapi#method(0,0,'finalize(', ') throws Throwable', 'void'),
  \ ])

call javaapi#class('Interpolator', '', [
  \ javaapi#method(0,1,'Interpolator(', 'int)', ''),
  \ javaapi#method(0,1,'Interpolator(', 'int, int)', ''),
  \ javaapi#method(0,1,'reset(', 'int)', 'void'),
  \ javaapi#method(0,1,'reset(', 'int, int)', 'void'),
  \ javaapi#method(0,1,'getKeyFrameCount(', ')', 'int'),
  \ javaapi#method(0,1,'getValueCount(', ')', 'int'),
  \ javaapi#method(0,1,'setKeyFrame(', 'int, int, float[])', 'void'),
  \ javaapi#method(0,1,'setKeyFrame(', 'int, int, float[], float[])', 'void'),
  \ javaapi#method(0,1,'setRepeatMirror(', 'float, boolean)', 'void'),
  \ javaapi#method(0,1,'timeToValues(', 'float[])', 'Result'),
  \ javaapi#method(0,1,'timeToValues(', 'int, float[])', 'Result'),
  \ javaapi#method(0,0,'finalize(', ') throws Throwable', 'void'),
  \ ])

call javaapi#class('DiscretePathEffect', 'PathEffect', [
  \ javaapi#method(0,1,'DiscretePathEffect(', 'float, float)', ''),
  \ ])

call javaapi#class('EmbossMaskFilter', 'MaskFilter', [
  \ javaapi#method(0,1,'EmbossMaskFilter(', 'float[], float, float, float)', ''),
  \ ])

call javaapi#class('ComposePathEffect', 'PathEffect', [
  \ javaapi#method(0,1,'ComposePathEffect(', 'PathEffect, PathEffect)', ''),
  \ ])

call javaapi#class('AvoidXfermode', 'Xfermode', [
  \ javaapi#method(0,1,'AvoidXfermode(', 'int, int, Mode)', ''),
  \ ])

call javaapi#namespace('android.graphics')

call javaapi#class('Color', '', [
  \ javaapi#field(1,1,'BLACK', 'int'),
  \ javaapi#field(1,1,'DKGRAY', 'int'),
  \ javaapi#field(1,1,'GRAY', 'int'),
  \ javaapi#field(1,1,'LTGRAY', 'int'),
  \ javaapi#field(1,1,'WHITE', 'int'),
  \ javaapi#field(1,1,'RED', 'int'),
  \ javaapi#field(1,1,'GREEN', 'int'),
  \ javaapi#field(1,1,'BLUE', 'int'),
  \ javaapi#field(1,1,'YELLOW', 'int'),
  \ javaapi#field(1,1,'CYAN', 'int'),
  \ javaapi#field(1,1,'MAGENTA', 'int'),
  \ javaapi#field(1,1,'TRANSPARENT', 'int'),
  \ javaapi#method(0,1,'Color(', ')', ''),
  \ javaapi#method(1,1,'alpha(', 'int)', 'int'),
  \ javaapi#method(1,1,'red(', 'int)', 'int'),
  \ javaapi#method(1,1,'green(', 'int)', 'int'),
  \ javaapi#method(1,1,'blue(', 'int)', 'int'),
  \ javaapi#method(1,1,'rgb(', 'int, int, int)', 'int'),
  \ javaapi#method(1,1,'argb(', 'int, int, int, int)', 'int'),
  \ javaapi#method(1,1,'parseColor(', 'String)', 'int'),
  \ javaapi#method(1,1,'RGBToHSV(', 'int, int, int, float[])', 'void'),
  \ javaapi#method(1,1,'colorToHSV(', 'int, float[])', 'void'),
  \ javaapi#method(1,1,'HSVToColor(', 'float[])', 'int'),
  \ javaapi#method(1,1,'HSVToColor(', 'int, float[])', 'int'),
  \ ])

call javaapi#class('PathDashPathEffect', 'PathEffect', [
  \ javaapi#method(0,1,'PathDashPathEffect(', 'Path, float, float, Style)', ''),
  \ ])

call javaapi#class('BitmapFactory', '', [
  \ javaapi#method(0,1,'BitmapFactory(', ')', ''),
  \ javaapi#method(1,1,'decodeFile(', 'String, Options)', 'Bitmap'),
  \ javaapi#method(1,1,'decodeFile(', 'String)', 'Bitmap'),
  \ javaapi#method(1,1,'decodeResourceStream(', 'Resources, TypedValue, InputStream, Rect, Options)', 'Bitmap'),
  \ javaapi#method(1,1,'decodeResource(', 'Resources, int, Options)', 'Bitmap'),
  \ javaapi#method(1,1,'decodeResource(', 'Resources, int)', 'Bitmap'),
  \ javaapi#method(1,1,'decodeByteArray(', 'byte[], int, int, Options)', 'Bitmap'),
  \ javaapi#method(1,1,'decodeByteArray(', 'byte[], int, int)', 'Bitmap'),
  \ javaapi#method(1,1,'decodeStream(', 'InputStream, Rect, Options)', 'Bitmap'),
  \ javaapi#method(1,1,'decodeStream(', 'InputStream)', 'Bitmap'),
  \ javaapi#method(1,1,'decodeFileDescriptor(', 'FileDescriptor, Rect, Options)', 'Bitmap'),
  \ javaapi#method(1,1,'decodeFileDescriptor(', 'FileDescriptor)', 'Bitmap'),
  \ ])

call javaapi#class('LinearGradient', 'Shader', [
  \ javaapi#method(0,1,'LinearGradient(', 'float, float, float, float, int[], float[], TileMode)', ''),
  \ javaapi#method(0,1,'LinearGradient(', 'float, float, float, float, int, int, TileMode)', ''),
  \ ])

call javaapi#class('RadialGradient', 'Shader', [
  \ javaapi#method(0,1,'RadialGradient(', 'float, float, float, int[], float[], TileMode)', ''),
  \ javaapi#method(0,1,'RadialGradient(', 'float, float, float, int, int, TileMode)', ''),
  \ ])

call javaapi#class('LayerRasterizer', 'Rasterizer', [
  \ javaapi#method(0,1,'LayerRasterizer(', ')', ''),
  \ javaapi#method(0,1,'addLayer(', 'Paint, float, float)', 'void'),
  \ javaapi#method(0,1,'addLayer(', 'Paint)', 'void'),
  \ ])

call javaapi#class('BlurMaskFilter', 'MaskFilter', [
  \ javaapi#method(0,1,'BlurMaskFilter(', 'float, Blur)', ''),
  \ ])

call javaapi#class('PorterDuffColorFilter', 'ColorFilter', [
  \ javaapi#method(0,1,'PorterDuffColorFilter(', 'int, Mode)', ''),
  \ ])

call javaapi#class('Xfermode', '', [
  \ javaapi#method(0,1,'Xfermode(', ')', ''),
  \ javaapi#method(0,0,'finalize(', ') throws Throwable', 'void'),
  \ ])

call javaapi#class('PixelXorXfermode', 'Xfermode', [
  \ javaapi#method(0,1,'PixelXorXfermode(', 'int)', ''),
  \ ])

call javaapi#class('Picture', '', [
  \ javaapi#method(0,1,'Picture(', ')', ''),
  \ javaapi#method(0,1,'Picture(', 'Picture)', ''),
  \ javaapi#method(0,1,'beginRecording(', 'int, int)', 'Canvas'),
  \ javaapi#method(0,1,'endRecording(', ')', 'void'),
  \ javaapi#method(0,1,'getWidth(', ')', 'int'),
  \ javaapi#method(0,1,'getHeight(', ')', 'int'),
  \ javaapi#method(0,1,'draw(', 'Canvas)', 'void'),
  \ javaapi#method(1,1,'createFromStream(', 'InputStream)', 'Picture'),
  \ javaapi#method(0,1,'writeToStream(', 'OutputStream)', 'void'),
  \ javaapi#method(0,0,'finalize(', ') throws Throwable', 'void'),
  \ ])

call javaapi#class('SweepGradient', 'Shader', [
  \ javaapi#method(0,1,'SweepGradient(', 'float, float, int[], float[])', ''),
  \ javaapi#method(0,1,'SweepGradient(', 'float, float, int, int)', ''),
  \ ])

call javaapi#class('BitmapShader', 'Shader', [
  \ javaapi#method(0,1,'BitmapShader(', 'Bitmap, TileMode, TileMode)', ''),
  \ ])

call javaapi#class('CornerPathEffect', 'PathEffect', [
  \ javaapi#method(0,1,'CornerPathEffect(', 'float)', ''),
  \ ])

call javaapi#class('ImageFormat', '', [
  \ javaapi#field(1,1,'UNKNOWN', 'int'),
  \ javaapi#field(1,1,'RGB_565', 'int'),
  \ javaapi#field(1,1,'YV12', 'int'),
  \ javaapi#field(1,1,'NV16', 'int'),
  \ javaapi#field(1,1,'NV21', 'int'),
  \ javaapi#field(1,1,'YUY2', 'int'),
  \ javaapi#field(1,1,'JPEG', 'int'),
  \ javaapi#method(0,1,'ImageFormat(', ')', ''),
  \ javaapi#method(1,1,'getBitsPerPixel(', 'int)', 'int'),
  \ ])

call javaapi#class('PathEffect', '', [
  \ javaapi#method(0,1,'PathEffect(', ')', ''),
  \ javaapi#method(0,0,'finalize(', ') throws Throwable', 'void'),
  \ ])

call javaapi#class('MaskFilter', '', [
  \ javaapi#method(0,1,'MaskFilter(', ')', ''),
  \ javaapi#method(0,0,'finalize(', ') throws Throwable', 'void'),
  \ ])

call javaapi#class('LightingColorFilter', 'ColorFilter', [
  \ javaapi#method(0,1,'LightingColorFilter(', 'int, int)', ''),
  \ ])

call javaapi#class('Point', 'Parcelable', [
  \ javaapi#field(0,1,'x', 'int'),
  \ javaapi#field(0,1,'y', 'int'),
  \ javaapi#field(1,1,'CREATOR', 'Creator'),
  \ javaapi#method(0,1,'Point(', ')', ''),
  \ javaapi#method(0,1,'Point(', 'int, int)', ''),
  \ javaapi#method(0,1,'Point(', 'Point)', ''),
  \ javaapi#method(0,1,'set(', 'int, int)', 'void'),
  \ javaapi#method(0,1,'negate(', ')', 'void'),
  \ javaapi#method(0,1,'offset(', 'int, int)', 'void'),
  \ javaapi#method(0,1,'equals(', 'int, int)', 'boolean'),
  \ javaapi#method(0,1,'equals(', 'Object)', 'boolean'),
  \ javaapi#method(0,1,'hashCode(', ')', 'int'),
  \ javaapi#method(0,1,'toString(', ')', 'String'),
  \ javaapi#method(0,1,'describeContents(', ')', 'int'),
  \ javaapi#method(0,1,'writeToParcel(', 'Parcel, int)', 'void'),
  \ javaapi#method(0,1,'readFromParcel(', 'Parcel)', 'void'),
  \ ])

call javaapi#class('Shader', '', [
  \ javaapi#method(0,1,'Shader(', ')', ''),
  \ javaapi#method(0,1,'getLocalMatrix(', 'Matrix)', 'boolean'),
  \ javaapi#method(0,1,'setLocalMatrix(', 'Matrix)', 'void'),
  \ javaapi#method(0,0,'finalize(', ') throws Throwable', 'void'),
  \ ])

call javaapi#class('BitmapRegionDecoder', '', [
  \ javaapi#method(1,1,'newInstance(', 'byte[], int, int, boolean) throws IOException', 'BitmapRegionDecoder'),
  \ javaapi#method(1,1,'newInstance(', 'FileDescriptor, boolean) throws IOException', 'BitmapRegionDecoder'),
  \ javaapi#method(1,1,'newInstance(', 'InputStream, boolean) throws IOException', 'BitmapRegionDecoder'),
  \ javaapi#method(1,1,'newInstance(', 'String, boolean) throws IOException', 'BitmapRegionDecoder'),
  \ javaapi#method(0,1,'decodeRegion(', 'Rect, Options)', 'Bitmap'),
  \ javaapi#method(0,1,'getWidth(', ')', 'int'),
  \ javaapi#method(0,1,'getHeight(', ')', 'int'),
  \ javaapi#method(0,1,'recycle(', ')', 'void'),
  \ javaapi#method(0,1,'isRecycled(', ')', 'boolean'),
  \ javaapi#method(0,0,'finalize(', ') throws Throwable', 'void'),
  \ ])

call javaapi#class('NinePatch', '', [
  \ javaapi#method(0,1,'NinePatch(', 'Bitmap, byte[], String)', ''),
  \ javaapi#method(0,1,'setPaint(', 'Paint)', 'void'),
  \ javaapi#method(0,1,'draw(', 'Canvas, RectF)', 'void'),
  \ javaapi#method(0,1,'draw(', 'Canvas, Rect)', 'void'),
  \ javaapi#method(0,1,'draw(', 'Canvas, Rect, Paint)', 'void'),
  \ javaapi#method(0,1,'getDensity(', ')', 'int'),
  \ javaapi#method(0,1,'getWidth(', ')', 'int'),
  \ javaapi#method(0,1,'getHeight(', ')', 'int'),
  \ javaapi#method(0,1,'hasAlpha(', ')', 'boolean'),
  \ javaapi#method(0,1,'getTransparentRegion(', 'Rect)', 'Region'),
  \ javaapi#method(1,1,'isNinePatchChunk(', 'byte[])', 'boolean'),
  \ ])

call javaapi#class('ColorFilter', '', [
  \ javaapi#method(0,1,'ColorFilter(', ')', ''),
  \ javaapi#method(0,0,'finalize(', ') throws Throwable', 'void'),
  \ ])

call javaapi#class('Canvas', '', [
  \ javaapi#field(1,1,'MATRIX_SAVE_FLAG', 'int'),
  \ javaapi#field(1,1,'CLIP_SAVE_FLAG', 'int'),
  \ javaapi#field(1,1,'HAS_ALPHA_LAYER_SAVE_FLAG', 'int'),
  \ javaapi#field(1,1,'FULL_COLOR_LAYER_SAVE_FLAG', 'int'),
  \ javaapi#field(1,1,'CLIP_TO_LAYER_SAVE_FLAG', 'int'),
  \ javaapi#field(1,1,'ALL_SAVE_FLAG', 'int'),
  \ javaapi#method(0,1,'Canvas(', ')', ''),
  \ javaapi#method(0,1,'Canvas(', 'Bitmap)', ''),
  \ javaapi#method(0,1,'isHardwareAccelerated(', ')', 'boolean'),
  \ javaapi#method(0,1,'setBitmap(', 'Bitmap)', 'void'),
  \ javaapi#method(0,1,'isOpaque(', ')', 'boolean'),
  \ javaapi#method(0,1,'getWidth(', ')', 'int'),
  \ javaapi#method(0,1,'getHeight(', ')', 'int'),
  \ javaapi#method(0,1,'getDensity(', ')', 'int'),
  \ javaapi#method(0,1,'setDensity(', 'int)', 'void'),
  \ javaapi#method(0,1,'getMaximumBitmapWidth(', ')', 'int'),
  \ javaapi#method(0,1,'getMaximumBitmapHeight(', ')', 'int'),
  \ javaapi#method(0,1,'save(', ')', 'int'),
  \ javaapi#method(0,1,'save(', 'int)', 'int'),
  \ javaapi#method(0,1,'saveLayer(', 'RectF, Paint, int)', 'int'),
  \ javaapi#method(0,1,'saveLayer(', 'float, float, float, float, Paint, int)', 'int'),
  \ javaapi#method(0,1,'saveLayerAlpha(', 'RectF, int, int)', 'int'),
  \ javaapi#method(0,1,'saveLayerAlpha(', 'float, float, float, float, int, int)', 'int'),
  \ javaapi#method(0,1,'restore(', ')', 'void'),
  \ javaapi#method(0,1,'getSaveCount(', ')', 'int'),
  \ javaapi#method(0,1,'restoreToCount(', 'int)', 'void'),
  \ javaapi#method(0,1,'translate(', 'float, float)', 'void'),
  \ javaapi#method(0,1,'scale(', 'float, float)', 'void'),
  \ javaapi#method(0,1,'scale(', 'float, float, float, float)', 'void'),
  \ javaapi#method(0,1,'rotate(', 'float)', 'void'),
  \ javaapi#method(0,1,'rotate(', 'float, float, float)', 'void'),
  \ javaapi#method(0,1,'skew(', 'float, float)', 'void'),
  \ javaapi#method(0,1,'concat(', 'Matrix)', 'void'),
  \ javaapi#method(0,1,'setMatrix(', 'Matrix)', 'void'),
  \ javaapi#method(0,1,'getMatrix(', 'Matrix)', 'void'),
  \ javaapi#method(0,1,'getMatrix(', ')', 'Matrix'),
  \ javaapi#method(0,1,'clipRect(', 'RectF, Op)', 'boolean'),
  \ javaapi#method(0,1,'clipRect(', 'Rect, Op)', 'boolean'),
  \ javaapi#method(0,1,'clipRect(', 'RectF)', 'boolean'),
  \ javaapi#method(0,1,'clipRect(', 'Rect)', 'boolean'),
  \ javaapi#method(0,1,'clipRect(', 'float, float, float, float, Op)', 'boolean'),
  \ javaapi#method(0,1,'clipRect(', 'float, float, float, float)', 'boolean'),
  \ javaapi#method(0,1,'clipRect(', 'int, int, int, int)', 'boolean'),
  \ javaapi#method(0,1,'clipPath(', 'Path, Op)', 'boolean'),
  \ javaapi#method(0,1,'clipPath(', 'Path)', 'boolean'),
  \ javaapi#method(0,1,'clipRegion(', 'Region, Op)', 'boolean'),
  \ javaapi#method(0,1,'clipRegion(', 'Region)', 'boolean'),
  \ javaapi#method(0,1,'getDrawFilter(', ')', 'DrawFilter'),
  \ javaapi#method(0,1,'setDrawFilter(', 'DrawFilter)', 'void'),
  \ javaapi#method(0,1,'quickReject(', 'RectF, EdgeType)', 'boolean'),
  \ javaapi#method(0,1,'quickReject(', 'Path, EdgeType)', 'boolean'),
  \ javaapi#method(0,1,'quickReject(', 'float, float, float, float, EdgeType)', 'boolean'),
  \ javaapi#method(0,1,'getClipBounds(', 'Rect)', 'boolean'),
  \ javaapi#method(0,1,'getClipBounds(', ')', 'Rect'),
  \ javaapi#method(0,1,'drawRGB(', 'int, int, int)', 'void'),
  \ javaapi#method(0,1,'drawARGB(', 'int, int, int, int)', 'void'),
  \ javaapi#method(0,1,'drawColor(', 'int)', 'void'),
  \ javaapi#method(0,1,'drawColor(', 'int, Mode)', 'void'),
  \ javaapi#method(0,1,'drawPaint(', 'Paint)', 'void'),
  \ javaapi#method(0,1,'drawPoints(', 'float[], int, int, Paint)', 'void'),
  \ javaapi#method(0,1,'drawPoints(', 'float[], Paint)', 'void'),
  \ javaapi#method(0,1,'drawPoint(', 'float, float, Paint)', 'void'),
  \ javaapi#method(0,1,'drawLine(', 'float, float, float, float, Paint)', 'void'),
  \ javaapi#method(0,1,'drawLines(', 'float[], int, int, Paint)', 'void'),
  \ javaapi#method(0,1,'drawLines(', 'float[], Paint)', 'void'),
  \ javaapi#method(0,1,'drawRect(', 'RectF, Paint)', 'void'),
  \ javaapi#method(0,1,'drawRect(', 'Rect, Paint)', 'void'),
  \ javaapi#method(0,1,'drawRect(', 'float, float, float, float, Paint)', 'void'),
  \ javaapi#method(0,1,'drawOval(', 'RectF, Paint)', 'void'),
  \ javaapi#method(0,1,'drawCircle(', 'float, float, float, Paint)', 'void'),
  \ javaapi#method(0,1,'drawArc(', 'RectF, float, float, boolean, Paint)', 'void'),
  \ javaapi#method(0,1,'drawRoundRect(', 'RectF, float, float, Paint)', 'void'),
  \ javaapi#method(0,1,'drawPath(', 'Path, Paint)', 'void'),
  \ javaapi#method(0,1,'drawBitmap(', 'Bitmap, float, float, Paint)', 'void'),
  \ javaapi#method(0,1,'drawBitmap(', 'Bitmap, Rect, RectF, Paint)', 'void'),
  \ javaapi#method(0,1,'drawBitmap(', 'Bitmap, Rect, Rect, Paint)', 'void'),
  \ javaapi#method(0,1,'drawBitmap(', 'int[], int, int, float, float, int, int, boolean, Paint)', 'void'),
  \ javaapi#method(0,1,'drawBitmap(', 'int[], int, int, int, int, int, int, boolean, Paint)', 'void'),
  \ javaapi#method(0,1,'drawBitmap(', 'Bitmap, Matrix, Paint)', 'void'),
  \ javaapi#method(0,1,'drawBitmapMesh(', 'Bitmap, int, int, float[], int, int[], int, Paint)', 'void'),
  \ javaapi#method(0,1,'drawVertices(', 'VertexMode, int, float[], int, float[], int, int[], int, short[], int, int, Paint)', 'void'),
  \ javaapi#method(0,1,'drawText(', 'char[], int, int, float, float, Paint)', 'void'),
  \ javaapi#method(0,1,'drawText(', 'String, float, float, Paint)', 'void'),
  \ javaapi#method(0,1,'drawText(', 'String, int, int, float, float, Paint)', 'void'),
  \ javaapi#method(0,1,'drawText(', 'CharSequence, int, int, float, float, Paint)', 'void'),
  \ javaapi#method(0,1,'drawPosText(', 'char[], int, int, float[], Paint)', 'void'),
  \ javaapi#method(0,1,'drawPosText(', 'String, float[], Paint)', 'void'),
  \ javaapi#method(0,1,'drawTextOnPath(', 'char[], int, int, Path, float, float, Paint)', 'void'),
  \ javaapi#method(0,1,'drawTextOnPath(', 'String, Path, float, float, Paint)', 'void'),
  \ javaapi#method(0,1,'drawPicture(', 'Picture)', 'void'),
  \ javaapi#method(0,1,'drawPicture(', 'Picture, RectF)', 'void'),
  \ javaapi#method(0,1,'drawPicture(', 'Picture, Rect)', 'void'),
  \ ])

call javaapi#class('Rect', 'Parcelable', [
  \ javaapi#field(0,1,'left', 'int'),
  \ javaapi#field(0,1,'top', 'int'),
  \ javaapi#field(0,1,'right', 'int'),
  \ javaapi#field(0,1,'bottom', 'int'),
  \ javaapi#field(1,1,'CREATOR', 'Creator'),
  \ javaapi#method(0,1,'Rect(', ')', ''),
  \ javaapi#method(0,1,'Rect(', 'int, int, int, int)', ''),
  \ javaapi#method(0,1,'Rect(', 'Rect)', ''),
  \ javaapi#method(0,1,'equals(', 'Object)', 'boolean'),
  \ javaapi#method(0,1,'hashCode(', ')', 'int'),
  \ javaapi#method(0,1,'toString(', ')', 'String'),
  \ javaapi#method(0,1,'toShortString(', ')', 'String'),
  \ javaapi#method(0,1,'flattenToString(', ')', 'String'),
  \ javaapi#method(1,1,'unflattenFromString(', 'String)', 'Rect'),
  \ javaapi#method(0,1,'isEmpty(', ')', 'boolean'),
  \ javaapi#method(0,1,'width(', ')', 'int'),
  \ javaapi#method(0,1,'height(', ')', 'int'),
  \ javaapi#method(0,1,'centerX(', ')', 'int'),
  \ javaapi#method(0,1,'centerY(', ')', 'int'),
  \ javaapi#method(0,1,'exactCenterX(', ')', 'float'),
  \ javaapi#method(0,1,'exactCenterY(', ')', 'float'),
  \ javaapi#method(0,1,'setEmpty(', ')', 'void'),
  \ javaapi#method(0,1,'set(', 'int, int, int, int)', 'void'),
  \ javaapi#method(0,1,'set(', 'Rect)', 'void'),
  \ javaapi#method(0,1,'offset(', 'int, int)', 'void'),
  \ javaapi#method(0,1,'offsetTo(', 'int, int)', 'void'),
  \ javaapi#method(0,1,'inset(', 'int, int)', 'void'),
  \ javaapi#method(0,1,'contains(', 'int, int)', 'boolean'),
  \ javaapi#method(0,1,'contains(', 'int, int, int, int)', 'boolean'),
  \ javaapi#method(0,1,'contains(', 'Rect)', 'boolean'),
  \ javaapi#method(0,1,'intersect(', 'int, int, int, int)', 'boolean'),
  \ javaapi#method(0,1,'intersect(', 'Rect)', 'boolean'),
  \ javaapi#method(0,1,'setIntersect(', 'Rect, Rect)', 'boolean'),
  \ javaapi#method(0,1,'intersects(', 'int, int, int, int)', 'boolean'),
  \ javaapi#method(1,1,'intersects(', 'Rect, Rect)', 'boolean'),
  \ javaapi#method(0,1,'union(', 'int, int, int, int)', 'void'),
  \ javaapi#method(0,1,'union(', 'Rect)', 'void'),
  \ javaapi#method(0,1,'union(', 'int, int)', 'void'),
  \ javaapi#method(0,1,'sort(', ')', 'void'),
  \ javaapi#method(0,1,'describeContents(', ')', 'int'),
  \ javaapi#method(0,1,'writeToParcel(', 'Parcel, int)', 'void'),
  \ javaapi#method(0,1,'readFromParcel(', 'Parcel)', 'void'),
  \ ])

call javaapi#class('PointF', 'Parcelable', [
  \ javaapi#field(0,1,'x', 'float'),
  \ javaapi#field(0,1,'y', 'float'),
  \ javaapi#field(1,1,'CREATOR', 'Creator'),
  \ javaapi#method(0,1,'PointF(', ')', ''),
  \ javaapi#method(0,1,'PointF(', 'float, float)', ''),
  \ javaapi#method(0,1,'PointF(', 'Point)', ''),
  \ javaapi#method(0,1,'set(', 'float, float)', 'void'),
  \ javaapi#method(0,1,'set(', 'PointF)', 'void'),
  \ javaapi#method(0,1,'negate(', ')', 'void'),
  \ javaapi#method(0,1,'offset(', 'float, float)', 'void'),
  \ javaapi#method(0,1,'equals(', 'float, float)', 'boolean'),
  \ javaapi#method(0,1,'length(', ')', 'float'),
  \ javaapi#method(1,1,'length(', 'float, float)', 'float'),
  \ javaapi#method(0,1,'describeContents(', ')', 'int'),
  \ javaapi#method(0,1,'writeToParcel(', 'Parcel, int)', 'void'),
  \ javaapi#method(0,1,'readFromParcel(', 'Parcel)', 'void'),
  \ ])

call javaapi#class('DrawFilter', '', [
  \ javaapi#method(0,1,'DrawFilter(', ')', ''),
  \ javaapi#method(0,0,'finalize(', ') throws Throwable', 'void'),
  \ ])

call javaapi#class('PathMeasure', '', [
  \ javaapi#field(1,1,'POSITION_MATRIX_FLAG', 'int'),
  \ javaapi#field(1,1,'TANGENT_MATRIX_FLAG', 'int'),
  \ javaapi#method(0,1,'PathMeasure(', ')', ''),
  \ javaapi#method(0,1,'PathMeasure(', 'Path, boolean)', ''),
  \ javaapi#method(0,1,'setPath(', 'Path, boolean)', 'void'),
  \ javaapi#method(0,1,'getLength(', ')', 'float'),
  \ javaapi#method(0,1,'getPosTan(', 'float, float[], float[])', 'boolean'),
  \ javaapi#method(0,1,'getMatrix(', 'float, Matrix, int)', 'boolean'),
  \ javaapi#method(0,1,'getSegment(', 'float, float, Path, boolean)', 'boolean'),
  \ javaapi#method(0,1,'isClosed(', ')', 'boolean'),
  \ javaapi#method(0,1,'nextContour(', ')', 'boolean'),
  \ javaapi#method(0,0,'finalize(', ') throws Throwable', 'void'),
  \ ])

call javaapi#class('SumPathEffect', 'PathEffect', [
  \ javaapi#method(0,1,'SumPathEffect(', 'PathEffect, PathEffect)', ''),
  \ ])

call javaapi#class('PaintFlagsDrawFilter', 'DrawFilter', [
  \ javaapi#method(0,1,'PaintFlagsDrawFilter(', 'int, int)', ''),
  \ ])

