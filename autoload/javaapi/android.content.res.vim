call javaapi#namespace('android.content.res')

call javaapi#interface('XmlResourceParser', '', [
  \ javaapi#method(0,'close(', ')', 'void'),
  \ ])

call javaapi#class('Configuration', 'Configuration>', [
  \ javaapi#field(0,'fontScale', 'float'),
  \ javaapi#field(0,'mcc', 'int'),
  \ javaapi#field(0,'mnc', 'int'),
  \ javaapi#field(0,'locale', 'Locale'),
  \ javaapi#field(1,'SCREENLAYOUT_SIZE_MASK', 'int'),
  \ javaapi#field(1,'SCREENLAYOUT_SIZE_UNDEFINED', 'int'),
  \ javaapi#field(1,'SCREENLAYOUT_SIZE_SMALL', 'int'),
  \ javaapi#field(1,'SCREENLAYOUT_SIZE_NORMAL', 'int'),
  \ javaapi#field(1,'SCREENLAYOUT_SIZE_LARGE', 'int'),
  \ javaapi#field(1,'SCREENLAYOUT_SIZE_XLARGE', 'int'),
  \ javaapi#field(1,'SCREENLAYOUT_LONG_MASK', 'int'),
  \ javaapi#field(1,'SCREENLAYOUT_LONG_UNDEFINED', 'int'),
  \ javaapi#field(1,'SCREENLAYOUT_LONG_NO', 'int'),
  \ javaapi#field(1,'SCREENLAYOUT_LONG_YES', 'int'),
  \ javaapi#field(1,'SCREENLAYOUT_LAYOUTDIR_MASK', 'int'),
  \ javaapi#field(1,'SCREENLAYOUT_LAYOUTDIR_SHIFT', 'int'),
  \ javaapi#field(1,'SCREENLAYOUT_LAYOUTDIR_UNDEFINED', 'int'),
  \ javaapi#field(1,'SCREENLAYOUT_LAYOUTDIR_LTR', 'int'),
  \ javaapi#field(1,'SCREENLAYOUT_LAYOUTDIR_RTL', 'int'),
  \ javaapi#field(1,'SCREENLAYOUT_UNDEFINED', 'int'),
  \ javaapi#field(0,'screenLayout', 'int'),
  \ javaapi#field(1,'TOUCHSCREEN_UNDEFINED', 'int'),
  \ javaapi#field(1,'TOUCHSCREEN_NOTOUCH', 'int'),
  \ javaapi#field(1,'TOUCHSCREEN_STYLUS', 'int'),
  \ javaapi#field(1,'TOUCHSCREEN_FINGER', 'int'),
  \ javaapi#field(0,'touchscreen', 'int'),
  \ javaapi#field(1,'KEYBOARD_UNDEFINED', 'int'),
  \ javaapi#field(1,'KEYBOARD_NOKEYS', 'int'),
  \ javaapi#field(1,'KEYBOARD_QWERTY', 'int'),
  \ javaapi#field(1,'KEYBOARD_12KEY', 'int'),
  \ javaapi#field(0,'keyboard', 'int'),
  \ javaapi#field(1,'KEYBOARDHIDDEN_UNDEFINED', 'int'),
  \ javaapi#field(1,'KEYBOARDHIDDEN_NO', 'int'),
  \ javaapi#field(1,'KEYBOARDHIDDEN_YES', 'int'),
  \ javaapi#field(0,'keyboardHidden', 'int'),
  \ javaapi#field(1,'HARDKEYBOARDHIDDEN_UNDEFINED', 'int'),
  \ javaapi#field(1,'HARDKEYBOARDHIDDEN_NO', 'int'),
  \ javaapi#field(1,'HARDKEYBOARDHIDDEN_YES', 'int'),
  \ javaapi#field(0,'hardKeyboardHidden', 'int'),
  \ javaapi#field(1,'NAVIGATION_UNDEFINED', 'int'),
  \ javaapi#field(1,'NAVIGATION_NONAV', 'int'),
  \ javaapi#field(1,'NAVIGATION_DPAD', 'int'),
  \ javaapi#field(1,'NAVIGATION_TRACKBALL', 'int'),
  \ javaapi#field(1,'NAVIGATION_WHEEL', 'int'),
  \ javaapi#field(0,'navigation', 'int'),
  \ javaapi#field(1,'NAVIGATIONHIDDEN_UNDEFINED', 'int'),
  \ javaapi#field(1,'NAVIGATIONHIDDEN_NO', 'int'),
  \ javaapi#field(1,'NAVIGATIONHIDDEN_YES', 'int'),
  \ javaapi#field(0,'navigationHidden', 'int'),
  \ javaapi#field(1,'ORIENTATION_UNDEFINED', 'int'),
  \ javaapi#field(1,'ORIENTATION_PORTRAIT', 'int'),
  \ javaapi#field(1,'ORIENTATION_LANDSCAPE', 'int'),
  \ javaapi#field(1,'ORIENTATION_SQUARE', 'int'),
  \ javaapi#field(0,'orientation', 'int'),
  \ javaapi#field(1,'UI_MODE_TYPE_MASK', 'int'),
  \ javaapi#field(1,'UI_MODE_TYPE_UNDEFINED', 'int'),
  \ javaapi#field(1,'UI_MODE_TYPE_NORMAL', 'int'),
  \ javaapi#field(1,'UI_MODE_TYPE_DESK', 'int'),
  \ javaapi#field(1,'UI_MODE_TYPE_CAR', 'int'),
  \ javaapi#field(1,'UI_MODE_TYPE_TELEVISION', 'int'),
  \ javaapi#field(1,'UI_MODE_TYPE_APPLIANCE', 'int'),
  \ javaapi#field(1,'UI_MODE_NIGHT_MASK', 'int'),
  \ javaapi#field(1,'UI_MODE_NIGHT_UNDEFINED', 'int'),
  \ javaapi#field(1,'UI_MODE_NIGHT_NO', 'int'),
  \ javaapi#field(1,'UI_MODE_NIGHT_YES', 'int'),
  \ javaapi#field(0,'uiMode', 'int'),
  \ javaapi#field(1,'SCREEN_WIDTH_DP_UNDEFINED', 'int'),
  \ javaapi#field(0,'screenWidthDp', 'int'),
  \ javaapi#field(1,'SCREEN_HEIGHT_DP_UNDEFINED', 'int'),
  \ javaapi#field(0,'screenHeightDp', 'int'),
  \ javaapi#field(1,'SMALLEST_SCREEN_WIDTH_DP_UNDEFINED', 'int'),
  \ javaapi#field(0,'smallestScreenWidthDp', 'int'),
  \ javaapi#field(1,'DENSITY_DPI_UNDEFINED', 'int'),
  \ javaapi#field(0,'densityDpi', 'int'),
  \ javaapi#field(1,'CREATOR', 'Configuration>'),
  \ javaapi#method(0,'Configuration(', ')', 'public'),
  \ javaapi#method(0,'Configuration(', 'Configuration)', 'public'),
  \ javaapi#method(0,'isLayoutSizeAtLeast(', 'int)', 'boolean'),
  \ javaapi#method(0,'setTo(', 'Configuration)', 'void'),
  \ javaapi#method(0,'toString(', ')', 'String'),
  \ javaapi#method(0,'setToDefaults(', ')', 'void'),
  \ javaapi#method(0,'updateFrom(', 'Configuration)', 'int'),
  \ javaapi#method(0,'diff(', 'Configuration)', 'int'),
  \ javaapi#method(1,'needNewResources(', 'int, int)', 'boolean'),
  \ javaapi#method(0,'describeContents(', ')', 'int'),
  \ javaapi#method(0,'writeToParcel(', 'Parcel, int)', 'void'),
  \ javaapi#method(0,'readFromParcel(', 'Parcel)', 'void'),
  \ javaapi#method(0,'compareTo(', 'Configuration)', 'int'),
  \ javaapi#method(0,'equals(', 'Configuration)', 'boolean'),
  \ javaapi#method(0,'equals(', 'Object)', 'boolean'),
  \ javaapi#method(0,'hashCode(', ')', 'int'),
  \ javaapi#method(0,'setLocale(', 'Locale)', 'void'),
  \ javaapi#method(0,'getLayoutDirection(', ')', 'int'),
  \ javaapi#method(0,'setLayoutDirection(', 'Locale)', 'void'),
  \ javaapi#method(0,'compareTo(', 'Object)', 'int'),
  \ ])

call javaapi#class('TypedArray', '', [
  \ javaapi#method(0,'length(', ')', 'int'),
  \ javaapi#method(0,'getIndexCount(', ')', 'int'),
  \ javaapi#method(0,'getIndex(', 'int)', 'int'),
  \ javaapi#method(0,'getResources(', ')', 'Resources'),
  \ javaapi#method(0,'getText(', 'int)', 'CharSequence'),
  \ javaapi#method(0,'getString(', 'int)', 'String'),
  \ javaapi#method(0,'getNonResourceString(', 'int)', 'String'),
  \ javaapi#method(0,'getBoolean(', 'int, boolean)', 'boolean'),
  \ javaapi#method(0,'getInt(', 'int, int)', 'int'),
  \ javaapi#method(0,'getFloat(', 'int, float)', 'float'),
  \ javaapi#method(0,'getColor(', 'int, int)', 'int'),
  \ javaapi#method(0,'getColorStateList(', 'int)', 'ColorStateList'),
  \ javaapi#method(0,'getInteger(', 'int, int)', 'int'),
  \ javaapi#method(0,'getDimension(', 'int, float)', 'float'),
  \ javaapi#method(0,'getDimensionPixelOffset(', 'int, int)', 'int'),
  \ javaapi#method(0,'getDimensionPixelSize(', 'int, int)', 'int'),
  \ javaapi#method(0,'getLayoutDimension(', 'int, String)', 'int'),
  \ javaapi#method(0,'getLayoutDimension(', 'int, int)', 'int'),
  \ javaapi#method(0,'getFraction(', 'int, int, int, float)', 'float'),
  \ javaapi#method(0,'getResourceId(', 'int, int)', 'int'),
  \ javaapi#method(0,'getDrawable(', 'int)', 'Drawable'),
  \ javaapi#method(0,'getTextArray(', 'int)', 'CharSequence[]'),
  \ javaapi#method(0,'getValue(', 'int, TypedValue)', 'boolean'),
  \ javaapi#method(0,'hasValue(', 'int)', 'boolean'),
  \ javaapi#method(0,'peekValue(', 'int)', 'TypedValue'),
  \ javaapi#method(0,'getPositionDescription(', ')', 'String'),
  \ javaapi#method(0,'recycle(', ')', 'void'),
  \ javaapi#method(0,'toString(', ')', 'String'),
  \ ])

call javaapi#class('NotFoundException', '', [
  \ javaapi#method(0,'NotFoundException(', ')', 'public'),
  \ javaapi#method(0,'NotFoundException(', 'String)', 'public'),
  \ ])

call javaapi#class('Resources', '', [
  \ javaapi#method(0,'Resources(', 'AssetManager, DisplayMetrics, Configuration)', 'public'),
  \ javaapi#method(1,'getSystem(', ')', 'Resources'),
  \ javaapi#method(0,'getText(', 'int) throws NotFoundException', 'CharSequence'),
  \ javaapi#method(0,'getQuantityText(', 'int, int) throws NotFoundException', 'CharSequence'),
  \ javaapi#method(0,'getString(', 'int) throws NotFoundException', 'String'),
  \ javaapi#method(0,'getString(', 'int, ) throws NotFoundException', 'String'),
  \ javaapi#method(0,'getQuantityString(', 'int, int, ) throws NotFoundException', 'String'),
  \ javaapi#method(0,'getQuantityString(', 'int, int) throws NotFoundException', 'String'),
  \ javaapi#method(0,'getText(', 'int, CharSequence)', 'CharSequence'),
  \ javaapi#method(0,'getTextArray(', 'int) throws NotFoundException', 'CharSequence[]'),
  \ javaapi#method(0,'getStringArray(', 'int) throws NotFoundException', 'String[]'),
  \ javaapi#method(0,'getIntArray(', 'int) throws NotFoundException', 'int[]'),
  \ javaapi#method(0,'obtainTypedArray(', 'int) throws NotFoundException', 'TypedArray'),
  \ javaapi#method(0,'getDimension(', 'int) throws NotFoundException', 'float'),
  \ javaapi#method(0,'getDimensionPixelOffset(', 'int) throws NotFoundException', 'int'),
  \ javaapi#method(0,'getDimensionPixelSize(', 'int) throws NotFoundException', 'int'),
  \ javaapi#method(0,'getFraction(', 'int, int, int)', 'float'),
  \ javaapi#method(0,'getDrawable(', 'int) throws NotFoundException', 'Drawable'),
  \ javaapi#method(0,'getDrawableForDensity(', 'int, int) throws NotFoundException', 'Drawable'),
  \ javaapi#method(0,'getMovie(', 'int) throws NotFoundException', 'Movie'),
  \ javaapi#method(0,'getColor(', 'int) throws NotFoundException', 'int'),
  \ javaapi#method(0,'getColorStateList(', 'int) throws NotFoundException', 'ColorStateList'),
  \ javaapi#method(0,'getBoolean(', 'int) throws NotFoundException', 'boolean'),
  \ javaapi#method(0,'getInteger(', 'int) throws NotFoundException', 'int'),
  \ javaapi#method(0,'getLayout(', 'int) throws NotFoundException', 'XmlResourceParser'),
  \ javaapi#method(0,'getAnimation(', 'int) throws NotFoundException', 'XmlResourceParser'),
  \ javaapi#method(0,'getXml(', 'int) throws NotFoundException', 'XmlResourceParser'),
  \ javaapi#method(0,'openRawResource(', 'int) throws NotFoundException', 'InputStream'),
  \ javaapi#method(0,'openRawResource(', 'int, TypedValue) throws NotFoundException', 'InputStream'),
  \ javaapi#method(0,'openRawResourceFd(', 'int) throws NotFoundException', 'AssetFileDescriptor'),
  \ javaapi#method(0,'getValue(', 'int, TypedValue, boolean) throws NotFoundException', 'void'),
  \ javaapi#method(0,'getValueForDensity(', 'int, int, TypedValue, boolean) throws NotFoundException', 'void'),
  \ javaapi#method(0,'getValue(', 'String, TypedValue, boolean) throws NotFoundException', 'void'),
  \ javaapi#method(0,'newTheme(', ')', 'Theme'),
  \ javaapi#method(0,'obtainAttributes(', 'AttributeSet, int[])', 'TypedArray'),
  \ javaapi#method(0,'updateConfiguration(', 'Configuration, DisplayMetrics)', 'void'),
  \ javaapi#method(0,'getDisplayMetrics(', ')', 'DisplayMetrics'),
  \ javaapi#method(0,'getConfiguration(', ')', 'Configuration'),
  \ javaapi#method(0,'getIdentifier(', 'String, String, String)', 'int'),
  \ javaapi#method(0,'getResourceName(', 'int) throws NotFoundException', 'String'),
  \ javaapi#method(0,'getResourcePackageName(', 'int) throws NotFoundException', 'String'),
  \ javaapi#method(0,'getResourceTypeName(', 'int) throws NotFoundException', 'String'),
  \ javaapi#method(0,'getResourceEntryName(', 'int) throws NotFoundException', 'String'),
  \ javaapi#method(0,'parseBundleExtras(', 'XmlResourceParser, Bundle) throws XmlPullParserException, IOException', 'void'),
  \ javaapi#method(0,'parseBundleExtra(', 'String, AttributeSet, Bundle) throws XmlPullParserException', 'void'),
  \ javaapi#method(0,'getAssets(', ')', 'AssetManager'),
  \ javaapi#method(0,'flushLayoutCache(', ')', 'void'),
  \ javaapi#method(0,'finishPreloading(', ')', 'void'),
  \ ])

call javaapi#class('AutoCloseInputStream', '', [
  \ javaapi#method(0,'AutoCloseInputStream(', 'AssetFileDescriptor) throws IOException', 'public'),
  \ javaapi#method(0,'available(', ') throws IOException', 'int'),
  \ javaapi#method(0,'read(', ') throws IOException', 'int'),
  \ javaapi#method(0,'read(', 'byte[], int, int) throws IOException', 'int'),
  \ javaapi#method(0,'read(', 'byte[]) throws IOException', 'int'),
  \ javaapi#method(0,'skip(', 'long) throws IOException', 'long'),
  \ javaapi#method(0,'mark(', 'int)', 'void'),
  \ javaapi#method(0,'markSupported(', ')', 'boolean'),
  \ javaapi#method(0,'reset(', ') throws IOException', 'void'),
  \ ])

call javaapi#class('AssetManager', '', [
  \ javaapi#field(1,'ACCESS_UNKNOWN', 'int'),
  \ javaapi#field(1,'ACCESS_RANDOM', 'int'),
  \ javaapi#field(1,'ACCESS_STREAMING', 'int'),
  \ javaapi#field(1,'ACCESS_BUFFER', 'int'),
  \ javaapi#method(0,'close(', ')', 'void'),
  \ javaapi#method(0,'open(', 'String) throws IOException', 'InputStream'),
  \ javaapi#method(0,'open(', 'String, int) throws IOException', 'InputStream'),
  \ javaapi#method(0,'openFd(', 'String) throws IOException', 'AssetFileDescriptor'),
  \ javaapi#method(0,'list(', 'String) throws IOException', 'String[]'),
  \ javaapi#method(0,'openNonAssetFd(', 'String) throws IOException', 'AssetFileDescriptor'),
  \ javaapi#method(0,'openNonAssetFd(', 'int, String) throws IOException', 'AssetFileDescriptor'),
  \ javaapi#method(0,'openXmlResourceParser(', 'String) throws IOException', 'XmlResourceParser'),
  \ javaapi#method(0,'openXmlResourceParser(', 'int, String) throws IOException', 'XmlResourceParser'),
  \ javaapi#method(0,'getLocales(', ')', 'String[]'),
  \ ])

call javaapi#class('AssetFileDescriptor', 'Parcelable', [
  \ javaapi#field(1,'UNKNOWN_LENGTH', 'long'),
  \ javaapi#field(1,'CREATOR', 'AssetFileDescriptor>'),
  \ javaapi#method(0,'AssetFileDescriptor(', 'ParcelFileDescriptor, long, long)', 'public'),
  \ javaapi#method(0,'getParcelFileDescriptor(', ')', 'ParcelFileDescriptor'),
  \ javaapi#method(0,'getFileDescriptor(', ')', 'FileDescriptor'),
  \ javaapi#method(0,'getStartOffset(', ')', 'long'),
  \ javaapi#method(0,'getLength(', ')', 'long'),
  \ javaapi#method(0,'getDeclaredLength(', ')', 'long'),
  \ javaapi#method(0,'close(', ') throws IOException', 'void'),
  \ javaapi#method(0,'createInputStream(', ') throws IOException', 'FileInputStream'),
  \ javaapi#method(0,'createOutputStream(', ') throws IOException', 'FileOutputStream'),
  \ javaapi#method(0,'toString(', ')', 'String'),
  \ javaapi#method(0,'describeContents(', ')', 'int'),
  \ javaapi#method(0,'writeToParcel(', 'Parcel, int)', 'void'),
  \ ])

call javaapi#class('ObbScanner', '', [
  \ javaapi#method(1,'getObbInfo(', 'String) throws IOException', 'ObbInfo'),
  \ ])

call javaapi#class('ObbInfo', 'Parcelable', [
  \ javaapi#field(1,'OBB_OVERLAY', 'int'),
  \ javaapi#field(0,'filename', 'String'),
  \ javaapi#field(0,'packageName', 'String'),
  \ javaapi#field(0,'version', 'int'),
  \ javaapi#field(0,'flags', 'int'),
  \ javaapi#field(1,'CREATOR', 'ObbInfo>'),
  \ javaapi#method(0,'toString(', ')', 'String'),
  \ javaapi#method(0,'describeContents(', ')', 'int'),
  \ javaapi#method(0,'writeToParcel(', 'Parcel, int)', 'void'),
  \ ])

call javaapi#class('AssetInputStream', '', [
  \ javaapi#method(0,'getAssetInt(', ')', 'int'),
  \ javaapi#method(0,'read(', ') throws IOException', 'int'),
  \ javaapi#method(0,'markSupported(', ')', 'boolean'),
  \ javaapi#method(0,'available(', ') throws IOException', 'int'),
  \ javaapi#method(0,'close(', ') throws IOException', 'void'),
  \ javaapi#method(0,'mark(', 'int)', 'void'),
  \ javaapi#method(0,'reset(', ') throws IOException', 'void'),
  \ javaapi#method(0,'read(', 'byte[]) throws IOException', 'int'),
  \ javaapi#method(0,'read(', 'byte[], int, int) throws IOException', 'int'),
  \ javaapi#method(0,'skip(', 'long) throws IOException', 'long'),
  \ ])

call javaapi#class('ColorStateList', 'Parcelable', [
  \ javaapi#field(1,'CREATOR', 'ColorStateList>'),
  \ javaapi#method(0,'ColorStateList(', 'int[][], int[])', 'public'),
  \ javaapi#method(1,'valueOf(', 'int)', 'ColorStateList'),
  \ javaapi#method(1,'createFromXml(', 'Resources, XmlPullParser) throws XmlPullParserException, IOException', 'ColorStateList'),
  \ javaapi#method(0,'withAlpha(', 'int)', 'ColorStateList'),
  \ javaapi#method(0,'isStateful(', ')', 'boolean'),
  \ javaapi#method(0,'getColorForState(', 'int[], int)', 'int'),
  \ javaapi#method(0,'getDefaultColor(', ')', 'int'),
  \ javaapi#method(0,'toString(', ')', 'String'),
  \ javaapi#method(0,'describeContents(', ')', 'int'),
  \ javaapi#method(0,'writeToParcel(', 'Parcel, int)', 'void'),
  \ ])

call javaapi#class('Theme', '', [
  \ javaapi#method(0,'applyStyle(', 'int, boolean)', 'void'),
  \ javaapi#method(0,'setTo(', 'Theme)', 'void'),
  \ javaapi#method(0,'obtainStyledAttributes(', 'int[])', 'TypedArray'),
  \ javaapi#method(0,'obtainStyledAttributes(', 'int, int[]) throws NotFoundException', 'TypedArray'),
  \ javaapi#method(0,'obtainStyledAttributes(', 'AttributeSet, int[], int, int)', 'TypedArray'),
  \ javaapi#method(0,'resolveAttribute(', 'int, TypedValue, boolean)', 'boolean'),
  \ javaapi#method(0,'dump(', 'int, String, String)', 'void'),
  \ ])

call javaapi#class('AutoCloseOutputStream', '', [
  \ javaapi#method(0,'AutoCloseOutputStream(', 'AssetFileDescriptor) throws IOException', 'public'),
  \ javaapi#method(0,'write(', 'byte[], int, int) throws IOException', 'void'),
  \ javaapi#method(0,'write(', 'byte[]) throws IOException', 'void'),
  \ javaapi#method(0,'write(', 'int) throws IOException', 'void'),
  \ ])

